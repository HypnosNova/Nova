!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("three"),require("lodash")):"function"==typeof define&&define.amd?define(["exports","three","lodash"],t):t(e.NOVA={},e.THREE,e._)}(this,function(e,m,u){"use strict";var i={parent:document.body,setCommonCSS:!0,autoStart:!0,autoResize:!0,VRSupport:!1,renderer:{canvas:void 0,clearColor:0,clearAlpha:1,pixelRatio:window.devicePixelRatio||1,precision:"highp",antialias:!0,alpha:!1,logarithmicDepthBuffer:!1,preserveDrawingBuffer:!1},normalEventList:["click","mousedown","mouseup","touchstart","touchend","touchmove","mousemove"],hammerEventList:"press tap pressup pan swipe"},p=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")},d=function(){function r(e,t){for(var a=0;a<t.length;a++){var r=t[a];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(e,t,a){return t&&r(e.prototype,t),a&&r(e,a),e}}(),l=function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)},h=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t},c=function(e,t){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return function(e,t){var a=[],r=!0,i=!1,n=void 0;try{for(var o,s=e[Symbol.iterator]();!(r=(o=s.next()).done)&&(a.push(o.value),!t||a.length!==t);r=!0);}catch(e){i=!0,n=e}finally{try{!r&&s.return&&s.return()}finally{if(i)throw n}}return a}(e,t);throw new TypeError("Invalid attempt to destructure non-iterable instance")},a=function(e){function a(e){p(this,a);var t=h(this,(a.__proto__||Object.getPrototypeOf(a)).call(this,e));return t.name="NotFunctionError",t.message=e||"The object is not a function.",t}return l(a,e),a}(Error),o=function(){function t(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:1;p(this,t),this.disable=!1,this.times=0,this.cycleLevel=e<=1?1:e,this.functionMap=new Map}return d(t,[{key:"update",value:function(t){this.times++,this.disable||this.times%this.cycleLevel!=0||this.functionMap.forEach(function(e){e(t)})}},{key:"add",value:function(e,t){if("function"!=typeof e)throw new a;if(!t)return t=Symbol(),this.functionMap.set(t,e),t;this.functionMap.set(t,e)}},{key:"removeAll",value:function(){this.functionMap.clear()}},{key:"remove",value:function(a){var r=this;return"function"==typeof a?(this.functionMap.forEach(function(e,t){if(e===a)return r.functionMap.delete(t)}),!1):this.functionMap.delete(a)}}]),t}(),n=function(){function u(e){var t=this;p(this,u),(e.eventManager=this).world=e,this.disable=!1,this.isDeep=!0,this.receivers=e.receivers,this.raycaster=new m.Raycaster,this.centerRaycaster=new m.Raycaster,this.selectedObj=null,this.centerSelectedObj=null,this.isDetectingEnter=!0;var a=e.app.options.normalEventList,r=!0,i=!1,n=void 0;try{for(var o,s=a[Symbol.iterator]();!(r=(o=s.next()).done);r=!0){var l=o.value;e.app.parent.addEventListener(l,function(e){t.disable||t.raycastCheck(t.toNovaEvent(e))})}}catch(e){i=!0,n=e}finally{try{!r&&s.return&&s.return()}finally{if(i)throw n}}try{if(void 0===window.Hammer)return}catch(e){return void console.warn("Hammer没有引入，手势事件无法使用，只能使用基础的交互事件。")}this.hammer=new window.Hammer(e.app.renderer.domElement),this.hammer.on(e.app.options.hammerEventList,function(e){t.disable||t.raycastCheck(e)})}return d(u,[{key:"toNovaEvent",value:function(e){return{changedPointers:[e],center:new m.Vector2(e.clientX,e.clientY),type:e.type,target:e.target}}},{key:"raycastCheck",value:function(e){var t=new m.Vector2(e.center.x/this.world.app.getWorldWidth()*2-1,1-e.center.y/this.world.app.getWorldHeight()*2);this.raycaster.setFromCamera(t,this.world.camera);var a=void 0;this.world.receivers instanceof Array?(a=new Map).set(Symbol(),this.world.receivers):this.world.receivers instanceof Map&&(a=this.world.receivers);var r=void 0,i=!0,n=!1,o=void 0;try{for(var s,l=a.values()[Symbol.iterator]();!(i=(s=l.next()).done);i=!0){for(var u=s.value,d=this.raycaster.intersectObjects(u,this.isDeep),f=0;f<d.length;f++)if(!d[f].object.isPenetrated&&d[f].object.events&&d[f].object.events[e.type]){r=d[f];break}return r&&r.object.events[e.type].run(e,r),r}}catch(e){n=!0,o=e}finally{try{!i&&l.return&&l.return()}finally{if(n)throw o}}}}]),u}(),f=function(){function i(e,t,a){var r=this;p(this,i),this.app=e,this.scene=new m.Scene,this.logicLoop=new o,this.renderLoop=new o,this.camera=t||new m.PerspectiveCamera(45,e.getWorldWidth()/e.getWorldHeight(),.01,5e3),this.receivers=this.scene.children,this.eventManager=new n(this),this.renderTargetParameters={minFilter:m.LinearFilter,magFilter:m.LinearFilter,format:m.RGBFormat,stencilBuffer:!1},this.isRTT=!1,this.clearColor=a||0,this.fbo=new m.WebGLRenderTarget(this.app.getWorldWidth(),this.app.getWorldHeight(),this.renderTargetParameters),this.defaultRenderID=Symbol(),this.renderLoop.add(function(){r.isRTT?r.app.renderer.render(r.scene,r.camera,r.fbo,!0):r.app.renderer.render(r.scene,r.camera)},this.defaultRenderID),this.defaultUpdateID=Symbol()}return d(i,[{key:"update",value:function(e){this.logicLoop.update(e),this.renderLoop.update(e)}},{key:"resize",value:function(e,t){"PerspectiveCamera"===this.camera.type?this.camera.aspect=e/t:(this.camera.left=-e/2,this.camera.right=e/2,this.camera.top=t/2,this.camera.bottom=-t/2),this.camera.updateProjectionMatrix()}}]),i}();console.log("Nova framework for Three.js, version: %c 0.1.8b","color:blue");var s=function(){function t(e){p(this,t),this.app=e,this.display=void 0,this.polyfill=void 0,this.isOpenVR=!1,this.vrEffect=void 0,this.getVRDisplay(),this.createVREffect()}return d(t,[{key:"createVREffect",value:function(){this.vrEffect||(window.THREE.VREffect?(this.vrEffect=new window.THREE.VREffect(this.app.renderer),this.vrEffect.setSize(this.app.renderer.domElement.clientWidth,this.app.renderer.domElement.clientHeight,!1),this.vrEffect.isOpened=!1,this.vrEffect.updateId=Symbol()):console.warn("未引入VREffect.js，无法创建VR模式。"))}},{key:"setPolyfill",value:function(){if(!this.polyfill)if(window.WebVRPolyfill){var e=function(){var e={},t=window.location.search.substring(1);if(""===t)return e;for(var a=t.split("&"),r=void 0,i=void 0,n=void 0,o=0;o<a.length;o++)i=(r=a[o].split("="))[0],n=r[1],e[i]="true"===n||"false"!==n&&parseFloat(n);return e}();this.polyfill=new window.WebVRPolyfill(e)}else console.warn("未引入WebVRPolyfill.js，无法创建VR兼容模式。")}},{key:"getVRDisplay",value:function(){var t=this;if(navigator.getVRDisplays||this.setPolyfill(),navigator.getVRDisplays)return navigator.getVRDisplays().then(function(e){return e.length?(t.display=e[0],t.display):"no"},function(){return"no"})}},{key:"open",value:function(){var e=this;this.display&&this.vrEffect?(this.app.renderLoop.add(function(){e.vrEffect.render(e.app.world.scene,e.app.world.camera)},this.vrEffect.updateId),this.display.requestPresent([{source:this.app.renderer.domElement}])):console.warn("未发现VR设备或浏览器不兼容，无法进入VR模式。")}},{key:"close",value:function(){this.app.renderLoop.remove(this.vrEffect.updateId)}}]),t}(),t=function(){function r(){var e=this,t=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{};p(this,r),this.options=u.defaultsDeep(t,i);var a=this.options.renderer;this.options.setCommonCSS&&this.setCommonCSS(),this.parent=a.canvas?a.canvas.parentElement:this.options.parent,this.renderer=new m.WebGLRenderer({canvas:a.canvas,antialias:a.antialias,precision:a.precision,alpha:a.alpha,logarithmicDepthBuffer:a.logarithmicDepthBuffer,preserveDrawingBuffer:a.preserveDrawingBuffer}),this.renderer.setClearColor(a.clearColor,a.clearAlpha),this.world=new f(this),this.state=0,this.logicLoop=new o,this.renderLoop=new o,window.addEventListener("resize",function(){e.resize()}),this.options.autoStart&&this.start(),this.options.VRSupport&&(this.VR=new s(this))}return d(r,[{key:"resize",value:function(){var e=this.getWorldWidth(),t=this.getWorldHeight();this.world.resize(e,t),this.renderer.setSize(e,t),this.renderer.setPixelRatio(this.options.renderer.pixelRatio)}},{key:"update",value:function(e){var t=this;1===this.state&&(this.logicLoop.update(e),this.world.update(e),this.renderLoop.update(e)),requestAnimationFrame(function(){t.update()})}},{key:"setCommonCSS",value:function(){document.write("<style>*{margin:0;padding:0} body{overflow:hidden}</style>")}},{key:"getWorldWidth",value:function(){return this.parent===document.body?window.innerWidth:this.parent.offsetWidth}},{key:"getWorldHeight",value:function(){return this.parent===document.body?window.innerHeight:this.parent.offsetHeight}},{key:"start",value:function(){0===this.state&&(this.state=1,this.parent.appendChild(this.renderer.domElement),this.resize(),this.update())}},{key:"resume",value:function(){2===this.state&&(this.state=1)}},{key:"pause",value:function(){1===this.state&&(this.state=2)}},{key:"destroy",value:function(){this.world.destroy()}},{key:"openFullScreen",value:function(){var e=this.parent;return this.isFullScreen=!0,e.requestFullscreen?e.requestFullscreen():e.msRequestFullscreen?e.msRequestFullscreen():e.mozRequestFullScreen?e.mozRequestFullScreen():e.webkitRequestFullscreen?e.webkitRequestFullscreen():this.isFullScreen=!1,this.isFullScreen}},{key:"closeFullScreen",value:function(){var e=document;return this.isFullScreen=!1,e.exitFullscreen?e.exitFullscreen():e.mozCancelFullScreen?e.mozCancelFullScreen():e.webkitExitFullScreen?e.webkitExitFullScreen():e.msExitFullscreen?e.msExitFullscreen():e.webkitCancelFullScreen?e.webkitCancelFullScreen():e.webkitExitFullScreen&&e.webkitCancelFullScreen(),this.isFullScreen}},{key:"toggleFullScreen",value:function(){this.isFullScreen?this.closeFullScreen():this.openFullScreen()}},{key:"screenshot",value:function(){var e=new Image;this.renderer.render(this.world.scene,this.world.camera),e.src=this.renderer.domElement.toDataURL();var t=window.open("","");t.document.title="Nova Screenshot",t.document.body.appendChild(e)}},{key:"sceneCoordinateToCanvasCoordinate",value:function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:this.world.camera,a=(e instanceof m.Vector3?e.clone():e.position.clone()).project(t),r=this.getWorldWidth()/2,i=this.getWorldHeight()/2;return new m.Vector2(Math.round(a.x*r+r),Math.round(-a.y*i+i))}}]),r}(),r=function(){function a(e){for(var t in p(this,a),e)this[t]=e[t],this.bindMap=new Map,this.defineReactive(this,t,this[t])}return d(a,[{key:"add",value:function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{};this.bindMap.set(e,t)}},{key:"remove",value:function(e){this.bindMap.delete(e)}},{key:"defineReactive",value:function(d,f,h){Object.defineProperty(d,f,{enumerable:!0,configurable:!1,get:function(){return h},set:function(e){h=e;var t=d.bindMap,a=!0,r=!1,i=void 0;try{for(var n,o=t[Symbol.iterator]();!(a=(n=o.next()).done);a=!0){var s=c(n.value,2),l=s[0],u=s[1];void 0!==l[f]&&(l[f]=u[f]?u[f](h,l):h)}}catch(e){r=!0,i=e}finally{try{!a&&o.return&&o.return()}finally{if(r)throw i}}}})}}]),a}(),v=function(){function n(e,t,a,r){var i=this;p(this,n),this.width=a,this.height=r,this.app=e,this.scene=new m.Scene,this.logicLoop=new o,this.renderLoop=new o,this.camera=t||new m.PerspectiveCamera(45,this.width/this.height,.01,5e3),this.receivers=this.scene.children,this.renderTargetParameters={minFilter:m.LinearFilter,magFilter:m.LinearFilter,format:m.RGBFormat,stencilBuffer:!1},this.clearColor=0,this.fbo=new m.WebGLRenderTarget(this.width,this.height,this.renderTargetParameters),this.defaultRenderID=Symbol(),this.defaultUpdateID=Symbol(),this.resize(),this.renderLoop.add(function(){i.app.renderer.render(i.scene,i.camera,i.fbo,!0)},this.defaultRenderID)}return d(n,[{key:"update",value:function(e){this.logicLoop.update(e),this.renderLoop.update(e)}},{key:"resize",value:function(){"PerspectiveCamera"===this.camera.type?this.camera.aspect=this.width/this.height:(this.camera.left=-this.width/2,this.camera.right=this.width/2,this.camera.top=this.height/2,this.camera.bottom=-this.height/2),this.camera.updateProjectionMatrix()}}]),n}(),x=function(){function a(e,t){p(this,a),this.option=t,this.fullWidth=e.app.getWorldWidth(),this.fullHeight=e.app.getWorldHeight(),this.renderer=new m.WebGLRenderer,this.world=e,this.canvas=this.renderer.domElement,this.renderer.setSize(this.fullWidth*t.width,this.fullHeight*t.height),this.renderer.setPixelRatio(window.devicePixelRatio)}return d(a,[{key:"resize",value:function(e){this.option=e,this.fullWidth=this.world.app.getWorldWidth(),this.fullHeight=this.world.app.getWorldHeight(),this.renderer.setSize(this.fullWidth*e.width,this.fullHeight*e.height),this.setViewOffset()}},{key:"setViewOffset",value:function(){var e=this.fullWidth*this.option.left,t=this.fullHeight*this.option.top,a=this.fullWidth*this.option.width,r=this.fullHeight*this.option.height;this.world.camera.setViewOffset(this.fullWidth,this.fullHeight,e,t,a,r)}},{key:"render",value:function(){this.setViewOffset(),this.renderer.render(this.world.scene,this.world.camera)}}]),a}(),A=1,g=2,F=4,_=8,T=function(){function n(e){p(this,n),this.mode=F,this.data=e,this.parsedData=[];for(var t=0,a=this.data.length;t<a;t++){var r=[],i=this.data.charCodeAt(t);65536<i?(r[0]=240|(1835008&i)>>>18,r[1]=128|(258048&i)>>>12,r[2]=128|(4032&i)>>>6,r[3]=128|63&i):2048<i?(r[0]=224|(61440&i)>>>12,r[1]=128|(4032&i)>>>6,r[2]=128|63&i):128<i?(r[0]=192|(1984&i)>>>6,r[1]=128|63&i):r[0]=i,this.parsedData.push(r)}this.parsedData=Array.prototype.concat.apply([],this.parsedData),this.parsedData.length!==this.data.length&&(this.parsedData.unshift(191),this.parsedData.unshift(187),this.parsedData.unshift(239))}return d(n,[{key:"getLength",value:function(){return this.parsedData.length}},{key:"write",value:function(e){for(var t=0,a=this.parsedData.length;t<a;t++)e.put(this.parsedData[t],8)}}]),n}(),P=function(){function i(e,t){p(this,i),this.typeNumber=e,this.errorCorrectLevel=t,this.modules=void 0,this.moduleCount=0,this.dataCache=void 0,this.dataList=[]}return d(i,[{key:"addData",value:function(e){var t=new T(e);this.dataList.push(t),this.dataCache=void 0}},{key:"isDark",value:function(e,t){if(e<0||this.moduleCount<=e||t<0||this.moduleCount<=t)throw new Error(e+","+t);return this.modules[e][t]}},{key:"getModuleCount",value:function(){return this.moduleCount}},{key:"make",value:function(){this.makeImpl(!1,this.getBestMaskPattern())}},{key:"makeImpl",value:function(e,t){this.moduleCount=4*this.typeNumber+17,this.modules=new Array(this.moduleCount);for(var a=0;a<this.moduleCount;a++){this.modules[a]=new Array(this.moduleCount);for(var r=0;r<this.moduleCount;r++)this.modules[a][r]=void 0}this.setupPositionProbePattern(0,0),this.setupPositionProbePattern(this.moduleCount-7,0),this.setupPositionProbePattern(0,this.moduleCount-7),this.setupPositionAdjustPattern(),this.setupTimingPattern(),this.setupTypeInfo(e,t),7<=this.typeNumber&&this.setupTypeNumber(e),void 0===this.dataCache&&(this.dataCache=i.createData(this.typeNumber,this.errorCorrectLevel,this.dataList)),this.mapData(this.dataCache,t)}},{key:"setupPositionProbePattern",value:function(e,t){for(var a=-1;a<=7;a++)if(!(e+a<=-1||this.moduleCount<=e+a))for(var r=-1;r<=7;r++)t+r<=-1||this.moduleCount<=t+r||(this.modules[e+a][t+r]=0<=a&&a<=6&&(0===r||6===r)||0<=r&&r<=6&&(0===a||6===a)||2<=a&&a<=4&&2<=r&&r<=4)}},{key:"getBestMaskPattern",value:function(){for(var e=0,t=0,a=0;a<8;a++){this.makeImpl(!0,a);var r=U.getLostPoint(this);(0===a||r<e)&&(e=r,t=a)}return t}},{key:"createMovieClip",value:function(e,t,a){var r=e.createEmptyMovieClip(t,a);this.make();for(var i=0;i<this.modules.length;i++)for(var n=1*i,o=0;o<this.modules[i].length;o++){var s=1*o;this.modules[i][o]&&(r.beginFill(0,100),r.moveTo(s,n),r.lineTo(s+1,n),r.lineTo(s+1,n+1),r.lineTo(s,n+1),r.endFill())}return r}},{key:"setupTimingPattern",value:function(){for(var e=8;e<this.moduleCount-8;e++)void 0===this.modules[e][6]&&(this.modules[e][6]=e%2==0);for(var t=8;t<this.moduleCount-8;t++)void 0===this.modules[6][t]&&(this.modules[6][t]=t%2==0)}},{key:"setupPositionAdjustPattern",value:function(){for(var e=U.getPatternPosition(this.typeNumber),t=0;t<e.length;t++)for(var a=0;a<e.length;a++){var r=e[t],i=e[a];if(void 0===this.modules[r][i])for(var n=-2;n<=2;n++)for(var o=-2;o<=2;o++)this.modules[r+n][i+o]=-2===n||2===n||-2===o||2===o||0===n&&0==o}}},{key:"setupTypeNumber",value:function(e){for(var t=U.getBCHTypeNumber(this.typeNumber),a=0;a<18;a++){var r=!e&&1==(t>>a&1);this.modules[Math.floor(a/3)][a%3+this.moduleCount-8-3]=r}for(var i=0;i<18;i++){var n=!e&&1==(t>>i&1);this.modules[i%3+this.moduleCount-8-3][Math.floor(i/3)]=n}}},{key:"setupTypeInfo",value:function(e,t){for(var a=this.errorCorrectLevel<<3|t,r=U.getBCHTypeInfo(a),i=0;i<15;i++){var n=!e&&1==(r>>i&1);i<6?this.modules[i][8]=n:i<8?this.modules[i+1][8]=n:this.modules[this.moduleCount-15+i][8]=n}for(var o=0;o<15;o++){var s=!e&&1==(r>>o&1);o<8?this.modules[8][this.moduleCount-o-1]=s:o<9?this.modules[8][15-o-1+1]=s:this.modules[8][15-o-1]=s}this.modules[this.moduleCount-8][8]=!e}},{key:"mapData",value:function(e,t){for(var a=-1,r=this.moduleCount-1,i=7,n=0,o=this.moduleCount-1;0<o;o-=2)for(6===o&&o--;;){for(var s=0;s<2;s++)if(void 0===this.modules[r][o-s]){var l=!1;n<e.length&&(l=1==(e[n]>>>i&1)),U.getMask(t,r,o-s)&&(l=!l),this.modules[r][o-s]=l,-1===--i&&(n++,i=7)}if((r+=a)<0||this.moduleCount<=r){r-=a,a=-a;break}}}}]),i}();P.PAD0=236,P.PAD1=17,P.createData=function(e,t,a){for(var r=B.getRSBlocks(e,t),i=new Q,n=0;n<a.length;n++){var o=a[n];i.put(o.mode,4),i.put(o.getLength(),U.getLengthInBits(o.mode,e)),o.write(i)}for(var s=0,l=0;l<r.length;l++)s+=r[l].dataCount;if(i.getLengthInBits()>8*s)throw new Error("code length overflow. ("+i.getLengthInBits()+">"+8*s+")");for(i.getLengthInBits()+4<=8*s&&i.put(0,4);i.getLengthInBits()%8!=0;)i.putBit(!1);for(;!(i.getLengthInBits()>=8*s||(i.put(P.PAD0,8),i.getLengthInBits()>=8*s));)i.put(P.PAD1,8);return P.createBytes(i,r)},P.createBytes=function(e,t){for(var a=0,r=0,i=0,n=new Array(t.length),o=new Array(t.length),s=0;s<t.length;s++){var l=t[s].dataCount,u=t[s].totalCount-l;r=Math.max(r,l),i=Math.max(i,u),n[s]=new Array(l);for(var d=0;d<n[s].length;d++)n[s][d]=255&e.buffer[d+a];a+=l;var f=U.getErrorCorrectPolynomial(u),h=new R(n[s],f.getLength()-1).mod(f);o[s]=new Array(f.getLength()-1);for(var c=0;c<o[s].length;c++){var m=c+h.getLength()-o[s].length;o[s][c]=0<=m?h.get(m):0}}for(var p=0,v=0;v<t.length;v++)p+=t[v].totalCount;for(var x=new Array(p),A=0,g=0;g<r;g++)for(var F=0;F<t.length;F++)g<n[F].length&&(x[A++]=n[F][g]);for(var _=0;_<i;_++)for(var T=0;T<t.length;T++)_<o[T].length&&(x[A++]=o[T][_]);return x};for(var y={L:1,M:0,Q:3,H:2},S=0,L=1,w=2,E=3,N=4,b=5,I=6,M=7,U={PATTERN_POSITION_TABLE:[[],[6,18],[6,22],[6,26],[6,30],[6,34],[6,22,38],[6,24,42],[6,26,46],[6,28,50],[6,30,54],[6,32,58],[6,34,62],[6,26,46,66],[6,26,48,70],[6,26,50,74],[6,30,54,78],[6,30,56,82],[6,30,58,86],[6,34,62,90],[6,28,50,72,94],[6,26,50,74,98],[6,30,54,78,102],[6,28,54,80,106],[6,32,58,84,110],[6,30,58,86,114],[6,34,62,90,118],[6,26,50,74,98,122],[6,30,54,78,102,126],[6,26,52,78,104,130],[6,30,56,82,108,134],[6,34,60,86,112,138],[6,30,58,86,114,142],[6,34,62,90,118,146],[6,30,54,78,102,126,150],[6,24,50,76,102,128,154],[6,28,54,80,106,132,158],[6,32,58,84,110,136,162],[6,26,54,82,110,138,166],[6,30,58,86,114,142,170]],G15:1335,G18:7973,G15_MASK:21522,getBCHTypeInfo:function(e){for(var t=e<<10;0<=U.getBCHDigit(t)-U.getBCHDigit(U.G15);)t^=U.G15<<U.getBCHDigit(t)-U.getBCHDigit(U.G15);return(e<<10|t)^U.G15_MASK},getBCHTypeNumber:function(e){for(var t=e<<12;0<=U.getBCHDigit(t)-U.getBCHDigit(U.G18);)t^=U.G18<<U.getBCHDigit(t)-U.getBCHDigit(U.G18);return e<<12|t},getBCHDigit:function(e){for(var t=0;0!==e;)t++,e>>>=1;return t},getPatternPosition:function(e){return U.PATTERN_POSITION_TABLE[e-1]},getMask:function(e,t,a){switch(e){case S:return(t+a)%2==0;case L:return t%2==0;case w:return a%3==0;case E:return(t+a)%3==0;case N:return(Math.floor(t/2)+Math.floor(a/3))%2==0;case b:return t*a%2+t*a%3==0;case I:return(t*a%2+t*a%3)%2==0;case M:return(t*a%3+(t+a)%2)%2==0;default:throw new Error("bad maskPattern:"+e)}},getErrorCorrectPolynomial:function(e){for(var t=new R([1],0),a=0;a<e;a++)t=t.multiply(new R([1,X.gexp(a)],0));return t},getLengthInBits:function(e,t){if(1<=t&&t<10)switch(e){case A:return 10;case g:return 9;case F:case _:return 8;default:throw new Error("mode:"+e)}else if(t<27)switch(e){case A:return 12;case g:return 11;case F:return 16;case _:return 10;default:throw new Error("mode:"+e)}else{if(!(t<41))throw new Error("type:"+t);switch(e){case A:return 14;case g:return 13;case F:return 16;case _:return 12;default:throw new Error("mode:"+e)}}},getLostPoint:function(e){for(var t=e.getModuleCount(),a=0,r=0;r<t;r++)for(var i=0;i<t;i++){for(var n=0,o=e.isDark(r,i),s=-1;s<=1;s++)if(!(r+s<0||t<=r+s))for(var l=-1;l<=1;l++)i+l<0||t<=i+l||0===s&&0===l||o===e.isDark(r+s,i+l)&&n++;5<n&&(a+=3+n-5)}for(var u=0;u<t-1;u++)for(var d=0;d<t-1;d++){var f=0;e.isDark(u,d)&&f++,e.isDark(u+1,d)&&f++,e.isDark(u,d+1)&&f++,e.isDark(u+1,d+1)&&f++,0!==f&&4!==f||(a+=3)}for(var h=0;h<t;h++)for(var c=0;c<t-6;c++)e.isDark(h,c)&&!e.isDark(h,c+1)&&e.isDark(h,c+2)&&e.isDark(h,c+3)&&e.isDark(h,c+4)&&!e.isDark(h,c+5)&&e.isDark(h,c+6)&&(a+=40);for(var m=0;m<t;m++)for(var p=0;p<t-6;p++)e.isDark(p,m)&&!e.isDark(p+1,m)&&e.isDark(p+2,m)&&e.isDark(p+3,m)&&e.isDark(p+4,m)&&!e.isDark(p+5,m)&&e.isDark(p+6,m)&&(a+=40);for(var v=0,x=0;x<t;x++)for(var A=0;A<t;A++)e.isDark(A,x)&&v++;return a+=10*(Math.abs(100*v/t/t-50)/5)}},X={glog:function(e){if(e<1)throw new Error("glog("+e+")");return X.LOG_TABLE[e]},gexp:function(e){for(;e<0;)e+=255;for(;256<=e;)e-=255;return X.EXP_TABLE[e]},EXP_TABLE:new Array(256),LOG_TABLE:new Array(256)},C=0;C<8;C++)X.EXP_TABLE[C]=1<<C;for(var D=8;D<256;D++)X.EXP_TABLE[D]=X.EXP_TABLE[D-4]^X.EXP_TABLE[D-5]^X.EXP_TABLE[D-6]^X.EXP_TABLE[D-8];for(var O=0;O<255;O++)X.LOG_TABLE[X.EXP_TABLE[O]]=O;function R(e,t){if(void 0===e.length)throw new Error(e.length+"/"+t);for(var a=0;a<e.length&&0===e[a];)a++;this.num=new Array(e.length-a+t);for(var r=0;r<e.length-a;r++)this.num[r]=e[r+a]}function B(e,t){this.totalCount=e,this.dataCount=t}function Q(){this.buffer=[],this.length=0}R.prototype={get:function(e){return this.num[e]},getLength:function(){return this.num.length},multiply:function(e){for(var t=new Array(this.getLength()+e.getLength()-1),a=0;a<this.getLength();a++)for(var r=0;r<e.getLength();r++)t[a+r]^=X.gexp(X.glog(this.get(a))+X.glog(e.get(r)));return new R(t,0)},mod:function(e){if(this.getLength()-e.getLength()<0)return this;for(var t=X.glog(this.get(0))-X.glog(e.get(0)),a=new Array(this.getLength()),r=0;r<this.getLength();r++)a[r]=this.get(r);for(var i=0;i<e.getLength();i++)a[i]^=X.gexp(X.glog(e.get(i))+t);return new R(a,0).mod(e)}},B.RS_BLOCK_TABLE=[[1,26,19],[1,26,16],[1,26,13],[1,26,9],[1,44,34],[1,44,28],[1,44,22],[1,44,16],[1,70,55],[1,70,44],[2,35,17],[2,35,13],[1,100,80],[2,50,32],[2,50,24],[4,25,9],[1,134,108],[2,67,43],[2,33,15,2,34,16],[2,33,11,2,34,12],[2,86,68],[4,43,27],[4,43,19],[4,43,15],[2,98,78],[4,49,31],[2,32,14,4,33,15],[4,39,13,1,40,14],[2,121,97],[2,60,38,2,61,39],[4,40,18,2,41,19],[4,40,14,2,41,15],[2,146,116],[3,58,36,2,59,37],[4,36,16,4,37,17],[4,36,12,4,37,13],[2,86,68,2,87,69],[4,69,43,1,70,44],[6,43,19,2,44,20],[6,43,15,2,44,16],[4,101,81],[1,80,50,4,81,51],[4,50,22,4,51,23],[3,36,12,8,37,13],[2,116,92,2,117,93],[6,58,36,2,59,37],[4,46,20,6,47,21],[7,42,14,4,43,15],[4,133,107],[8,59,37,1,60,38],[8,44,20,4,45,21],[12,33,11,4,34,12],[3,145,115,1,146,116],[4,64,40,5,65,41],[11,36,16,5,37,17],[11,36,12,5,37,13],[5,109,87,1,110,88],[5,65,41,5,66,42],[5,54,24,7,55,25],[11,36,12],[5,122,98,1,123,99],[7,73,45,3,74,46],[15,43,19,2,44,20],[3,45,15,13,46,16],[1,135,107,5,136,108],[10,74,46,1,75,47],[1,50,22,15,51,23],[2,42,14,17,43,15],[5,150,120,1,151,121],[9,69,43,4,70,44],[17,50,22,1,51,23],[2,42,14,19,43,15],[3,141,113,4,142,114],[3,70,44,11,71,45],[17,47,21,4,48,22],[9,39,13,16,40,14],[3,135,107,5,136,108],[3,67,41,13,68,42],[15,54,24,5,55,25],[15,43,15,10,44,16],[4,144,116,4,145,117],[17,68,42],[17,50,22,6,51,23],[19,46,16,6,47,17],[2,139,111,7,140,112],[17,74,46],[7,54,24,16,55,25],[34,37,13],[4,151,121,5,152,122],[4,75,47,14,76,48],[11,54,24,14,55,25],[16,45,15,14,46,16],[6,147,117,4,148,118],[6,73,45,14,74,46],[11,54,24,16,55,25],[30,46,16,2,47,17],[8,132,106,4,133,107],[8,75,47,13,76,48],[7,54,24,22,55,25],[22,45,15,13,46,16],[10,142,114,2,143,115],[19,74,46,4,75,47],[28,50,22,6,51,23],[33,46,16,4,47,17],[8,152,122,4,153,123],[22,73,45,3,74,46],[8,53,23,26,54,24],[12,45,15,28,46,16],[3,147,117,10,148,118],[3,73,45,23,74,46],[4,54,24,31,55,25],[11,45,15,31,46,16],[7,146,116,7,147,117],[21,73,45,7,74,46],[1,53,23,37,54,24],[19,45,15,26,46,16],[5,145,115,10,146,116],[19,75,47,10,76,48],[15,54,24,25,55,25],[23,45,15,25,46,16],[13,145,115,3,146,116],[2,74,46,29,75,47],[42,54,24,1,55,25],[23,45,15,28,46,16],[17,145,115],[10,74,46,23,75,47],[10,54,24,35,55,25],[19,45,15,35,46,16],[17,145,115,1,146,116],[14,74,46,21,75,47],[29,54,24,19,55,25],[11,45,15,46,46,16],[13,145,115,6,146,116],[14,74,46,23,75,47],[44,54,24,7,55,25],[59,46,16,1,47,17],[12,151,121,7,152,122],[12,75,47,26,76,48],[39,54,24,14,55,25],[22,45,15,41,46,16],[6,151,121,14,152,122],[6,75,47,34,76,48],[46,54,24,10,55,25],[2,45,15,64,46,16],[17,152,122,4,153,123],[29,74,46,14,75,47],[49,54,24,10,55,25],[24,45,15,46,46,16],[4,152,122,18,153,123],[13,74,46,32,75,47],[48,54,24,14,55,25],[42,45,15,32,46,16],[20,147,117,4,148,118],[40,75,47,7,76,48],[43,54,24,22,55,25],[10,45,15,67,46,16],[19,148,118,6,149,119],[18,75,47,31,76,48],[34,54,24,34,55,25],[20,45,15,61,46,16]],B.getRSBlocks=function(e,t){var a=B.getRsBlockTable(e,t);if(void 0===a)throw new Error("bad rs block @ typeNumber:"+e+"/errorCorrectLevel:"+t);for(var r=a.length/3,i=[],n=0;n<r;n++)for(var o=a[3*n+0],s=a[3*n+1],l=a[3*n+2],u=0;u<o;u++)i.push(new B(s,l));return i},B.getRsBlockTable=function(e,t){switch(t){case y.L:return B.RS_BLOCK_TABLE[4*(e-1)+0];case y.M:return B.RS_BLOCK_TABLE[4*(e-1)+1];case y.Q:return B.RS_BLOCK_TABLE[4*(e-1)+2];case y.H:return B.RS_BLOCK_TABLE[4*(e-1)+3];default:return}},Q.prototype={get:function(e){var t=Math.floor(e/8);return 1==(this.buffer[t]>>>7-e%8&1)},put:function(e,t){for(var a=0;a<t;a++)this.putBit(1==(e>>>t-a-1&1))},getLengthInBits:function(){return this.length},putBit:function(e){var t=Math.floor(this.length/8);this.buffer.length<=t&&this.buffer.push(0),e&&(this.buffer[t]|=128>>>this.length%8),this.length++}};var k=[[17,14,11,7],[32,26,20,14],[53,42,32,24],[78,62,46,34],[106,84,60,44],[134,106,74,58],[154,122,86,64],[192,152,108,84],[230,180,130,98],[271,213,151,119],[321,251,177,137],[367,287,203,155],[425,331,241,177],[458,362,258,194],[520,412,292,220],[586,450,322,250],[644,504,364,280],[718,560,394,310],[792,624,442,338],[858,666,482,382],[929,711,509,403],[1003,779,565,439],[1091,857,611,461],[1171,911,661,511],[1273,997,715,535],[1367,1059,751,593],[1465,1125,805,625],[1528,1190,868,658],[1628,1264,908,698],[1732,1370,982,742],[1840,1452,1030,790],[1952,1538,1112,842],[2068,1628,1168,898],[2188,1722,1228,958],[2303,1809,1283,983],[2431,1911,1351,1051],[2563,1989,1423,1093],[2699,2099,1499,1139],[2809,2213,1579,1219],[2953,2331,1663,1273]];function Y(e,t){for(var a,r,i=1,n=(a=e,(r=encodeURI(a).toString().replace(/\%[0-9a-fA-F]{2}/g,"a")).length+(r.length!==a?3:0)),o=0,s=k.length;o<=s;o++){var l=0;switch(t){case y.L:l=k[o][0];break;case y.M:l=k[o][1];break;case y.Q:l=k[o][2];break;case y.H:l=k[o][3];break;default:l=k[o][1]}if(n<=l)break;i++}if(k.length<i)throw new Error("Too long data");return i}var G=function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:y.H;this.correctLevel=t,e&&this.makeCode(e)};G.prototype.makeCode=function(e){var t=new P(Y(e,this.correctLevel),this.correctLevel);t.addData(e),t.make(),this.size=t.moduleCount,this.data=t.modules},G.CorrectLevel=y;var W=function(){function l(e,t,a){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:{};p(this,l),this.options=u.defaults(r,{useTexture:!0,transition:0,speed:10,texture:5,loopTexture:!0,isAnimate:!0,threshold:.3}),this.app=e,this.targetWorld=t,this.maskTexture=a,this.material=new m.ShaderMaterial({uniforms:{tDiffuse1:{value:null},tDiffuse2:{value:null},mixRatio:{value:0},threshold:{value:.1},useTexture:{value:1},tMixTexture:{value:this.maskTexture}},vertexShader:"varying vec2 vUv;\n        void main() {\n        vUv = vec2( uv.x, uv.y );\n        gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n        }",fragmentShader:"uniform float mixRatio;\n        uniform sampler2D tDiffuse1;\n        uniform sampler2D tDiffuse2;\n        uniform sampler2D tMixTexture;\n        uniform int useTexture;\n        uniform float threshold;\n        varying vec2 vUv;\n        \n        void main() {\n\n        vec4 texel1 = texture2D( tDiffuse1, vUv );\n        vec4 texel2 = texture2D( tDiffuse2, vUv );\n\n        if (useTexture==1) {\n\n        vec4 transitionTexel = texture2D( tMixTexture, vUv );\n        float r = mixRatio * (1.0 + threshold * 2.0) - threshold;\n        float mixf=clamp((transitionTexel.r - r)*(1.0/threshold), 0.0, 1.0);\n\n        gl_FragColor = mix( texel1, texel2, mixf );\n        } else {\n\n        gl_FragColor = mix( texel2, texel1, mixRatio );\n\n        }\n        }"});var i=e.getWorldWidth()/2,n=e.getWorldHeight()/2;this.world=new f(e,new m.OrthographicCamera(-i,i,n,-n,-10,10));var o=new m.PlaneBufferGeometry(2*i,2*n),s=new m.Mesh(o,this.material);this.world.scene.add(s),this.sceneA=t,this.sceneB=e.world,this.material.uniforms.tDiffuse1.value=this.sceneA.fbo.texture,this.material.uniforms.tDiffuse2.value=this.sceneB.fbo.texture,this.needChange=!1}return d(l,[{key:"setThreshold",value:function(e){this.material.uniforms.threshold.value=e}},{key:"useTexture",value:function(e){this.material.uniforms.useTexture.value=e?1:0}},{key:"setTexture",value:function(){this.material.uniforms.tMixTexture.value=this.texture}},{key:"update",value:function(){var e=Math.min(this.options.transition,1);e=Math.max(e,0),this.material.uniforms.mixRatio.value=e,this.app.renderer.setClearColor(this.sceneB.clearColor||0),this.sceneB.update(),this.app.renderer.render(this.sceneB.scene,this.sceneB.camera,this.sceneB.fbo,!0),this.app.renderer.setClearColor(this.sceneA.clearColor||0),this.sceneA.update(),this.app.renderer.render(this.sceneA.scene,this.sceneA.camera,this.sceneA.fbo,!0),this.app.renderer.render(this.world.scene,this.world.camera,null,!0)}}]),l}(),H=function(){function c(e,t,a){var r=a.clearColor,i=void 0===r?0:r,n=a.top,o=void 0===n?0:n,s=a.left,l=void 0===s?0:s,u=a.width,d=void 0===u?1:u,f=a.height,h=void 0===f?1:f;p(this,c),this.world=e,this.scene=e.scene,this.worldWidth=e.app.getWorldWidth(),this.worldHeight=e.app.getWorldHeight(),this.renderer=e.app.renderer,this.camera=t||m.PerspectiveCamera(45,this.worldWidth/this.worldHeight,.01,1e3),this.renderTargetParameters={minFilter:m.LinearFilter,magFilter:m.LinearFilter,format:m.RGBFormat,stencilBuffer:!1},this.isRTT=!1,this.clearColor=i,this.left=l,this.top=o,this.width=d,this.height=h,this.fbo=new m.WebGLRenderTarget(this.worldWidth*this.width,this.worldHeight*this.height,this.renderTargetParameters),this.resize()}return d(c,[{key:"render",value:function(){var e=Math.floor(this.worldWidth*this.left),t=Math.floor(this.worldHeight*this.top),a=Math.floor(this.worldWidth*this.width),r=Math.floor(this.worldHeight*this.height);this.renderer.setViewport(e,t,a,r),this.renderer.setScissor(e,t,a,r),this.renderer.setScissorTest(!0),this.renderer.setClearColor(this.clearColor),this.renderer.render(this.scene,this.camera)}},{key:"resize",value:function(){this.worldWidth=this.world.app.getWorldWidth(),this.worldHeight=this.world.app.getWorldHeight();var e=Math.floor(this.worldWidth*this.width),t=Math.floor(this.worldHeight*this.height);"PerspectiveCamera"===this.camera.type?this.camera.aspect=e/t:(this.camera.left=-e/2,this.camera.right=e/2,this.camera.top=t/2,this.camera.bottom=-t/2),this.camera.updateProjectionMatrix()}}]),c}(),V=function(){function t(e){p(this,t),this.type=e,this.functionArr=[]}return d(t,[{key:"add",value:function(e){if("function"!=typeof e)throw new a;this.functionArr.push(e)}},{key:"remove",value:function(t){return u.remove(this.functionArr,function(e){return e===t})}},{key:"run",value:function(t,a){this.functionArr.forEach(function(e){e(t,a)})}}]),t}(),z=function(){function r(e,t,a){p(this,r),this.world=e,this.disable=!1,this.isDeep=!0,this.receivers=e.receivers,this.raycaster=new m.Raycaster,this.mesh=t,this.faceIndexArr=a||[]}return d(r,[{key:"dispatch",value:function(e,t){t.object===this.mesh&&(this.faceIndexArr&&0===this.faceIndexArr.length?this.raycastCheck(e,t):this.faceIndexArr?this.faceIndexArr.includes(t.faceIndex)&&this.raycastCheck(e,t):this.raycastCheck(e,t))}},{key:"toNovaEvent",value:function(e){return{changedPointers:[e],center:new m.Vector2(e.clientX,e.clientY),type:e.type,target:e.target}}},{key:"raycastCheck",value:function(e,t){var a=t.uv,r=new m.Vector2(2*a.x-1,2*a.y-1);this.raycaster.setFromCamera(r,this.world.camera),t=void 0;for(var i=this.raycaster.intersectObjects(this.world.receivers,this.isDeep),n=0;n<i.length;n++)if(!i[n].object.isPenetrated){t=i[n];break}return t&&t.object.events&&t.object.events[e.type]&&t.object.events[e.type].run(e,t),t}}]),r}(),j=function(e){function t(){p(this,t);var e=h(this,(t.__proto__||Object.getPrototypeOf(t)).call(this));return e.css={backgroundColor:"rgba(0,0,0,0)",opacity:1,width:1,height:1},e}return l(t,e),t}(m.Group),q=function(e){function i(e,t){p(this,i);var a=h(this,(i.__proto__||Object.getPrototypeOf(i)).call(this));a.world=e,a.distanceFromCamera=50,a.css=u.defaultsDeep(t||{},a.css),a.canvas=document.createElement("canvas");var r=new m.SpriteMaterial({map:a.canvas,color:16777215});return a.element=new m.Sprite(r),a.vector=new m.Vector3,a.update(),a.add(a.element),a}return l(i,j),d(i,[{key:"lockToScreen",value:function(){var e=this.world.camera;e.getWorldDirection(this.vector),this.rotation.set(e.rotation.x,e.rotation.y,e.rotation.z),this.position.set(e.position.x+this.vector.x*this.distanceFromCamera,e.position.y+this.vector.y*this.distanceFromCamera,e.position.z+this.vector.z*this.distanceFromCamera)}},{key:"update",value:function(){this.canvas.width=this.css.width,this.canvas.height=this.css.height;var e=this.canvas.getContext("2d");e.fillStyle=this.css.backgroundColor,e.fillRect(0,0,this.css.width,this.css.height);var t=new m.CanvasTexture(this.canvas);t.generateMipmaps=!1,t.minFilter=m.LinearFilter,t.magFilter=m.LinearFilter;var a=new m.SpriteMaterial({map:t,color:16777215});this.element.material.dispose(),this.element.material=a,this.element.scale.set(this.css.width/4,this.css.height/4,1)}}]),i}(),K=function(e){function i(e,t){p(this,i);var a=h(this,(i.__proto__||Object.getPrototypeOf(i)).call(this));a.world=e,a.css=u.defaultsDeep(t||{},a.css),a.canvas=document.createElement("canvas");var r=new m.SpriteMaterial({map:a.canvas,color:16777215});return a.element=new m.Sprite(r),a.vector=new m.Vector3,a.update(),a.add(a.element),a}return l(i,j),d(i,[{key:"update",value:function(){this.canvas.width=this.css.width,this.canvas.height=this.css.height;var e=this.canvas.getContext("2d");e.fillStyle=this.css.backgroundColor,e.fillRect(0,0,this.css.width,this.css.height);var t=new m.CanvasTexture(this.canvas);t.generateMipmaps=!1,t.minFilter=m.LinearFilter,t.magFilter=m.LinearFilter;var a=new m.SpriteMaterial({map:t,color:16777215});this.element.material.dispose(),this.element.material=a,this.element.scale.set(this.css.width/4,this.css.height/4,1)}}]),i}(),Z=function(e){function n(e,t){p(this,n),t=u.defaultsDeep(t||{},{fontStyle:"normal",fontVariant:"normal",fontSize:12,fontWeight:"normal",fontFamily:"微软雅黑",color:"#ffffff",textAlign:"center",backgroundColor:"rgba(0,0,0,0)",opacity:1,width:1,height:1,scale:{x:.25,y:.25,z:1}});var a=document.createElement("canvas"),r=new m.MeshBasicMaterial({transparent:!0,needsUpdate:!1,color:16777215}),i=h(this,(n.__proto__||Object.getPrototypeOf(n)).call(this,new m.PlaneBufferGeometry(t.width/8,t.height/8),r));return i.text=e,i.canvas=a,i.css=t,i.update(),i}return l(n,e),d(n,[{key:"update",value:function(){this.material.map.dispose(),this.canvas.width=this.css.width,this.canvas.height=this.css.height;var e=this.canvas.getContext("2d");e.fillStyle=this.css.backgroundColor,e.fillRect(0,0,this.css.width,this.css.height),e.textAlign=this.css.textAlign,e.font=this.css.fontStyle+" "+this.css.fontVariant+" "+this.css.fontWeight+" "+this.css.fontSize+"px "+this.css.fontFamily,e.fillStyle=this.css.color,e.fillText(this.text,this.css.width/2,this.css.height/2+this.css.fontSize/4);var t=new m.CanvasTexture(this.canvas);t.generateMipmaps=!1,t.minFilter=m.LinearFilter,t.magFilter=m.LinearFilter,this.material.map=t,this.scale.set(this.css.scale.x,this.css.scale.y,this.css.scale.z),this.material.opacity=this.css.opacity}}]),n}(m.Mesh),J=function(){function e(){var r=this;p(this,e),this.manager=new m.LoadingManager,this.Resource={images:{},materials:{},textures:{},models:{},sounds:{},fonts:{},unloaded:{textures:[],models:[],sounds:[],fonts:[],images:[]}},this.manager.onStart=function(e,t,a){r.onStart&&"function"==typeof r.onStart&&r.onStart(e,t,a)},this.manager.onLoad=function(){r.onLoad&&"function"==typeof r.onLoad&&r.onLoad()},this.manager.onProgress=function(e,t,a){r.onProgress&&"function"==typeof r.onProgress&&r.onProgress(e,t,a)},this.manager.onError=function(e){r.onError&&"function"==typeof r.onError&&r.onError(e)},this.imageLoader=new m.ImageLoader(this.manager),this.textureLoader=new m.TextureLoader(this.manager),this.audioListener=new m.AudioListener(this.manager)}return d(e,[{key:"loadImage",value:function(t,a,r,i){var n=this;return this.imageLoader.load(a,function(e){n.Resource.images[t]=e,r&&r(e)},void 0,function(e){n.Resource.unloaded.images.push(a),i&&i(e)})}},{key:"loadTexture",value:function(t,a,r,i){var n=this;return this.textureLoader.load(a,function(e){n.Resource.textures[t]=e,r&&r(e)},void 0,function(e){n.Resource.unloaded.textures.push(a),i&&i(e)})}}]),e}(),$={uniforms:{tDiffuse:{value:null},opacity:{value:1}},vertexShader:"\n    varying vec2 vUv;\n    void main() {\n      vUv = uv;\n      gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n    }",fragmentShader:"\n    uniform float opacity;\n    uniform sampler2D tDiffuse;\n    varying vec2 vUv;\n    void main() {\n      vec4 texel = texture2D( tDiffuse, vUv );\n      gl_FragColor = opacity * texel;\n    }"},ee=function(){function a(e){var t=1<arguments.length&&void 0!==arguments[1]&&arguments[1];p(this,a),this.enabled=!0,this.needsSwap=!0,this.clear=!1,this.renderToScreen=t,e&&e.addPass(this)}return d(a,[{key:"setSize",value:function(){}},{key:"render",value:function(){}}]),a}(),te=function(e){function n(e,t){var a=2<arguments.length&&void 0!==arguments[2]&&arguments[2],r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:"tDiffuse";p(this,n);var i=h(this,(n.__proto__||Object.getPrototypeOf(n)).call(this,t,a));return i.textureID=r,e instanceof m.ShaderMaterial?(i.uniforms=e.uniforms,i.material=e):e&&(i.uniforms=m.UniformsUtils.clone(e.uniforms),i.material=new m.ShaderMaterial({defines:e.defines||{},uniforms:i.uniforms,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader})),i.camera=new m.OrthographicCamera(-1,1,1,-1,0,1),i.scene=new m.Scene,i.quad=new m.Mesh(new m.PlaneBufferGeometry(2,2),null),i.quad.frustumCulled=!1,i.scene.add(i.quad),i}return l(n,ee),d(n,[{key:"render",value:function(e,t,a){this.uniforms[this.textureID]&&(this.uniforms[this.textureID].value=a.texture),this.quad.material=this.material,this.renderToScreen?e.render(this.scene,this.camera):e.render(this.scene,this.camera,t,this.clear)}}]),n}(),ae=function(e){function o(e,t,a,r){var i=4<arguments.length&&void 0!==arguments[4]?arguments[4]:0;p(this,o);var n=h(this,(o.__proto__||Object.getPrototypeOf(o)).call(this));return n.scene=e,n.camera=t,n.overrideMaterial=a,n.clearColor=r,n.clearAlpha=i,n.clear=!0,n.clearDepth=!1,n.needsSwap=!1,n}return l(o,ee),d(o,[{key:"render",value:function(e,t,a){var r=e.autoClear;e.autoClear=!1,this.scene.overrideMaterial=this.overrideMaterial,this.writeBuffer=t;var i=void 0,n=void 0;this.clearColor&&(i=e.getClearColor().getHex(),n=e.getClearAlpha(),e.setClearColor(this.clearColor,this.clearAlpha)),this.clearDepth&&e.clearDepth(),e.render(this.scene,this.camera,this.renderToScreen?void 0:a,this.clear),this.clearColor&&e.setClearColor(i,n),this.scene.overrideMaterial=void 0,e.autoClear=r}}]),o}(),re=function(e){function r(e,t){p(this,r);var a=h(this,(r.__proto__||Object.getPrototypeOf(r)).call(this));return a.scene=e,a.camera=t,a.clear=!0,a.needsSwap=!1,a.inverse=!1,a}return l(r,ee),d(r,[{key:"render",value:function(e,t,a){var r,i,n=e.context,o=e.state;o.buffers.color.setMask(!1),o.buffers.depth.setMask(!1),o.buffers.color.setLocked(!0),o.buffers.depth.setLocked(!0),this.inverse?(r=0,i=1):(r=1,i=0),o.buffers.stencil.setTest(!0),o.buffers.stencil.setOp(n.REPLACE,n.REPLACE,n.REPLACE),o.buffers.stencil.setFunc(n.ALWAYS,r,4294967295),o.buffers.stencil.setClear(i),e.render(this.scene,this.camera,a,this.clear),e.render(this.scene,this.camera,t,this.clear),o.buffers.color.setLocked(!1),o.buffers.depth.setLocked(!1),o.buffers.stencil.setFunc(n.EQUAL,1,4294967295),o.buffers.stencil.setOp(n.KEEP,n.KEEP,n.KEEP)}}]),r}(),ie=function(e){function t(){p(this,t);var e=h(this,(t.__proto__||Object.getPrototypeOf(t)).call(this));return e.needsSwap=!1,e}return l(t,ee),d(t,[{key:"render",value:function(e){e.state.buffers.stencil.setTest(!1)}}]),t}(),ne=function(){function n(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{},a=arguments[2];if(p(this,n),t=u.defaults(t,{renderer:void 0,camera:void 0,scene:void 0,overrideMaterial:void 0,clearColor:void 0,clearAlpha:0}),this.renderer=t.renderer||e.app.renderer,void 0===a){var r={minFilter:m.LinearFilter,magFilter:m.LinearFilter,format:m.RGBAFormat,stencilBuffer:!1},i=this.renderer.getDrawingBufferSize();(a=new m.WebGLRenderTarget(i.width,i.height,r)).texture.name="EffectComposer.rt1"}this.renderTarget1=a,this.renderTarget2=a.clone(),this.renderTarget2.texture.name="EffectComposer.rt2",this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2,this.passes=[],this.copyPass=new te($),this.addPass(new ae(t.scene||e.scene,t.scene||e.camera))}return d(n,[{key:"swapBuffers",value:function(){var e=this.readBuffer;this.readBuffer=this.writeBuffer,this.writeBuffer=e}},{key:"addPass",value:function(e){this.passes.push(e);var t=this.renderer.getDrawingBufferSize();e.setSize(t.width,t.height)}},{key:"insertPass",value:function(e,t){this.passes.splice(t,0,e)}},{key:"render",value:function(e){var t=!1,a=void 0,r=void 0,i=this.passes.length;for(r=0;r<i;r++)if(!1!==(a=this.passes[r]).enabled){if(a.render(this.renderer,this.writeBuffer,this.readBuffer,e,t),a.needsSwap){if(t){var n=this.renderer.context;n.stencilFunc(n.NOTEQUAL,1,4294967295),this.copyPass.render(this.renderer,this.writeBuffer,this.readBuffer,e),n.stencilFunc(n.EQUAL,1,4294967295)}this.swapBuffers()}void 0!==re&&(a instanceof re?t=!0:a instanceof ie&&(t=!1))}}},{key:"reset",value:function(e){if(void 0===e){var t=this.renderer.getDrawingBufferSize();(e=this.renderTarget1.clone()).setSize(t.width,t.height)}this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.renderTarget1=e,this.renderTarget2=e.clone(),this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2}},{key:"setSize",value:function(e,t){this.renderTarget1.setSize(e,t),this.renderTarget2.setSize(e,t);for(var a=0;a<this.passes.length;a++)this.passes[a].setSize(e,t)}}]),n}(),oe={uniforms:{damp:{value:.96},tOld:{value:null},tNew:{value:null}},vertexShader:"\n    varying vec2 vUv;\n    void main() {\n      vUv = uv;\n      gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n    }",fragmentShader:"\n    uniform sampler2D tOld;\n    uniform sampler2D tNew;\n    uniform float damp;\n\n    varying vec2 vUv;\n\n    vec4 when_gt( vec4 texel, float y ) {\n      return max( sign( texel - y ), 0. );\n    }\n\n    void main() {\n      vec4 texelOld = texture2D( tOld, vUv );\n      vec4 texelNew = texture2D( tNew, vUv );\n\n      texelOld *= damp * when_gt( texelOld, 0.1 );\n\n      gl_FragColor = max( texelNew, texelOld );\n    }"},se=function(e){function s(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:.96,t=arguments[1],a=2<arguments.length&&void 0!==arguments[2]&&arguments[2];p(this,s);var r=h(this,(s.__proto__||Object.getPrototypeOf(s)).call(this,t,a));r.uniforms=m.UniformsUtils.clone(oe.uniforms),r.uniforms.damp.value=e,r.textureComp=new m.WebGLRenderTarget(window.innerWidth,window.innerHeight,{minFilter:m.LinearFilter,magFilter:m.NearestFilter,format:m.RGBAFormat}),r.textureOld=new m.WebGLRenderTarget(window.innerWidth,window.innerHeight,{minFilter:m.LinearFilter,magFilter:m.NearestFilter,format:m.RGBAFormat}),r.shaderMaterial=new m.ShaderMaterial({uniforms:r.uniforms,vertexShader:oe.vertexShader,fragmentShader:oe.fragmentShader}),r.sceneComp=new m.Scene,r.sceneScreen=new m.Scene,r.camera=new m.OrthographicCamera(-1,1,1,-1,0,1),r.camera.position.z=1;var i=new m.PlaneBufferGeometry(2,2);r.quadComp=new m.Mesh(i,r.shaderMaterial),r.sceneComp.add(r.quadComp);var n=new m.MeshBasicMaterial({map:r.textureComp.texture}),o=new m.Mesh(i,n);return r.sceneScreen.add(o),r}return l(s,ee),d(s,[{key:"render",value:function(e,t,a){this.uniforms.tOld.value=this.textureOld.texture,this.uniforms.tNew.value=a.texture,this.quadComp.material=this.shaderMaterial,e.render(this.sceneComp,this.camera,this.textureComp),e.render(this.sceneScreen,this.camera,this.textureOld),this.renderToScreen?e.render(this.sceneScreen,this.camera):e.render(this.sceneScreen,this.camera,t,this.clear)}}]),s}(),le={uniforms:{tDiffuse:{value:null},tSize:{value:new m.Vector2(256,256)},center:{value:new m.Vector2(.5,.5)},angle:{value:1.57},scale:{value:1}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform vec2 center;","uniform float angle;","uniform float scale;","uniform vec2 tSize;","uniform sampler2D tDiffuse;","varying vec2 vUv;","float pattern() {","float s = sin( angle ), c = cos( angle );","vec2 tex = vUv * tSize - center;","vec2 point = vec2( c * tex.x - s * tex.y, s * tex.x + c * tex.y ) * scale;","return ( sin( point.x ) * sin( point.y ) ) * 4.0;","}","void main() {","vec4 color = texture2D( tDiffuse, vUv );","float average = ( color.r + color.g + color.b ) / 3.0;","gl_FragColor = vec4( vec3( average * 10.0 - 5.0 + pattern() ), color.a );","}"].join("\n")},ue=function(e){function o(e,t,a,r){var i=4<arguments.length&&void 0!==arguments[4]&&arguments[4];p(this,o);var n=h(this,(o.__proto__||Object.getPrototypeOf(o)).call(this,r,i));return n.uniforms=m.UniformsUtils.clone(le.uniforms),void 0!==e&&n.uniforms.center.value.copy(e),void 0!==t&&(n.uniforms.angle.value=t),void 0!==a&&(n.uniforms.scale.value=a),n.material=new m.ShaderMaterial({uniforms:n.uniforms,vertexShader:le.vertexShader,fragmentShader:le.fragmentShader}),n.camera=new m.OrthographicCamera(-1,1,1,-1,0,1),n.scene=new m.Scene,n.quad=new m.Mesh(new m.PlaneBufferGeometry(2,2),void 0),n.quad.frustumCulled=!1,n.scene.add(n.quad),n}return l(o,ee),d(o,[{key:"render",value:function(e,t,a){this.uniforms.tDiffuse.value=a.texture,this.uniforms.tSize.value.set(a.width,a.height),this.quad.material=this.material,this.renderToScreen?e.render(this.scene,this.camera):e.render(this.scene,this.camera,t,this.clear)}}]),o}(),de={uniforms:{tDiffuse:{value:null},tDisp:{value:null},byp:{value:0},amount:{value:.08},angle:{value:.02},seed:{value:.02},seed_x:{value:.02},seed_y:{value:.02},distortion_x:{value:.5},distortion_y:{value:.6},col_s:{value:.05}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform int byp;","uniform sampler2D tDiffuse;","uniform sampler2D tDisp;","uniform float amount;","uniform float angle;","uniform float seed;","uniform float seed_x;","uniform float seed_y;","uniform float distortion_x;","uniform float distortion_y;","uniform float col_s;","varying vec2 vUv;","float rand(vec2 co){","return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);","}","void main() {","if(byp<1) {","vec2 p = vUv;","float xs = floor(gl_FragCoord.x / 0.5);","float ys = floor(gl_FragCoord.y / 0.5);","vec4 normal = texture2D (tDisp, p*seed*seed);","if(p.y<distortion_x+col_s && p.y>distortion_x-col_s*seed) {","if(seed_x>0.){","p.y = 1. - (p.y + distortion_y);","}","else {","p.y = distortion_y;","}","}","if(p.x<distortion_y+col_s && p.x>distortion_y-col_s*seed) {","if(seed_y>0.){","p.x=distortion_x;","}","else {","p.x = 1. - (p.x + distortion_x);","}","}","p.x+=normal.x*seed_x*(seed/5.);","p.y+=normal.y*seed_y*(seed/5.);","vec2 offset = amount * vec2( cos(angle), sin(angle));","vec4 cr = texture2D(tDiffuse, p + offset);","vec4 cga = texture2D(tDiffuse, p);","vec4 cb = texture2D(tDiffuse, p - offset);","gl_FragColor = vec4(cr.r, cga.g, cb.b, cga.a);","vec4 snow = 200.*amount*vec4(rand(vec2(xs * seed,ys * seed*50.))*0.2);","gl_FragColor = gl_FragColor+ snow;","}","else {","gl_FragColor=texture2D (tDiffuse, vUv);","}","}"].join("\n")},fe=function(e){function n(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:64,t=1<arguments.length&&void 0!==arguments[1]&&arguments[1],a=arguments[2],r=3<arguments.length&&void 0!==arguments[3]&&arguments[3];p(this,n);var i=h(this,(n.__proto__||Object.getPrototypeOf(n)).call(this,a,r));return i.uniforms=m.UniformsUtils.clone(de.uniforms),i.uniforms.tDisp.value=i.generateHeightmap(e),i.material=new m.ShaderMaterial({uniforms:i.uniforms,vertexShader:de.vertexShader,fragmentShader:de.fragmentShader}),i.camera=new m.OrthographicCamera(-1,1,1,-1,0,1),i.scene=new m.Scene,i.quad=new m.Mesh(new m.PlaneBufferGeometry(2,2),null),i.quad.frustumCulled=!1,i.scene.add(i.quad),i.goWild=t,i.curF=0,i.generateTrigger(),i}return l(n,ee),d(n,[{key:"render",value:function(e,t,a){this.uniforms.tDiffuse.value=a.texture,this.uniforms.seed.value=Math.random(),this.uniforms.byp.value=0,this.curF%this.randX==0||!0===this.goWild?(this.uniforms.amount.value=Math.random()/30,this.uniforms.angle.value=m.Math.randFloat(-Math.PI,Math.PI),this.uniforms.seed_x.value=m.Math.randFloat(-1,1),this.uniforms.seed_y.value=m.Math.randFloat(-1,1),this.uniforms.distortion_x.value=m.Math.randFloat(0,1),this.uniforms.distortion_y.value=m.Math.randFloat(0,1),this.curF=0,this.generateTrigger()):this.curF%this.randX<this.randX/5?(this.uniforms.amount.value=Math.random()/90,this.uniforms.angle.value=m.Math.randFloat(-Math.PI,Math.PI),this.uniforms.distortion_x.value=m.Math.randFloat(0,1),this.uniforms.distortion_y.value=m.Math.randFloat(0,1),this.uniforms.seed_x.value=m.Math.randFloat(-.3,.3),this.uniforms.seed_y.value=m.Math.randFloat(-.3,.3)):!1===this.goWild&&(this.uniforms.byp.value=1),this.curF++,this.quad.material=this.material,this.renderToScreen?e.render(this.scene,this.camera):e.render(this.scene,this.camera,t,this.clear)}},{key:"generateTrigger",value:function(){this.randX=m.Math.randInt(120,240)}},{key:"generateHeightmap",value:function(e){for(var t=new Float32Array(e*e*3),a=e*e,r=0;r<a;r++){var i=m.Math.randFloat(0,1);t[3*r+0]=i,t[3*r+1]=i,t[3*r+2]=i}var n=new m.DataTexture(t,e,e,m.RGBFormat,m.FloatType);return n.needsUpdate=!0,n}}]),n}(),he=function(e){function f(e,t){var a=2<arguments.length&&void 0!==arguments[2]?arguments[2]:[],r=arguments[3];p(this,f);var i=h(this,(f.__proto__||Object.getPrototypeOf(f)).call(this,void 0,!1));i.BlurDirectionX=new m.Vector2(1,0),i.BlurDirectionY=new m.Vector2(0,1),i.renderScene=t.scene,i.renderCamera=t.camera,i.selectedObjects=a,i.visibleEdgeColor=new m.Color(1,1,1),i.hiddenEdgeColor=new m.Color(.1,.04,.02),i.edgeGlow=0,i.usePatternTexture=!1,i.edgeThickness=1,i.edgeStrength=3,i.downSampleRatio=2,i.pulsePeriod=0,i.resolution=void 0!==e?new m.Vector2(e.x,e.y):new m.Vector2(256,256);var n,o,s,l={minFilter:m.LinearFilter,magFilter:m.LinearFilter,format:m.RGBAFormat},u=Math.round(i.resolution.x/i.downSampleRatio),d=Math.round(i.resolution.y/i.downSampleRatio);i.maskBufferMaterial=new m.MeshBasicMaterial({color:16777215}),i.maskBufferMaterial.side=m.DoubleSide,i.renderTargetMaskBuffer=new m.WebGLRenderTarget(i.resolution.x,i.resolution.y,l),i.renderTargetMaskBuffer.texture.name="OutlinePass.mask",i.renderTargetMaskBuffer.texture.generateMipmaps=!1,i.depthMaterial=new m.MeshDepthMaterial,i.depthMaterial.side=m.DoubleSide,i.depthMaterial.depthPacking=m.RGBADepthPacking,i.depthMaterial.blending=m.NoBlending,i.prepareMaskMaterial=i.getPrepareMaskMaterial(),i.prepareMaskMaterial.side=m.DoubleSide,i.prepareMaskMaterial.fragmentShader=(n=i.prepareMaskMaterial.fragmentShader,o=i.renderCamera,s=o.isPerspectiveCamera?"perspective":"orthographic",n.replace(/DEPTH_TO_VIEW_Z/g,s+"DepthToViewZ")),i.renderTargetDepthBuffer=new m.WebGLRenderTarget(i.resolution.x,i.resolution.y,l),i.renderTargetDepthBuffer.texture.name="OutlinePass.depth",i.renderTargetDepthBuffer.texture.generateMipmaps=!1,i.renderTargetMaskDownSampleBuffer=new m.WebGLRenderTarget(u,d,l),i.renderTargetMaskDownSampleBuffer.texture.name="OutlinePass.depthDownSample",i.renderTargetMaskDownSampleBuffer.texture.generateMipmaps=!1,i.renderTargetBlurBuffer1=new m.WebGLRenderTarget(u,d,l),i.renderTargetBlurBuffer1.texture.name="OutlinePass.blur1",i.renderTargetBlurBuffer1.texture.generateMipmaps=!1,i.renderTargetBlurBuffer2=new m.WebGLRenderTarget(Math.round(u/2),Math.round(d/2),l),i.renderTargetBlurBuffer2.texture.name="OutlinePass.blur2",i.renderTargetBlurBuffer2.texture.generateMipmaps=!1,i.edgeDetectionMaterial=i.getEdgeDetectionMaterial(),i.renderTargetEdgeBuffer1=new m.WebGLRenderTarget(u,d,l),i.renderTargetEdgeBuffer1.texture.name="OutlinePass.edge1",i.renderTargetEdgeBuffer1.texture.generateMipmaps=!1,i.renderTargetEdgeBuffer2=new m.WebGLRenderTarget(Math.round(u/2),Math.round(d/2),l),i.renderTargetEdgeBuffer2.texture.name="OutlinePass.edge2",i.renderTargetEdgeBuffer2.texture.generateMipmaps=!1;return i.separableBlurMaterial1=i.getSeperableBlurMaterial(4),i.separableBlurMaterial1.uniforms.texSize.value=new m.Vector2(u,d),i.separableBlurMaterial1.uniforms.kernelRadius.value=1,i.separableBlurMaterial2=i.getSeperableBlurMaterial(4),i.separableBlurMaterial2.uniforms.texSize.value=new m.Vector2(Math.round(u/2),Math.round(d/2)),i.separableBlurMaterial2.uniforms.kernelRadius.value=4,i.overlayMaterial=i.getOverlayMaterial(),i.copyUniforms=m.UniformsUtils.clone($.uniforms),i.copyUniforms.opacity.value=1,i.materialCopy=new m.ShaderMaterial({uniforms:i.copyUniforms,vertexShader:$.vertexShader,fragmentShader:$.fragmentShader,blending:m.NoBlending,depthTest:!1,depthWrite:!1,transparent:!0}),i.enabled=!0,i.needsSwap=!1,i.oldClearColor=new m.Color,i.oldClearAlpha=1,i.camera=new m.OrthographicCamera(-1,1,1,-1,0,1),i.scene=new m.Scene,i.quad=new m.Mesh(new m.PlaneBufferGeometry(2,2),null),i.quad.frustumCulled=!1,i.scene.add(i.quad),i.tempPulseColor1=new m.Color,i.tempPulseColor2=new m.Color,i.textureMatrix=new m.Matrix4,r&&r.addPass(i),i}return l(f,ee),d(f,[{key:"dispose",value:function(){this.renderTargetMaskBuffer.dispose(),this.renderTargetDepthBuffer.dispose(),this.renderTargetMaskDownSampleBuffer.dispose(),this.renderTargetBlurBuffer1.dispose(),this.renderTargetBlurBuffer2.dispose(),this.renderTargetEdgeBuffer1.dispose(),this.renderTargetEdgeBuffer2.dispose()}},{key:"setSize",value:function(e,t){this.renderTargetMaskBuffer.setSize(e,t);var a=Math.round(e/this.downSampleRatio),r=Math.round(t/this.downSampleRatio);this.renderTargetMaskDownSampleBuffer.setSize(a,r),this.renderTargetBlurBuffer1.setSize(a,r),this.renderTargetEdgeBuffer1.setSize(a,r),this.separableBlurMaterial1.uniforms.texSize.value=new m.Vector2(a,r),a=Math.round(a/2),r=Math.round(r/2),this.renderTargetBlurBuffer2.setSize(a,r),this.renderTargetEdgeBuffer2.setSize(a,r),this.separableBlurMaterial2.uniforms.texSize.value=new m.Vector2(a,r)}},{key:"changeVisibilityOfSelectedObjects",value:function(t){function e(e){e instanceof m.Mesh&&(e.visible=t)}for(var a=0;a<this.selectedObjects.length;a++){this.selectedObjects[a].traverse(e)}}},{key:"changeVisibilityOfNonSelectedObjects",value:function(i){var n=[];function e(e){e instanceof m.Mesh&&n.push(e)}for(var t=0;t<this.selectedObjects.length;t++){this.selectedObjects[t].traverse(e)}this.renderScene.traverse(function(e){if(e instanceof m.Mesh||e instanceof m.Line||e instanceof m.Sprite){for(var t=!1,a=0;a<n.length;a++)if(n[a].id===e.id){t=!0;break}if(!t){var r=e.visible;i&&!e.bVisible||(e.visible=i),e.bVisible=r}}})}},{key:"updateTextureMatrix",value:function(){this.textureMatrix.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),this.textureMatrix.multiply(this.renderCamera.projectionMatrix),this.textureMatrix.multiply(this.renderCamera.matrixWorldInverse)}},{key:"render",value:function(e,t,a,r,i){if(0!==this.selectedObjects.length){this.oldClearColor.copy(e.getClearColor()),this.oldClearAlpha=e.getClearAlpha();var n=e.autoClear;e.autoClear=!1,i&&e.context.disable(e.context.STENCIL_TEST),e.setClearColor(16777215,1),this.changeVisibilityOfSelectedObjects(!1);var o=this.renderScene.background;if(this.renderScene.background=null,this.renderScene.overrideMaterial=this.depthMaterial,e.render(this.renderScene,this.renderCamera,this.renderTargetDepthBuffer,!0),this.changeVisibilityOfSelectedObjects(!0),this.updateTextureMatrix(),this.changeVisibilityOfNonSelectedObjects(!1),this.renderScene.overrideMaterial=this.prepareMaskMaterial,this.prepareMaskMaterial.uniforms.cameraNearFar.value=new m.Vector2(this.renderCamera.near,this.renderCamera.far),this.prepareMaskMaterial.uniforms.depthTexture.value=this.renderTargetDepthBuffer.texture,this.prepareMaskMaterial.uniforms.textureMatrix.value=this.textureMatrix,e.render(this.renderScene,this.renderCamera,this.renderTargetMaskBuffer,!0),this.renderScene.overrideMaterial=null,this.changeVisibilityOfNonSelectedObjects(!0),this.renderScene.background=o,this.quad.material=this.materialCopy,this.copyUniforms.tDiffuse.value=this.renderTargetMaskBuffer.texture,e.render(this.scene,this.camera,this.renderTargetMaskDownSampleBuffer,!0),this.tempPulseColor1.copy(this.visibleEdgeColor),this.tempPulseColor2.copy(this.hiddenEdgeColor),0<this.pulsePeriod){var s=.625+.75*Math.cos(.01*performance.now()/this.pulsePeriod)/2;this.tempPulseColor1.multiplyScalar(s),this.tempPulseColor2.multiplyScalar(s)}this.quad.material=this.edgeDetectionMaterial,this.edgeDetectionMaterial.uniforms.maskTexture.value=this.renderTargetMaskDownSampleBuffer.texture,this.edgeDetectionMaterial.uniforms.texSize.value=new m.Vector2(this.renderTargetMaskDownSampleBuffer.width,this.renderTargetMaskDownSampleBuffer.height),this.edgeDetectionMaterial.uniforms.visibleEdgeColor.value=this.tempPulseColor1,this.edgeDetectionMaterial.uniforms.hiddenEdgeColor.value=this.tempPulseColor2,e.render(this.scene,this.camera,this.renderTargetEdgeBuffer1,!0),this.quad.material=this.separableBlurMaterial1,this.separableBlurMaterial1.uniforms.colorTexture.value=this.renderTargetEdgeBuffer1.texture,this.separableBlurMaterial1.uniforms.direction.value=this.BlurDirectionX,this.separableBlurMaterial1.uniforms.kernelRadius.value=this.edgeThickness,e.render(this.scene,this.camera,this.renderTargetBlurBuffer1,!0),this.separableBlurMaterial1.uniforms.colorTexture.value=this.renderTargetBlurBuffer1.texture,this.separableBlurMaterial1.uniforms.direction.value=this.BlurDirectionY,e.render(this.scene,this.camera,this.renderTargetEdgeBuffer1,!0),this.quad.material=this.separableBlurMaterial2,this.separableBlurMaterial2.uniforms.colorTexture.value=this.renderTargetEdgeBuffer1.texture,this.separableBlurMaterial2.uniforms.direction.value=this.BlurDirectionX,e.render(this.scene,this.camera,this.renderTargetBlurBuffer2,!0),this.separableBlurMaterial2.uniforms.colorTexture.value=this.renderTargetBlurBuffer2.texture,this.separableBlurMaterial2.uniforms.direction.value=this.BlurDirectionY,e.render(this.scene,this.camera,this.renderTargetEdgeBuffer2,!0),this.quad.material=this.overlayMaterial,this.overlayMaterial.uniforms.maskTexture.value=this.renderTargetMaskBuffer.texture,this.overlayMaterial.uniforms.edgeTexture1.value=this.renderTargetEdgeBuffer1.texture,this.overlayMaterial.uniforms.edgeTexture2.value=this.renderTargetEdgeBuffer2.texture,this.overlayMaterial.uniforms.patternTexture.value=this.patternTexture,this.overlayMaterial.uniforms.edgeStrength.value=this.edgeStrength,this.overlayMaterial.uniforms.edgeGlow.value=this.edgeGlow,this.overlayMaterial.uniforms.usePatternTexture.value=this.usePatternTexture,i&&e.context.enable(e.context.STENCIL_TEST),e.render(this.scene,this.camera,a,!1),e.setClearColor(this.oldClearColor,this.oldClearAlpha),e.autoClear=n}}},{key:"getPrepareMaskMaterial",value:function(){return new m.ShaderMaterial({uniforms:{depthTexture:{value:null},cameraNearFar:{value:new m.Vector2(.5,.5)},textureMatrix:{value:new m.Matrix4}},vertexShader:["varying vec4 projTexCoord;","varying vec4 vPosition;","uniform mat4 textureMatrix;","void main() {","\tvPosition = modelViewMatrix * vec4( position, 1.0 );","\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );","\tprojTexCoord = textureMatrix * worldPosition;","\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["#include <packing>","varying vec4 vPosition;","varying vec4 projTexCoord;","uniform sampler2D depthTexture;","uniform vec2 cameraNearFar;","void main() {","\tfloat depth = unpackRGBAToDepth(texture2DProj( depthTexture, projTexCoord ));","\tfloat viewZ = - DEPTH_TO_VIEW_Z( depth, cameraNearFar.x, cameraNearFar.y );","\tfloat depthTest = (-vPosition.z > viewZ) ? 1.0 : 0.0;","\tgl_FragColor = vec4(0.0, depthTest, 1.0, 1.0);","}"].join("\n")})}},{key:"getEdgeDetectionMaterial",value:function(){return new m.ShaderMaterial({uniforms:{maskTexture:{value:null},texSize:{value:new m.Vector2(.5,.5)},visibleEdgeColor:{value:new m.Vector3(1,1,1)},hiddenEdgeColor:{value:new m.Vector3(1,1,1)}},vertexShader:"varying vec2 vUv;\n\t\t\t\tvoid main() {\n\t\t\t\t\tvUv = uv;\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t\t\t\t}",fragmentShader:"varying vec2 vUv;\n\t\t\t\tuniform sampler2D maskTexture;\n\t\t\t\tuniform vec2 texSize;\n\t\t\t\tuniform vec3 visibleEdgeColor;\n\t\t\t\tuniform vec3 hiddenEdgeColor;\n\n\t\t\t\tvoid main() {\n\t\t\t\t\tvec2 invSize = 1.0 / texSize;\n\t\t\t\t\tvec4 uvOffset = vec4(1.0, 0.0, 0.0, 1.0) * vec4(invSize, invSize);\n\t\t\t\t\tvec4 c1 = texture2D( maskTexture, vUv + uvOffset.xy);\n\t\t\t\t\tvec4 c2 = texture2D( maskTexture, vUv - uvOffset.xy);\n\t\t\t\t\tvec4 c3 = texture2D( maskTexture, vUv + uvOffset.yw);\n\t\t\t\t\tvec4 c4 = texture2D( maskTexture, vUv - uvOffset.yw);\n\t\t\t\t\tfloat diff1 = (c1.r - c2.r)*0.5;\n\t\t\t\t\tfloat diff2 = (c3.r - c4.r)*0.5;\n\t\t\t\t\tfloat d = length( vec2(diff1, diff2) );\n\t\t\t\t\tfloat a1 = min(c1.g, c2.g);\n\t\t\t\t\tfloat a2 = min(c3.g, c4.g);\n\t\t\t\t\tfloat visibilityFactor = min(a1, a2);\n\t\t\t\t\tvec3 edgeColor = 1.0 - visibilityFactor > 0.001 ? visibleEdgeColor : hiddenEdgeColor;\n\t\t\t\t\tgl_FragColor = vec4(edgeColor, 1.0) * vec4(d);\n\t\t\t\t}"})}},{key:"getSeperableBlurMaterial",value:function(e){return new m.ShaderMaterial({defines:{MAX_RADIUS:e},uniforms:{colorTexture:{value:null},texSize:{value:new m.Vector2(.5,.5)},direction:{value:new m.Vector2(.5,.5)},kernelRadius:{value:1}},vertexShader:"varying vec2 vUv;\n\t\t\t\tvoid main() {\n\t\t\t\t\tvUv = uv;\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t\t\t\t}",fragmentShader:"#include <common>\n\t\t\t\tvarying vec2 vUv;\n\t\t\t\tuniform sampler2D colorTexture;\n\t\t\t\tuniform vec2 texSize;\n\t\t\t\tuniform vec2 direction;\n\t\t\t\tuniform float kernelRadius;\n\n\t\t\t\tfloat gaussianPdf(in float x, in float sigma) {\n\t\t\t\t\treturn 0.39894 * exp( -0.5 * x * x/( sigma * sigma))/sigma;\n\t\t\t\t}\n\t\t\t\tvoid main() {\n\t\t\t\t\tvec2 invSize = 1.0 / texSize;\n\t\t\t\t\tfloat weightSum = gaussianPdf(0.0, kernelRadius);\n\t\t\t\t\tvec3 diffuseSum = texture2D( colorTexture, vUv).rgb * weightSum;\n\t\t\t\t\tvec2 delta = direction * invSize * kernelRadius/float(MAX_RADIUS);\n\t\t\t\t\tvec2 uvOffset = delta;\n\t\t\t\t\tfor( int i = 1; i <= MAX_RADIUS; i ++ ) {\n\t\t\t\t\t\tfloat w = gaussianPdf(uvOffset.x, kernelRadius);\n\t\t\t\t\t\tvec3 sample1 = texture2D( colorTexture, vUv + uvOffset).rgb;\n\t\t\t\t\t\tvec3 sample2 = texture2D( colorTexture, vUv - uvOffset).rgb;\n\t\t\t\t\t\tdiffuseSum += ((sample1 + sample2) * w);\n\t\t\t\t\t\tweightSum += (2.0 * w);\n\t\t\t\t\t\tuvOffset += delta;\n\t\t\t\t\t}\n\t\t\t\t\tgl_FragColor = vec4(diffuseSum/weightSum, 1.0);\n\t\t\t\t}"})}},{key:"getOverlayMaterial",value:function(){return new m.ShaderMaterial({uniforms:{maskTexture:{value:null},edgeTexture1:{value:null},edgeTexture2:{value:null},patternTexture:{value:null},edgeStrength:{value:1},edgeGlow:{value:1},usePatternTexture:{value:0}},vertexShader:"varying vec2 vUv;\n\t\t\t\tvoid main() {\n\t\t\t\t\tvUv = uv;\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t\t\t\t}",fragmentShader:"varying vec2 vUv;\n\t\t\t\tuniform sampler2D maskTexture;\n\t\t\t\tuniform sampler2D edgeTexture1;\n\t\t\t\tuniform sampler2D edgeTexture2;\n\t\t\t\tuniform sampler2D patternTexture;\n\t\t\t\tuniform float edgeStrength;\n\t\t\t\tuniform float edgeGlow;\n\t\t\t\tuniform bool usePatternTexture;\n\n\t\t\t\tvoid main() {\n\t\t\t\t\tvec4 edgeValue1 = texture2D(edgeTexture1, vUv);\n\t\t\t\t\tvec4 edgeValue2 = texture2D(edgeTexture2, vUv);\n\t\t\t\t\tvec4 maskColor = texture2D(maskTexture, vUv);\n\t\t\t\t\tvec4 patternColor = texture2D(patternTexture, 6.0 * vUv);\n\t\t\t\t\tfloat visibilityFactor = 1.0 - maskColor.g > 0.0 ? 1.0 : 0.5;\n\t\t\t\t\tvec4 edgeValue = edgeValue1 + edgeValue2 * edgeGlow;\n\t\t\t\t\tvec4 finalColor = edgeStrength * maskColor.r * edgeValue;\n\t\t\t\t\tif(usePatternTexture)\n\t\t\t\t\t\tfinalColor += + visibilityFactor * (1.0 - maskColor.r) * (1.0 - patternColor.r);\n\t\t\t\t\tgl_FragColor = finalColor;\n\t\t\t\t}",blending:m.AdditiveBlending,depthTest:!1,depthWrite:!1,transparent:!0})}}]),f}(),ce={uniforms:{tDiffuse:{type:"t",value:null},tPaper:{type:"t",value:null},texel:{type:"v2",value:new m.Vector2(1/512,1/512)},scale:{type:"f",value:.03},threshold:{type:"f",value:.7},darkening:{type:"f",value:1.75},pigment:{type:"f",value:1.2}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform sampler2D tDiffuse;","uniform sampler2D tPaper;","uniform vec2 texel;","uniform float scale;","uniform float threshold;","uniform float darkening;","uniform float pigment;","varying vec2 vUv;","float sobel(sampler2D tex, vec2 uv) {","vec3 hr = vec3(0., 0., 0.);","hr += texture2D(tex, (uv + vec2(-1.0, -1.0) * texel)).rgb *  1.0;","hr += texture2D(tex, (uv + vec2( 0.0, -1.0) * texel)).rgb *  0.0;","hr += texture2D(tex, (uv + vec2( 1.0, -1.0) * texel)).rgb * -1.0;","hr += texture2D(tex, (uv + vec2(-1.0,  0.0) * texel)).rgb *  2.0;","hr += texture2D(tex, (uv + vec2( 0.0,  0.0) * texel)).rgb *  0.0;","hr += texture2D(tex, (uv + vec2( 1.0,  0.0) * texel)).rgb * -2.0;","hr += texture2D(tex, (uv + vec2(-1.0,  1.0) * texel)).rgb *  1.0;","hr += texture2D(tex, (uv + vec2( 0.0,  1.0) * texel)).rgb *  0.0;","hr += texture2D(tex, (uv + vec2( 1.0,  1.0) * texel)).rgb * -1.0;","vec3 vt = vec3(0., 0., 0.);","vt += texture2D(tex, (uv + vec2(-1.0, -1.0) * texel)).rgb *  1.0;","vt += texture2D(tex, (uv + vec2( 0.0, -1.0) * texel)).rgb *  2.0;","vt += texture2D(tex, (uv + vec2( 1.0, -1.0) * texel)).rgb *  1.0;","vt += texture2D(tex, (uv + vec2(-1.0,  0.0) * texel)).rgb *  0.0;","vt += texture2D(tex, (uv + vec2( 0.0,  0.0) * texel)).rgb *  0.0;","vt += texture2D(tex, (uv + vec2( 1.0,  0.0) * texel)).rgb *  0.0;","vt += texture2D(tex, (uv + vec2(-1.0,  1.0) * texel)).rgb * -1.0;","vt += texture2D(tex, (uv + vec2( 0.0,  1.0) * texel)).rgb * -2.0;","vt += texture2D(tex, (uv + vec2( 1.0,  1.0) * texel)).rgb * -1.0;","return sqrt(dot(hr, hr) + dot(vt, vt));","}","vec2 wobble(sampler2D tex, vec2 uv) {","return uv + (texture2D(tex, uv).xy - 0.5) * scale;","}","vec4 edgeDarkening(sampler2D tex, vec2 uv) {","vec4 c = texture2D(tex, uv);","return c * (1.0 - (1.0 - c) * (darkening - 1.0));","}","float granulation(sampler2D tex, vec2 uv, float beta) {","vec4 c = texture2D(tex, uv);","float intensity = (c.r + c.g + c.b) / 3.0;","return 1.0 + beta * (intensity - 0.5);","}","void main() {","vec2 uv = vUv;","uv = wobble(tPaper, uv);","float pd = granulation(tPaper, vUv, pigment);","float edge = sobel(tDiffuse, uv);","if (edge > threshold) {","gl_FragColor = pd * edgeDarkening(tDiffuse, uv);","} else {","gl_FragColor = pd * texture2D(tDiffuse, uv);","}","}"].join("\n")},me=function(e){function n(e,t,a){p(this,n);var r=h(this,(n.__proto__||Object.getPrototypeOf(n)).call(this,t,a)),i=ce;return r.uniforms=m.UniformsUtils.clone(i.uniforms),e.wrapS=e.wrapT=m.RepeatWrapping,r.uniforms.tPaper.value=e,r.material=new m.ShaderMaterial({uniforms:r.uniforms,vertexShader:i.vertexShader,fragmentShader:i.fragmentShader}),r.enabled=!0,r.renderToScreen=a,r.needsSwap=!0,r.camera=new m.OrthographicCamera(-1,1,1,-1,0,1),r.scene=new m.Scene,r.quad=new m.Mesh(new m.PlaneBufferGeometry(2,2),void 0),r.scene.add(r.quad),r}return l(n,ee),d(n,[{key:"render",value:function(e,t,a){this.uniforms.tDiffuse.value=a,this.uniforms.texel.value=new m.Vector2(1/a.width,1/a.height),this.quad.material=this.material,this.renderToScreen?e.render(this.scene,this.camera):e.render(this.scene,this.camera,t,!1)}}]),n}(),pe={uniforms:{tDiffuse:{value:null},tSize:{value:new m.Vector2(256,256)},center:{value:new m.Vector2(.5,.5)},angle:{value:1.57},scale:{value:1}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform vec2 center;\n    uniform float angle;\n    uniform float scale;\n    uniform vec2 tSize;\n    uniform sampler2D tDiffuse;\n    varying vec2 vUv;\n    float pattern() {\n      float s = sin( angle ), c = cos( angle );\n      vec2 tex = vUv * tSize - center;\n      vec2 point = vec2( c * tex.x - s * tex.y, s * tex.x + c * tex.y ) * scale;\n      return ( sin( point.x ) * sin( point.y ) ) * 4.0;\n    }\n\nconst float PI = 3.1415926536;\nconst float PI2 = PI * 2.0; \nconst int mSize = 9;\nconst int kSize = (mSize-1)/2;\nconst float sigma = 3.0;\nfloat kernel[mSize];\n\nfloat normpdf(in float x, in float sigma) \n{\n\treturn 0.39894 * exp(-0.5 * x * x / (sigma * sigma)) / sigma;\n}\n\nvec3 colorDodge(in vec3 src, in vec3 dst)\n{\n    return step(0.0, dst) * mix(min(vec3(1.0), dst/ (1.0 - src)), vec3(1.0), step(1.0, src)); \n}\n\nfloat greyScale(in vec3 col) \n{\n    return dot(col, vec3(0.3, 0.59, 0.11));\n    //return dot(col, vec3(0.2126, 0.7152, 0.0722)); //sRGB\n}\n\nvec2 random(vec2 p){\n\tp = fract(p * vec2(443.897, 441.423));\n    p += dot(p, p.yx+19.19);\n    return fract((p.xx+p.yx)*p.xy);\n}\n\n\n    void main() {\n    \tvec2 q = -1.0 + 2.0 *vUv;\n      vec4 color = texture2D( tDiffuse, vUv );\n      vec3 col = color.rgb;\n      \n      vec2 r = random(q);\n      r.x *= PI2;\n      vec2 cr = vec2(sin(r.x),cos(r.x))*sqrt(r.y);\n    \n      vec3 blurred = color.rgb;\n    \n    \n    vec3 inv = vec3(1.0) - blurred; \n    // color dodge\n    vec3 lighten = colorDodge(col, inv);\n    // grey scale\n    vec3 res = vec3(greyScale(lighten));\n    \n    // more contrast\n    res = vec3(pow(res.x, 3.0)); \n      \n      \n      gl_FragColor = vec4( res,1.0 );\n    }"].join("\n")},ve=function(e){function o(e,t,a,r){var i=4<arguments.length&&void 0!==arguments[4]&&arguments[4];p(this,o);var n=h(this,(o.__proto__||Object.getPrototypeOf(o)).call(this,r,i));return n.uniforms=m.UniformsUtils.clone(pe.uniforms),void 0!==e&&n.uniforms.center.value.copy(e),void 0!==t&&(n.uniforms.angle.value=t),void 0!==a&&(n.uniforms.scale.value=a),n.material=new m.ShaderMaterial({uniforms:n.uniforms,vertexShader:pe.vertexShader,fragmentShader:pe.fragmentShader}),n.camera=new m.OrthographicCamera(-1,1,1,-1,0,1),n.scene=new m.Scene,n.quad=new m.Mesh(new m.PlaneBufferGeometry(2,2),null),n.quad.frustumCulled=!1,n.scene.add(n.quad),n}return l(o,ee),d(o,[{key:"render",value:function(e,t,a){this.uniforms.tDiffuse.value=a.texture,this.uniforms.tSize.value.set(a.width,a.height),this.quad.material=this.material,this.renderToScreen?e.render(this.scene,this.camera):e.render(this.scene,this.camera,t,this.clear)}}]),o}(),xe={uniforms:{tDiffuse:{value:null},resolution:{value:new m.Vector2(1/1024,1/512)}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["precision highp float;","","uniform sampler2D tDiffuse;","","uniform vec2 resolution;","","varying vec2 vUv;","","// FXAA 3.11 implementation by NVIDIA, ported to WebGL by Agost Biro (biro@archilogic.com)","","//----------------------------------------------------------------------------------","// File:        es3-keplerFXAAassetsshaders/FXAA_DefaultES.frag","// SDK Version: v3.00","// Email:       gameworks@nvidia.com","// Site:        http://developer.nvidia.com/","//","// Copyright (c) 2014-2015, NVIDIA CORPORATION. All rights reserved.","//","// Redistribution and use in source and binary forms, with or without","// modification, are permitted provided that the following conditions","// are met:","//  * Redistributions of source code must retain the above copyright","//    notice, this list of conditions and the following disclaimer.","//  * Redistributions in binary form must reproduce the above copyright","//    notice, this list of conditions and the following disclaimer in the","//    documentation and/or other materials provided with the distribution.","//  * Neither the name of NVIDIA CORPORATION nor the names of its","//    contributors may be used to endorse or promote products derived","//    from this software without specific prior written permission.","//","// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS ``AS IS'' AND ANY","// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE","// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR","// PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR","// CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,","// EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,","// PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR","// PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY","// OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT","// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE","// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.","//","//----------------------------------------------------------------------------------","","#define FXAA_PC 1","#define FXAA_GLSL_100 1","#define FXAA_QUALITY_PRESET 12","","#define FXAA_GREEN_AS_LUMA 1","","/*--------------------------------------------------------------------------*/","#ifndef FXAA_PC_CONSOLE","    //","    // The console algorithm for PC is included","    // for developers targeting really low spec machines.","    // Likely better to just run FXAA_PC, and use a really low preset.","    //","    #define FXAA_PC_CONSOLE 0","#endif","/*--------------------------------------------------------------------------*/","#ifndef FXAA_GLSL_120","    #define FXAA_GLSL_120 0","#endif","/*--------------------------------------------------------------------------*/","#ifndef FXAA_GLSL_130","    #define FXAA_GLSL_130 0","#endif","/*--------------------------------------------------------------------------*/","#ifndef FXAA_HLSL_3","    #define FXAA_HLSL_3 0","#endif","/*--------------------------------------------------------------------------*/","#ifndef FXAA_HLSL_4","    #define FXAA_HLSL_4 0","#endif","/*--------------------------------------------------------------------------*/","#ifndef FXAA_HLSL_5","    #define FXAA_HLSL_5 0","#endif","/*==========================================================================*/","#ifndef FXAA_GREEN_AS_LUMA","    //","    // For those using non-linear color,","    // and either not able to get luma in alpha, or not wanting to,","    // this enables FXAA to run using green as a proxy for luma.","    // So with this enabled, no need to pack luma in alpha.","    //","    // This will turn off AA on anything which lacks some amount of green.","    // Pure red and blue or combination of only R and B, will get no AA.","    //","    // Might want to lower the settings for both,","    //    fxaaConsoleEdgeThresholdMin","    //    fxaaQualityEdgeThresholdMin","    // In order to insure AA does not get turned off on colors","    // which contain a minor amount of green.","    //","    // 1 = On.","    // 0 = Off.","    //","    #define FXAA_GREEN_AS_LUMA 0","#endif","/*--------------------------------------------------------------------------*/","#ifndef FXAA_EARLY_EXIT","    //","    // Controls algorithm's early exit path.","    // On PS3 turning this ON adds 2 cycles to the shader.","    // On 360 turning this OFF adds 10ths of a millisecond to the shader.","    // Turning this off on console will result in a more blurry image.","    // So this defaults to on.","    //","    // 1 = On.","    // 0 = Off.","    //","    #define FXAA_EARLY_EXIT 1","#endif","/*--------------------------------------------------------------------------*/","#ifndef FXAA_DISCARD","    //","    // Only valid for PC OpenGL currently.","    // Probably will not work when FXAA_GREEN_AS_LUMA = 1.","    //","    // 1 = Use discard on pixels which don't need AA.","    //     For APIs which enable concurrent TEX+ROP from same surface.","    // 0 = Return unchanged color on pixels which don't need AA.","    //","    #define FXAA_DISCARD 0","#endif","/*--------------------------------------------------------------------------*/","#ifndef FXAA_FAST_PIXEL_OFFSET","    //","    // Used for GLSL 120 only.","    //","    // 1 = GL API supports fast pixel offsets","    // 0 = do not use fast pixel offsets","    //","    #ifdef GL_EXT_gpu_shader4","        #define FXAA_FAST_PIXEL_OFFSET 1","    #endif","    #ifdef GL_NV_gpu_shader5","        #define FXAA_FAST_PIXEL_OFFSET 1","    #endif","    #ifdef GL_ARB_gpu_shader5","        #define FXAA_FAST_PIXEL_OFFSET 1","    #endif","    #ifndef FXAA_FAST_PIXEL_OFFSET","        #define FXAA_FAST_PIXEL_OFFSET 0","    #endif","#endif","/*--------------------------------------------------------------------------*/","#ifndef FXAA_GATHER4_ALPHA","    //","    // 1 = API supports gather4 on alpha channel.","    // 0 = API does not support gather4 on alpha channel.","    //","    #if (FXAA_HLSL_5 == 1)","        #define FXAA_GATHER4_ALPHA 1","    #endif","    #ifdef GL_ARB_gpu_shader5","        #define FXAA_GATHER4_ALPHA 1","    #endif","    #ifdef GL_NV_gpu_shader5","        #define FXAA_GATHER4_ALPHA 1","    #endif","    #ifndef FXAA_GATHER4_ALPHA","        #define FXAA_GATHER4_ALPHA 0","    #endif","#endif","","","/*============================================================================","                        FXAA QUALITY - TUNING KNOBS","------------------------------------------------------------------------------","NOTE the other tuning knobs are now in the shader function inputs!","============================================================================*/","#ifndef FXAA_QUALITY_PRESET","    //","    // Choose the quality preset.","    // This needs to be compiled into the shader as it effects code.","    // Best option to include multiple presets is to","    // in each shader define the preset, then include this file.","    //","    // OPTIONS","    // -----------------------------------------------------------------------","    // 10 to 15 - default medium dither (10=fastest, 15=highest quality)","    // 20 to 29 - less dither, more expensive (20=fastest, 29=highest quality)","    // 39       - no dither, very expensive","    //","    // NOTES","    // -----------------------------------------------------------------------","    // 12 = slightly faster then FXAA 3.9 and higher edge quality (default)","    // 13 = about same speed as FXAA 3.9 and better than 12","    // 23 = closest to FXAA 3.9 visually and performance wise","    //  _ = the lowest digit is directly related to performance","    // _  = the highest digit is directly related to style","    //","    #define FXAA_QUALITY_PRESET 12","#endif","","","/*============================================================================","","                           FXAA QUALITY - PRESETS","","============================================================================*/","","/*============================================================================","                     FXAA QUALITY - MEDIUM DITHER PRESETS","============================================================================*/","#if (FXAA_QUALITY_PRESET == 10)","    #define FXAA_QUALITY_PS 3","    #define FXAA_QUALITY_P0 1.5","    #define FXAA_QUALITY_P1 3.0","    #define FXAA_QUALITY_P2 12.0","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_QUALITY_PRESET == 11)","    #define FXAA_QUALITY_PS 4","    #define FXAA_QUALITY_P0 1.0","    #define FXAA_QUALITY_P1 1.5","    #define FXAA_QUALITY_P2 3.0","    #define FXAA_QUALITY_P3 12.0","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_QUALITY_PRESET == 12)","    #define FXAA_QUALITY_PS 5","    #define FXAA_QUALITY_P0 1.0","    #define FXAA_QUALITY_P1 1.5","    #define FXAA_QUALITY_P2 2.0","    #define FXAA_QUALITY_P3 4.0","    #define FXAA_QUALITY_P4 12.0","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_QUALITY_PRESET == 13)","    #define FXAA_QUALITY_PS 6","    #define FXAA_QUALITY_P0 1.0","    #define FXAA_QUALITY_P1 1.5","    #define FXAA_QUALITY_P2 2.0","    #define FXAA_QUALITY_P3 2.0","    #define FXAA_QUALITY_P4 4.0","    #define FXAA_QUALITY_P5 12.0","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_QUALITY_PRESET == 14)","    #define FXAA_QUALITY_PS 7","    #define FXAA_QUALITY_P0 1.0","    #define FXAA_QUALITY_P1 1.5","    #define FXAA_QUALITY_P2 2.0","    #define FXAA_QUALITY_P3 2.0","    #define FXAA_QUALITY_P4 2.0","    #define FXAA_QUALITY_P5 4.0","    #define FXAA_QUALITY_P6 12.0","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_QUALITY_PRESET == 15)","    #define FXAA_QUALITY_PS 8","    #define FXAA_QUALITY_P0 1.0","    #define FXAA_QUALITY_P1 1.5","    #define FXAA_QUALITY_P2 2.0","    #define FXAA_QUALITY_P3 2.0","    #define FXAA_QUALITY_P4 2.0","    #define FXAA_QUALITY_P5 2.0","    #define FXAA_QUALITY_P6 4.0","    #define FXAA_QUALITY_P7 12.0","#endif","","/*============================================================================","                     FXAA QUALITY - LOW DITHER PRESETS","============================================================================*/","#if (FXAA_QUALITY_PRESET == 20)","    #define FXAA_QUALITY_PS 3","    #define FXAA_QUALITY_P0 1.5","    #define FXAA_QUALITY_P1 2.0","    #define FXAA_QUALITY_P2 8.0","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_QUALITY_PRESET == 21)","    #define FXAA_QUALITY_PS 4","    #define FXAA_QUALITY_P0 1.0","    #define FXAA_QUALITY_P1 1.5","    #define FXAA_QUALITY_P2 2.0","    #define FXAA_QUALITY_P3 8.0","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_QUALITY_PRESET == 22)","    #define FXAA_QUALITY_PS 5","    #define FXAA_QUALITY_P0 1.0","    #define FXAA_QUALITY_P1 1.5","    #define FXAA_QUALITY_P2 2.0","    #define FXAA_QUALITY_P3 2.0","    #define FXAA_QUALITY_P4 8.0","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_QUALITY_PRESET == 23)","    #define FXAA_QUALITY_PS 6","    #define FXAA_QUALITY_P0 1.0","    #define FXAA_QUALITY_P1 1.5","    #define FXAA_QUALITY_P2 2.0","    #define FXAA_QUALITY_P3 2.0","    #define FXAA_QUALITY_P4 2.0","    #define FXAA_QUALITY_P5 8.0","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_QUALITY_PRESET == 24)","    #define FXAA_QUALITY_PS 7","    #define FXAA_QUALITY_P0 1.0","    #define FXAA_QUALITY_P1 1.5","    #define FXAA_QUALITY_P2 2.0","    #define FXAA_QUALITY_P3 2.0","    #define FXAA_QUALITY_P4 2.0","    #define FXAA_QUALITY_P5 3.0","    #define FXAA_QUALITY_P6 8.0","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_QUALITY_PRESET == 25)","    #define FXAA_QUALITY_PS 8","    #define FXAA_QUALITY_P0 1.0","    #define FXAA_QUALITY_P1 1.5","    #define FXAA_QUALITY_P2 2.0","    #define FXAA_QUALITY_P3 2.0","    #define FXAA_QUALITY_P4 2.0","    #define FXAA_QUALITY_P5 2.0","    #define FXAA_QUALITY_P6 4.0","    #define FXAA_QUALITY_P7 8.0","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_QUALITY_PRESET == 26)","    #define FXAA_QUALITY_PS 9","    #define FXAA_QUALITY_P0 1.0","    #define FXAA_QUALITY_P1 1.5","    #define FXAA_QUALITY_P2 2.0","    #define FXAA_QUALITY_P3 2.0","    #define FXAA_QUALITY_P4 2.0","    #define FXAA_QUALITY_P5 2.0","    #define FXAA_QUALITY_P6 2.0","    #define FXAA_QUALITY_P7 4.0","    #define FXAA_QUALITY_P8 8.0","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_QUALITY_PRESET == 27)","    #define FXAA_QUALITY_PS 10","    #define FXAA_QUALITY_P0 1.0","    #define FXAA_QUALITY_P1 1.5","    #define FXAA_QUALITY_P2 2.0","    #define FXAA_QUALITY_P3 2.0","    #define FXAA_QUALITY_P4 2.0","    #define FXAA_QUALITY_P5 2.0","    #define FXAA_QUALITY_P6 2.0","    #define FXAA_QUALITY_P7 2.0","    #define FXAA_QUALITY_P8 4.0","    #define FXAA_QUALITY_P9 8.0","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_QUALITY_PRESET == 28)","    #define FXAA_QUALITY_PS 11","    #define FXAA_QUALITY_P0 1.0","    #define FXAA_QUALITY_P1 1.5","    #define FXAA_QUALITY_P2 2.0","    #define FXAA_QUALITY_P3 2.0","    #define FXAA_QUALITY_P4 2.0","    #define FXAA_QUALITY_P5 2.0","    #define FXAA_QUALITY_P6 2.0","    #define FXAA_QUALITY_P7 2.0","    #define FXAA_QUALITY_P8 2.0","    #define FXAA_QUALITY_P9 4.0","    #define FXAA_QUALITY_P10 8.0","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_QUALITY_PRESET == 29)","    #define FXAA_QUALITY_PS 12","    #define FXAA_QUALITY_P0 1.0","    #define FXAA_QUALITY_P1 1.5","    #define FXAA_QUALITY_P2 2.0","    #define FXAA_QUALITY_P3 2.0","    #define FXAA_QUALITY_P4 2.0","    #define FXAA_QUALITY_P5 2.0","    #define FXAA_QUALITY_P6 2.0","    #define FXAA_QUALITY_P7 2.0","    #define FXAA_QUALITY_P8 2.0","    #define FXAA_QUALITY_P9 2.0","    #define FXAA_QUALITY_P10 4.0","    #define FXAA_QUALITY_P11 8.0","#endif","","/*============================================================================","                     FXAA QUALITY - EXTREME QUALITY","============================================================================*/","#if (FXAA_QUALITY_PRESET == 39)","    #define FXAA_QUALITY_PS 12","    #define FXAA_QUALITY_P0 1.0","    #define FXAA_QUALITY_P1 1.0","    #define FXAA_QUALITY_P2 1.0","    #define FXAA_QUALITY_P3 1.0","    #define FXAA_QUALITY_P4 1.0","    #define FXAA_QUALITY_P5 1.5","    #define FXAA_QUALITY_P6 2.0","    #define FXAA_QUALITY_P7 2.0","    #define FXAA_QUALITY_P8 2.0","    #define FXAA_QUALITY_P9 2.0","    #define FXAA_QUALITY_P10 4.0","    #define FXAA_QUALITY_P11 8.0","#endif","","","","/*============================================================================","","                                API PORTING","","============================================================================*/","#if (FXAA_GLSL_100 == 1) || (FXAA_GLSL_120 == 1) || (FXAA_GLSL_130 == 1)","    #define FxaaBool bool","    #define FxaaDiscard discard","    #define FxaaFloat float","    #define FxaaFloat2 vec2","    #define FxaaFloat3 vec3","    #define FxaaFloat4 vec4","    #define FxaaHalf float","    #define FxaaHalf2 vec2","    #define FxaaHalf3 vec3","    #define FxaaHalf4 vec4","    #define FxaaInt2 ivec2","    #define FxaaSat(x) clamp(x, 0.0, 1.0)","    #define FxaaTex sampler2D","#else","    #define FxaaBool bool","    #define FxaaDiscard clip(-1)","    #define FxaaFloat float","    #define FxaaFloat2 float2","    #define FxaaFloat3 float3","    #define FxaaFloat4 float4","    #define FxaaHalf half","    #define FxaaHalf2 half2","    #define FxaaHalf3 half3","    #define FxaaHalf4 half4","    #define FxaaSat(x) saturate(x)","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_GLSL_100 == 1)","  #define FxaaTexTop(t, p) texture2D(t, p, 0.0)","  #define FxaaTexOff(t, p, o, r) texture2D(t, p + (o * r), 0.0)","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_GLSL_120 == 1)","    // Requires,","    //  #version 120","    // And at least,","    //  #extension GL_EXT_gpu_shader4 : enable","    //  (or set FXAA_FAST_PIXEL_OFFSET 1 to work like DX9)","    #define FxaaTexTop(t, p) texture2DLod(t, p, 0.0)","    #if (FXAA_FAST_PIXEL_OFFSET == 1)","        #define FxaaTexOff(t, p, o, r) texture2DLodOffset(t, p, 0.0, o)","    #else","        #define FxaaTexOff(t, p, o, r) texture2DLod(t, p + (o * r), 0.0)","    #endif","    #if (FXAA_GATHER4_ALPHA == 1)","        // use #extension GL_ARB_gpu_shader5 : enable","        #define FxaaTexAlpha4(t, p) textureGather(t, p, 3)","        #define FxaaTexOffAlpha4(t, p, o) textureGatherOffset(t, p, o, 3)","        #define FxaaTexGreen4(t, p) textureGather(t, p, 1)","        #define FxaaTexOffGreen4(t, p, o) textureGatherOffset(t, p, o, 1)","    #endif","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_GLSL_130 == 1)",'    // Requires "#version 130" or better',"    #define FxaaTexTop(t, p) textureLod(t, p, 0.0)","    #define FxaaTexOff(t, p, o, r) textureLodOffset(t, p, 0.0, o)","    #if (FXAA_GATHER4_ALPHA == 1)","        // use #extension GL_ARB_gpu_shader5 : enable","        #define FxaaTexAlpha4(t, p) textureGather(t, p, 3)","        #define FxaaTexOffAlpha4(t, p, o) textureGatherOffset(t, p, o, 3)","        #define FxaaTexGreen4(t, p) textureGather(t, p, 1)","        #define FxaaTexOffGreen4(t, p, o) textureGatherOffset(t, p, o, 1)","    #endif","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_HLSL_3 == 1)","    #define FxaaInt2 float2","    #define FxaaTex sampler2D","    #define FxaaTexTop(t, p) tex2Dlod(t, float4(p, 0.0, 0.0))","    #define FxaaTexOff(t, p, o, r) tex2Dlod(t, float4(p + (o * r), 0, 0))","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_HLSL_4 == 1)","    #define FxaaInt2 int2","    struct FxaaTex { SamplerState smpl; Texture2D tex; };","    #define FxaaTexTop(t, p) t.tex.SampleLevel(t.smpl, p, 0.0)","    #define FxaaTexOff(t, p, o, r) t.tex.SampleLevel(t.smpl, p, 0.0, o)","#endif","/*--------------------------------------------------------------------------*/","#if (FXAA_HLSL_5 == 1)","    #define FxaaInt2 int2","    struct FxaaTex { SamplerState smpl; Texture2D tex; };","    #define FxaaTexTop(t, p) t.tex.SampleLevel(t.smpl, p, 0.0)","    #define FxaaTexOff(t, p, o, r) t.tex.SampleLevel(t.smpl, p, 0.0, o)","    #define FxaaTexAlpha4(t, p) t.tex.GatherAlpha(t.smpl, p)","    #define FxaaTexOffAlpha4(t, p, o) t.tex.GatherAlpha(t.smpl, p, o)","    #define FxaaTexGreen4(t, p) t.tex.GatherGreen(t.smpl, p)","    #define FxaaTexOffGreen4(t, p, o) t.tex.GatherGreen(t.smpl, p, o)","#endif","","","/*============================================================================","                   GREEN AS LUMA OPTION SUPPORT FUNCTION","============================================================================*/","#if (FXAA_GREEN_AS_LUMA == 0)","    FxaaFloat FxaaLuma(FxaaFloat4 rgba) { return rgba.w; }","#else","    FxaaFloat FxaaLuma(FxaaFloat4 rgba) { return rgba.y; }","#endif","","","","","/*============================================================================","","                             FXAA3 QUALITY - PC","","============================================================================*/","#if (FXAA_PC == 1)","/*--------------------------------------------------------------------------*/","FxaaFloat4 FxaaPixelShader(","    //","    // Use noperspective interpolation here (turn off perspective interpolation).","    // {xy} = center of pixel","    FxaaFloat2 pos,","    //","    // Used only for FXAA Console, and not used on the 360 version.","    // Use noperspective interpolation here (turn off perspective interpolation).","    // {xy_} = upper left of pixel","    // {_zw} = lower right of pixel","    FxaaFloat4 fxaaConsolePosPos,","    //","    // Input color texture.","    // {rgb_} = color in linear or perceptual color space","    // if (FXAA_GREEN_AS_LUMA == 0)","    //     {__a} = luma in perceptual color space (not linear)","    FxaaTex tex,","    //","    // Only used on the optimized 360 version of FXAA Console.",'    // For everything but 360, just use the same input here as for "tex".',"    // For 360, same texture, just alias with a 2nd sampler.","    // This sampler needs to have an exponent bias of -1.","    FxaaTex fxaaConsole360TexExpBiasNegOne,","    //","    // Only used on the optimized 360 version of FXAA Console.",'    // For everything but 360, just use the same input here as for "tex".',"    // For 360, same texture, just alias with a 3nd sampler.","    // This sampler needs to have an exponent bias of -2.","    FxaaTex fxaaConsole360TexExpBiasNegTwo,","    //","    // Only used on FXAA Quality.","    // This must be from a constant/uniform.","    // {x_} = 1.0/screenWidthInPixels","    // {_y} = 1.0/screenHeightInPixels","    FxaaFloat2 fxaaQualityRcpFrame,","    //","    // Only used on FXAA Console.","    // This must be from a constant/uniform.","    // This effects sub-pixel AA quality and inversely sharpness.","    //   Where N ranges between,","    //     N = 0.50 (default)","    //     N = 0.33 (sharper)","    // {x__} = -N/screenWidthInPixels","    // {_y_} = -N/screenHeightInPixels","    // {_z_} =  N/screenWidthInPixels","    // {__w} =  N/screenHeightInPixels","    FxaaFloat4 fxaaConsoleRcpFrameOpt,","    //","    // Only used on FXAA Console.","    // Not used on 360, but used on PS3 and PC.","    // This must be from a constant/uniform.","    // {x__} = -2.0/screenWidthInPixels","    // {_y_} = -2.0/screenHeightInPixels","    // {_z_} =  2.0/screenWidthInPixels","    // {__w} =  2.0/screenHeightInPixels","    FxaaFloat4 fxaaConsoleRcpFrameOpt2,","    //","    // Only used on FXAA Console.","    // Only used on 360 in place of fxaaConsoleRcpFrameOpt2.","    // This must be from a constant/uniform.","    // {x__} =  8.0/screenWidthInPixels","    // {_y_} =  8.0/screenHeightInPixels","    // {_z_} = -4.0/screenWidthInPixels","    // {__w} = -4.0/screenHeightInPixels","    FxaaFloat4 fxaaConsole360RcpFrameOpt2,","    //","    // Only used on FXAA Quality.","    // This used to be the FXAA_QUALITY_SUBPIX define.","    // It is here now to allow easier tuning.","    // Choose the amount of sub-pixel aliasing removal.","    // This can effect sharpness.","    //   1.00 - upper limit (softer)","    //   0.75 - default amount of filtering","    //   0.50 - lower limit (sharper, less sub-pixel aliasing removal)","    //   0.25 - almost off","    //   0.00 - completely off","    FxaaFloat fxaaQualitySubpix,","    //","    // Only used on FXAA Quality.","    // This used to be the FXAA_QUALITY_EDGE_THRESHOLD define.","    // It is here now to allow easier tuning.","    // The minimum amount of local contrast required to apply algorithm.","    //   0.333 - too little (faster)","    //   0.250 - low quality","    //   0.166 - default","    //   0.125 - high quality","    //   0.063 - overkill (slower)","    FxaaFloat fxaaQualityEdgeThreshold,","    //","    // Only used on FXAA Quality.","    // This used to be the FXAA_QUALITY_EDGE_THRESHOLD_MIN define.","    // It is here now to allow easier tuning.","    // Trims the algorithm from processing darks.","    //   0.0833 - upper limit (default, the start of visible unfiltered edges)","    //   0.0625 - high quality (faster)","    //   0.0312 - visible limit (slower)","    // Special notes when using FXAA_GREEN_AS_LUMA,","    //   Likely want to set this to zero.","    //   As colors that are mostly not-green","    //   will appear very dark in the green channel!","    //   Tune by looking at mostly non-green content,","    //   then start at zero and increase until aliasing is a problem.","    FxaaFloat fxaaQualityEdgeThresholdMin,","    //","    // Only used on FXAA Console.","    // This used to be the FXAA_CONSOLE_EDGE_SHARPNESS define.","    // It is here now to allow easier tuning.","    // This does not effect PS3, as this needs to be compiled in.","    //   Use FXAA_CONSOLE_PS3_EDGE_SHARPNESS for PS3.","    //   Due to the PS3 being ALU bound,","    //   there are only three safe values here: 2 and 4 and 8.","    //   These options use the shaders ability to a free *|/ by 2|4|8.","    // For all other platforms can be a non-power of two.","    //   8.0 is sharper (default!!!)","    //   4.0 is softer","    //   2.0 is really soft (good only for vector graphics inputs)","    FxaaFloat fxaaConsoleEdgeSharpness,","    //","    // Only used on FXAA Console.","    // This used to be the FXAA_CONSOLE_EDGE_THRESHOLD define.","    // It is here now to allow easier tuning.","    // This does not effect PS3, as this needs to be compiled in.","    //   Use FXAA_CONSOLE_PS3_EDGE_THRESHOLD for PS3.","    //   Due to the PS3 being ALU bound,","    //   there are only two safe values here: 1/4 and 1/8.","    //   These options use the shaders ability to a free *|/ by 2|4|8.","    // The console setting has a different mapping than the quality setting.","    // Other platforms can use other values.","    //   0.125 leaves less aliasing, but is softer (default!!!)","    //   0.25 leaves more aliasing, and is sharper","    FxaaFloat fxaaConsoleEdgeThreshold,","    //","    // Only used on FXAA Console.","    // This used to be the FXAA_CONSOLE_EDGE_THRESHOLD_MIN define.","    // It is here now to allow easier tuning.","    // Trims the algorithm from processing darks.","    // The console setting has a different mapping than the quality setting.","    // This only applies when FXAA_EARLY_EXIT is 1.","    // This does not apply to PS3,","    // PS3 was simplified to avoid more shader instructions.","    //   0.06 - faster but more aliasing in darks","    //   0.05 - default","    //   0.04 - slower and less aliasing in darks","    // Special notes when using FXAA_GREEN_AS_LUMA,","    //   Likely want to set this to zero.","    //   As colors that are mostly not-green","    //   will appear very dark in the green channel!","    //   Tune by looking at mostly non-green content,","    //   then start at zero and increase until aliasing is a problem.","    FxaaFloat fxaaConsoleEdgeThresholdMin,","    //","    // Extra constants for 360 FXAA Console only.","    // Use zeros or anything else for other platforms.","    // These must be in physical constant registers and NOT immedates.","    // Immedates will result in compiler un-optimizing.","    // {xyzw} = float4(1.0, -1.0, 0.25, -0.25)","    FxaaFloat4 fxaaConsole360ConstDir",") {","/*--------------------------------------------------------------------------*/","    FxaaFloat2 posM;","    posM.x = pos.x;","    posM.y = pos.y;","    #if (FXAA_GATHER4_ALPHA == 1)","        #if (FXAA_DISCARD == 0)","            FxaaFloat4 rgbyM = FxaaTexTop(tex, posM);","            #if (FXAA_GREEN_AS_LUMA == 0)","                #define lumaM rgbyM.w","            #else","                #define lumaM rgbyM.y","            #endif","        #endif","        #if (FXAA_GREEN_AS_LUMA == 0)","            FxaaFloat4 luma4A = FxaaTexAlpha4(tex, posM);","            FxaaFloat4 luma4B = FxaaTexOffAlpha4(tex, posM, FxaaInt2(-1, -1));","        #else","            FxaaFloat4 luma4A = FxaaTexGreen4(tex, posM);","            FxaaFloat4 luma4B = FxaaTexOffGreen4(tex, posM, FxaaInt2(-1, -1));","        #endif","        #if (FXAA_DISCARD == 1)","            #define lumaM luma4A.w","        #endif","        #define lumaE luma4A.z","        #define lumaS luma4A.x","        #define lumaSE luma4A.y","        #define lumaNW luma4B.w","        #define lumaN luma4B.z","        #define lumaW luma4B.x","    #else","        FxaaFloat4 rgbyM = FxaaTexTop(tex, posM);","        #if (FXAA_GREEN_AS_LUMA == 0)","            #define lumaM rgbyM.w","        #else","            #define lumaM rgbyM.y","        #endif","        #if (FXAA_GLSL_100 == 1)","          FxaaFloat lumaS = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 0.0, 1.0), fxaaQualityRcpFrame.xy));","          FxaaFloat lumaE = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 1.0, 0.0), fxaaQualityRcpFrame.xy));","          FxaaFloat lumaN = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 0.0,-1.0), fxaaQualityRcpFrame.xy));","          FxaaFloat lumaW = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2(-1.0, 0.0), fxaaQualityRcpFrame.xy));","        #else","          FxaaFloat lumaS = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 0, 1), fxaaQualityRcpFrame.xy));","          FxaaFloat lumaE = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 1, 0), fxaaQualityRcpFrame.xy));","          FxaaFloat lumaN = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 0,-1), fxaaQualityRcpFrame.xy));","          FxaaFloat lumaW = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(-1, 0), fxaaQualityRcpFrame.xy));","        #endif","    #endif","/*--------------------------------------------------------------------------*/","    FxaaFloat maxSM = max(lumaS, lumaM);","    FxaaFloat minSM = min(lumaS, lumaM);","    FxaaFloat maxESM = max(lumaE, maxSM);","    FxaaFloat minESM = min(lumaE, minSM);","    FxaaFloat maxWN = max(lumaN, lumaW);","    FxaaFloat minWN = min(lumaN, lumaW);","    FxaaFloat rangeMax = max(maxWN, maxESM);","    FxaaFloat rangeMin = min(minWN, minESM);","    FxaaFloat rangeMaxScaled = rangeMax * fxaaQualityEdgeThreshold;","    FxaaFloat range = rangeMax - rangeMin;","    FxaaFloat rangeMaxClamped = max(fxaaQualityEdgeThresholdMin, rangeMaxScaled);","    FxaaBool earlyExit = range < rangeMaxClamped;","/*--------------------------------------------------------------------------*/","    if(earlyExit)","        #if (FXAA_DISCARD == 1)","            FxaaDiscard;","        #else","            return rgbyM;","        #endif","/*--------------------------------------------------------------------------*/","    #if (FXAA_GATHER4_ALPHA == 0)","        #if (FXAA_GLSL_100 == 1)","          FxaaFloat lumaNW = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2(-1.0,-1.0), fxaaQualityRcpFrame.xy));","          FxaaFloat lumaSE = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 1.0, 1.0), fxaaQualityRcpFrame.xy));","          FxaaFloat lumaNE = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 1.0,-1.0), fxaaQualityRcpFrame.xy));","          FxaaFloat lumaSW = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2(-1.0, 1.0), fxaaQualityRcpFrame.xy));","        #else","          FxaaFloat lumaNW = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(-1,-1), fxaaQualityRcpFrame.xy));","          FxaaFloat lumaSE = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 1, 1), fxaaQualityRcpFrame.xy));","          FxaaFloat lumaNE = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 1,-1), fxaaQualityRcpFrame.xy));","          FxaaFloat lumaSW = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(-1, 1), fxaaQualityRcpFrame.xy));","        #endif","    #else","        FxaaFloat lumaNE = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(1, -1), fxaaQualityRcpFrame.xy));","        FxaaFloat lumaSW = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(-1, 1), fxaaQualityRcpFrame.xy));","    #endif","/*--------------------------------------------------------------------------*/","    FxaaFloat lumaNS = lumaN + lumaS;","    FxaaFloat lumaWE = lumaW + lumaE;","    FxaaFloat subpixRcpRange = 1.0/range;","    FxaaFloat subpixNSWE = lumaNS + lumaWE;","    FxaaFloat edgeHorz1 = (-2.0 * lumaM) + lumaNS;","    FxaaFloat edgeVert1 = (-2.0 * lumaM) + lumaWE;","/*--------------------------------------------------------------------------*/","    FxaaFloat lumaNESE = lumaNE + lumaSE;","    FxaaFloat lumaNWNE = lumaNW + lumaNE;","    FxaaFloat edgeHorz2 = (-2.0 * lumaE) + lumaNESE;","    FxaaFloat edgeVert2 = (-2.0 * lumaN) + lumaNWNE;","/*--------------------------------------------------------------------------*/","    FxaaFloat lumaNWSW = lumaNW + lumaSW;","    FxaaFloat lumaSWSE = lumaSW + lumaSE;","    FxaaFloat edgeHorz4 = (abs(edgeHorz1) * 2.0) + abs(edgeHorz2);","    FxaaFloat edgeVert4 = (abs(edgeVert1) * 2.0) + abs(edgeVert2);","    FxaaFloat edgeHorz3 = (-2.0 * lumaW) + lumaNWSW;","    FxaaFloat edgeVert3 = (-2.0 * lumaS) + lumaSWSE;","    FxaaFloat edgeHorz = abs(edgeHorz3) + edgeHorz4;","    FxaaFloat edgeVert = abs(edgeVert3) + edgeVert4;","/*--------------------------------------------------------------------------*/","    FxaaFloat subpixNWSWNESE = lumaNWSW + lumaNESE;","    FxaaFloat lengthSign = fxaaQualityRcpFrame.x;","    FxaaBool horzSpan = edgeHorz >= edgeVert;","    FxaaFloat subpixA = subpixNSWE * 2.0 + subpixNWSWNESE;","/*--------------------------------------------------------------------------*/","    if(!horzSpan) lumaN = lumaW;","    if(!horzSpan) lumaS = lumaE;","    if(horzSpan) lengthSign = fxaaQualityRcpFrame.y;","    FxaaFloat subpixB = (subpixA * (1.0/12.0)) - lumaM;","/*--------------------------------------------------------------------------*/","    FxaaFloat gradientN = lumaN - lumaM;","    FxaaFloat gradientS = lumaS - lumaM;","    FxaaFloat lumaNN = lumaN + lumaM;","    FxaaFloat lumaSS = lumaS + lumaM;","    FxaaBool pairN = abs(gradientN) >= abs(gradientS);","    FxaaFloat gradient = max(abs(gradientN), abs(gradientS));","    if(pairN) lengthSign = -lengthSign;","    FxaaFloat subpixC = FxaaSat(abs(subpixB) * subpixRcpRange);","/*--------------------------------------------------------------------------*/","    FxaaFloat2 posB;","    posB.x = posM.x;","    posB.y = posM.y;","    FxaaFloat2 offNP;","    offNP.x = (!horzSpan) ? 0.0 : fxaaQualityRcpFrame.x;","    offNP.y = ( horzSpan) ? 0.0 : fxaaQualityRcpFrame.y;","    if(!horzSpan) posB.x += lengthSign * 0.5;","    if( horzSpan) posB.y += lengthSign * 0.5;","/*--------------------------------------------------------------------------*/","    FxaaFloat2 posN;","    posN.x = posB.x - offNP.x * FXAA_QUALITY_P0;","    posN.y = posB.y - offNP.y * FXAA_QUALITY_P0;","    FxaaFloat2 posP;","    posP.x = posB.x + offNP.x * FXAA_QUALITY_P0;","    posP.y = posB.y + offNP.y * FXAA_QUALITY_P0;","    FxaaFloat subpixD = ((-2.0)*subpixC) + 3.0;","    FxaaFloat lumaEndN = FxaaLuma(FxaaTexTop(tex, posN));","    FxaaFloat subpixE = subpixC * subpixC;","    FxaaFloat lumaEndP = FxaaLuma(FxaaTexTop(tex, posP));","/*--------------------------------------------------------------------------*/","    if(!pairN) lumaNN = lumaSS;","    FxaaFloat gradientScaled = gradient * 1.0/4.0;","    FxaaFloat lumaMM = lumaM - lumaNN * 0.5;","    FxaaFloat subpixF = subpixD * subpixE;","    FxaaBool lumaMLTZero = lumaMM < 0.0;","/*--------------------------------------------------------------------------*/","    lumaEndN -= lumaNN * 0.5;","    lumaEndP -= lumaNN * 0.5;","    FxaaBool doneN = abs(lumaEndN) >= gradientScaled;","    FxaaBool doneP = abs(lumaEndP) >= gradientScaled;","    if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P1;","    if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P1;","    FxaaBool doneNP = (!doneN) || (!doneP);","    if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P1;","    if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P1;","/*--------------------------------------------------------------------------*/","    if(doneNP) {","        if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));","        if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));","        if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;","        if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;","        doneN = abs(lumaEndN) >= gradientScaled;","        doneP = abs(lumaEndP) >= gradientScaled;","        if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P2;","        if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P2;","        doneNP = (!doneN) || (!doneP);","        if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P2;","        if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P2;","/*--------------------------------------------------------------------------*/","        #if (FXAA_QUALITY_PS > 3)","        if(doneNP) {","            if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));","            if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));","            if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;","            if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;","            doneN = abs(lumaEndN) >= gradientScaled;","            doneP = abs(lumaEndP) >= gradientScaled;","            if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P3;","            if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P3;","            doneNP = (!doneN) || (!doneP);","            if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P3;","            if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P3;","/*--------------------------------------------------------------------------*/","            #if (FXAA_QUALITY_PS > 4)","            if(doneNP) {","                if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));","                if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));","                if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;","                if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;","                doneN = abs(lumaEndN) >= gradientScaled;","                doneP = abs(lumaEndP) >= gradientScaled;","                if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P4;","                if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P4;","                doneNP = (!doneN) || (!doneP);","                if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P4;","                if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P4;","/*--------------------------------------------------------------------------*/","                #if (FXAA_QUALITY_PS > 5)","                if(doneNP) {","                    if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));","                    if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));","                    if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;","                    if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;","                    doneN = abs(lumaEndN) >= gradientScaled;","                    doneP = abs(lumaEndP) >= gradientScaled;","                    if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P5;","                    if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P5;","                    doneNP = (!doneN) || (!doneP);","                    if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P5;","                    if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P5;","/*--------------------------------------------------------------------------*/","                    #if (FXAA_QUALITY_PS > 6)","                    if(doneNP) {","                        if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));","                        if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));","                        if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;","                        if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;","                        doneN = abs(lumaEndN) >= gradientScaled;","                        doneP = abs(lumaEndP) >= gradientScaled;","                        if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P6;","                        if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P6;","                        doneNP = (!doneN) || (!doneP);","                        if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P6;","                        if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P6;","/*--------------------------------------------------------------------------*/","                        #if (FXAA_QUALITY_PS > 7)","                        if(doneNP) {","                            if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));","                            if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));","                            if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;","                            if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;","                            doneN = abs(lumaEndN) >= gradientScaled;","                            doneP = abs(lumaEndP) >= gradientScaled;","                            if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P7;","                            if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P7;","                            doneNP = (!doneN) || (!doneP);","                            if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P7;","                            if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P7;","/*--------------------------------------------------------------------------*/","    #if (FXAA_QUALITY_PS > 8)","    if(doneNP) {","        if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));","        if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));","        if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;","        if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;","        doneN = abs(lumaEndN) >= gradientScaled;","        doneP = abs(lumaEndP) >= gradientScaled;","        if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P8;","        if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P8;","        doneNP = (!doneN) || (!doneP);","        if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P8;","        if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P8;","/*--------------------------------------------------------------------------*/","        #if (FXAA_QUALITY_PS > 9)","        if(doneNP) {","            if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));","            if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));","            if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;","            if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;","            doneN = abs(lumaEndN) >= gradientScaled;","            doneP = abs(lumaEndP) >= gradientScaled;","            if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P9;","            if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P9;","            doneNP = (!doneN) || (!doneP);","            if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P9;","            if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P9;","/*--------------------------------------------------------------------------*/","            #if (FXAA_QUALITY_PS > 10)","            if(doneNP) {","                if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));","                if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));","                if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;","                if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;","                doneN = abs(lumaEndN) >= gradientScaled;","                doneP = abs(lumaEndP) >= gradientScaled;","                if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P10;","                if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P10;","                doneNP = (!doneN) || (!doneP);","                if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P10;","                if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P10;","/*--------------------------------------------------------------------------*/","                #if (FXAA_QUALITY_PS > 11)","                if(doneNP) {","                    if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));","                    if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));","                    if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;","                    if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;","                    doneN = abs(lumaEndN) >= gradientScaled;","                    doneP = abs(lumaEndP) >= gradientScaled;","                    if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P11;","                    if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P11;","                    doneNP = (!doneN) || (!doneP);","                    if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P11;","                    if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P11;","/*--------------------------------------------------------------------------*/","                    #if (FXAA_QUALITY_PS > 12)","                    if(doneNP) {","                        if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));","                        if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));","                        if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;","                        if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;","                        doneN = abs(lumaEndN) >= gradientScaled;","                        doneP = abs(lumaEndP) >= gradientScaled;","                        if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P12;","                        if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P12;","                        doneNP = (!doneN) || (!doneP);","                        if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P12;","                        if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P12;","/*--------------------------------------------------------------------------*/","                    }","                    #endif","/*--------------------------------------------------------------------------*/","                }","                #endif","/*--------------------------------------------------------------------------*/","            }","            #endif","/*--------------------------------------------------------------------------*/","        }","        #endif","/*--------------------------------------------------------------------------*/","    }","    #endif","/*--------------------------------------------------------------------------*/","                        }","                        #endif","/*--------------------------------------------------------------------------*/","                    }","                    #endif","/*--------------------------------------------------------------------------*/","                }","                #endif","/*--------------------------------------------------------------------------*/","            }","            #endif","/*--------------------------------------------------------------------------*/","        }","        #endif","/*--------------------------------------------------------------------------*/","    }","/*--------------------------------------------------------------------------*/","    FxaaFloat dstN = posM.x - posN.x;","    FxaaFloat dstP = posP.x - posM.x;","    if(!horzSpan) dstN = posM.y - posN.y;","    if(!horzSpan) dstP = posP.y - posM.y;","/*--------------------------------------------------------------------------*/","    FxaaBool goodSpanN = (lumaEndN < 0.0) != lumaMLTZero;","    FxaaFloat spanLength = (dstP + dstN);","    FxaaBool goodSpanP = (lumaEndP < 0.0) != lumaMLTZero;","    FxaaFloat spanLengthRcp = 1.0/spanLength;","/*--------------------------------------------------------------------------*/","    FxaaBool directionN = dstN < dstP;","    FxaaFloat dst = min(dstN, dstP);","    FxaaBool goodSpan = directionN ? goodSpanN : goodSpanP;","    FxaaFloat subpixG = subpixF * subpixF;","    FxaaFloat pixelOffset = (dst * (-spanLengthRcp)) + 0.5;","    FxaaFloat subpixH = subpixG * fxaaQualitySubpix;","/*--------------------------------------------------------------------------*/","    FxaaFloat pixelOffsetGood = goodSpan ? pixelOffset : 0.0;","    FxaaFloat pixelOffsetSubpix = max(pixelOffsetGood, subpixH);","    if(!horzSpan) posM.x += pixelOffsetSubpix * lengthSign;","    if( horzSpan) posM.y += pixelOffsetSubpix * lengthSign;","    #if (FXAA_DISCARD == 1)","        return FxaaTexTop(tex, posM);","    #else","        return FxaaFloat4(FxaaTexTop(tex, posM).xyz, lumaM);","    #endif","}","/*==========================================================================*/","#endif","","void main() {","  gl_FragColor = FxaaPixelShader(","    vUv,","    vec4(0.0),","    tDiffuse,","    tDiffuse,","    tDiffuse,","    resolution,","    vec4(0.0),","    vec4(0.0),","    vec4(0.0),","    0.75,","    0.166,","    0.0833,","    0.0,","    0.0,","    0.0,","    vec4(0.0)","  );","","  // TODO avoid querying texture twice for same texel","  gl_FragColor.a = texture2D(tDiffuse, vUv).a;","}"].join("\n")},Ae={extend:function(e,t,a){var r=function e(t,a,r){var i=!0;if(!1===r&&(i=!1),a instanceof Array)for(var n=0,o=a.length;n<o;n++)e(t,a[n],i);for(var s in a)!i&&s in t||(t[s]=a[s]);return t}(e,t,a);for(var i in t)delete r[i];return r},rndInt:function(e){return Math.floor(Math.random()*e)},rndString:function(e){if(e<=0)return"";e=e-1||31;for(var t="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",a=t.length+1,r=t.charAt(Math.floor(Math.random()*(a-10))),i=0;i<e;i++)r+=t.charAt(Math.floor(Math.random()*a));return r},geoToCartesian:function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:0,t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0,a=2<arguments.length&&void 0!==arguments[2]?arguments[2]:1;return e*=Math.PI/180,t*=Math.PI/180,new m.Vector3(-a*Math.cos(e)*Math.cos(t),a*Math.sin(e),a*Math.cos(e)*Math.sin(t))}};e.DefaultSettings=i,e.App=t,e.Bind=r,e.FBOWorld=v,e.LoopManager=o,e.Monitor=x,e.QRCode=G,e.Transitioner=W,e.View=H,e.VR=s,e.World=f,e.NotFunctionError=a,e.EventManager=n,e.Events=function e(t){p(this,e),t=t||["press","tap","pressup","pan","swipe","click","mousedown","mouseup","touchstart","touchend","touchmove","mousemove"];var a=!0,r=!1,i=void 0;try{for(var n,o=t[Symbol.iterator]();!(a=(n=o.next()).done);a=!0){var s=n.value;this[s]=new V(s)}}catch(e){r=!0,i=e}finally{try{!a&&o.return&&o.return()}finally{if(r)throw i}}},e.FBOEventMapper=z,e.Signal=V,e.GUI=j,e.Body=q,e.Txt=Z,e.Div=K,e.LoaderFactory=J,e.EffectComposer=ne,e.AfterimagePass=se,e.Pass=ee,e.DotScreenPass=ue,e.RenderPass=ae,e.ShaderPass=te,e.GlitchPass=fe,e.OutlinePass=he,e.WatercolorPass=me,e.TestPass=ve,e.AfterimageShader=oe,e.CopyShader=$,e.DotScreenShader=le,e.FXAAShader=xe,e.GlitchShader=de,e.WatercolorShader=ce,e.TestShader=pe,e.Util=Ae,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=nova.min.js.map
