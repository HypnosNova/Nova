{"version":3,"file":"nova.js","sources":["../src/core/settings/DefaultSettings.js","../src/error/NotFunctionError.js","../src/core/LoopManager.js","../src/events/EventManager.js","../src/core/World.js","../src/constant.js","../src/core/VR.js","../src/core/App.js","../src/core/Bind.js","../src/core/FBOWorld.js","../src/core/Monitor.js","../src/core/QRCode.js","../src/core/Transitioner.js","../src/core/View.js","../src/events/Signal.js","../src/events/Events.js","../src/gui/GUI.js","../src/loader/LoaderFactory.js","../src/postprocessing/shader/CopyShader.js","../src/postprocessing/Pass.js","../src/postprocessing/ShaderPass.js","../src/postprocessing/RenderPass.js","../src/postprocessing/EffectComposer.js","../src/postprocessing/shader/DotScreenShader.js","../src/postprocessing/DotScreenPass.js","../src/postprocessing/shader/GhostImageShader.js","../src/postprocessing/GhostImagePass.js","../src/postprocessing/shader/GlitchShader.js","../src/postprocessing/GlitchPass.js","../src/postprocessing/OutlinePass.js","../src/postprocessing/shader/FXAAShader.js","../src/util/extends.js","../src/util/rndInt.js","../src/util/rndString.js","../src/util/geoToCartesian.js","../src/util/Util.js","../src/Nova.js"],"sourcesContent":["//适合大部分WebGL的APP设置\r\nlet DefaultSettings = {\r\n  parent: document.body, //APP所在DOM容器\r\n  setCommonCSS: true, //设置默认CSS样式，无法滚动，超出区域不显示，取消所有内外边距\r\n  autoStart: true, //自动执行渲染循环和逻辑循环\r\n  autoResize: true, //自动拉伸自适应不同屏幕分辨率\r\n  VRSupport: false, //是否加载VR支持模块\r\n  renderer: {\r\n    clearColor: 0x000000, //渲染器的默认清除颜色\r\n    clearAlpha: 1, //渲染器的默认清除颜色的透明度\r\n    pixelRatio: window.devicePixelRatio || 1, //用于移动平台的清晰度\r\n    precision: 'highp', // 渲染精细度，默认为高\r\n    antialias: true, //是否开启抗锯齿\r\n    alpha: false, // 渲染器是否保存alpha缓冲\r\n    logarithmicDepthBuffer: false, // 逻辑深度缓冲\r\n  },\r\n  normalEventList: ['click', 'mousedown', 'mouseup', 'touchstart',\r\n    'touchend', 'touchmove', 'mousemove'\r\n  ], //默认开启的原生事件监听，不建议将所有的事件监听都写在里面，每一个事件监听都会增加一次射线法碰撞检测，如果不必要的事件过多会降低性能\r\n  hammerEventList: 'press tap pressup pan swipe', //默认hammer手势事件的监听，同normalEventList一样，用到什么加入什么，不要一大堆东西全塞进去\r\n}\r\n\r\nexport {\r\n  DefaultSettings\r\n};","let NotFunctionError = class extends Error {\r\n  constructor( message ) {\r\n    super( message );\r\n    this.name = 'NotFunctionError';\r\n    this.message = message || 'The object is not a function.';\r\n  }\r\n};\r\n\r\nexport {\r\n  NotFunctionError\r\n};","import { NotFunctionError } from './../error/NotFunctionError.js';\r\n\r\nclass LoopManager {\r\n  constructor(cycleLevel = 1) {\r\n    //当它是true，不执行该循环\r\n    this.disable = false;\r\n    //记录循环次数\r\n    this.times = 0;\r\n    //每隔多少循环执行一次update，用于调整fps。数字越大，fps越低\r\n    this.cycleLevel = cycleLevel <= 1 ? 1 : cycleLevel;\r\n    this.functionMap = new Map();\r\n  }\r\n\r\n  update(time) {\r\n    this.times++;\r\n    if (this.disable || (this.times % this.cycleLevel) !== 0) {\r\n      return;\r\n    }\r\n    this.functionMap.forEach((value) => {\r\n      value();\r\n    });\r\n  }\r\n\r\n  add(func, key) {\r\n    if (typeof func !== 'function') {\r\n      throw new NotFunctionError();\r\n    } else {\r\n      if (key) {\r\n        this.functionMap.set(key, func);\r\n      } else {\r\n        key = Symbol();\r\n        this.functionMap.set(key, func);\r\n        return key;\r\n      }\r\n    }\r\n  }\r\n\r\n  removeAll() {\r\n    this.functionMap.clear();\r\n  }\r\n\r\n  remove(funcOrKey) {\r\n    if (typeof funcOrKey === 'function') {\r\n      this.functionMap.forEach((value, key) => {\r\n        if (value === funcOrKey) {\r\n          return this.functionMap.delete(key);\r\n        }\r\n      });\r\n      return false;\r\n    } else {\r\n      return this.functionMap.delete(funcOrKey);\r\n    }\r\n  }\r\n}\r\n\r\nexport {\r\n  LoopManager\r\n};","class EventManager {\r\n  constructor(world) {\r\n    world.eventManager = this;\r\n    this.world = world;\r\n    this.disable = false;\r\n    this.isDeep = true;\r\n    this.receivers = world.receivers;\r\n    this.raycaster = new THREE.Raycaster();\r\n    this.centerRaycaster = new THREE.Raycaster();\r\n    this.selectedObj = null;\r\n    this.centerSelectedObj = null;\r\n    this.isDetectingEnter = true;\r\n    let normalEventList = world.app.options.normalEventList;\r\n\r\n    for (let eventItem of normalEventList) {\r\n      world.app.parent.addEventListener(eventItem, (event) => {\r\n        if (this.disable) return;\r\n        this.raycastCheck(this.toNovaEvent(event));\r\n      });\r\n    }\r\n\r\n    try {\r\n      if (Hammer === undefined) {\r\n        return;\r\n      }\r\n    } catch (e) {\r\n      console.warn('Hammer没有引入，手势事件无法使用，只能使用基础的交互事件。');\r\n      return;\r\n    }\r\n    this.hammer = new Hammer(world.app.renderer.domElement);\r\n    console.log(world.app.options.hammerEventList)\r\n    this.hammer.on(world.app.options.hammerEventList, (event) => {\r\n      if (this.disable) return;\r\n      this.raycastCheck(event);\r\n    });\r\n  }\r\n\r\n  toNovaEvent(event) {\r\n    return {\r\n      changedPointers: [event],\r\n      center: {\r\n        x: event.clientX,\r\n        y: event.clientY,\r\n      },\r\n      type: event.type,\r\n      target: event.target\r\n    };\r\n  }\r\n\r\n  raycastCheck(event) {\r\n    let vec2 = new THREE.Vector2(event.center.x / this.world.app.getWorldWidth() *\r\n      2 - 1, 1 - event.center.y / this.world.app.getWorldHeight() * 2);\r\n    this.raycaster.setFromCamera(vec2, this.world.camera);\r\n    let intersects = this.raycaster.intersectObjects(this.world.receivers,\r\n      this.isDeep);\r\n    let intersect;\r\n    for (let i = 0; i < intersects.length; i++) {\r\n      if (intersects[i].object.isPenetrated) {\r\n        continue;\r\n      } else {\r\n        intersect = intersects[i];\r\n        break;\r\n      }\r\n    }\r\n    if (intersect && intersect.object.events && intersect.object.events[event\r\n        .type]) {\r\n      intersect.object.events[event.type].run(event, intersect);\r\n    }\r\n    return intersect;\r\n  }\r\n}\r\n\r\nexport {\r\n  EventManager\r\n};","import { LoopManager } from './LoopManager.js';\r\nimport { EventManager } from './../events/EventManager';\r\n\r\nclass World {\r\n  constructor(app, camera, clearColor) {\r\n    this.app = app;\r\n    this.scene = new THREE.Scene();\r\n    this.logicLoop = new LoopManager();\r\n    this.renderLoop = new LoopManager();\r\n    this.camera = camera || new THREE.PerspectiveCamera(45, app.getWorldWidth() /\r\n      app.getWorldHeight(), 0.01, 5000);\r\n    this.receivers = this.scene.children;\r\n    this.eventManager = new EventManager(this);\r\n    this.renderTargetParameters = {\r\n      minFilter: THREE.LinearFilter,\r\n      magFilter: THREE.LinearFilter,\r\n      format: THREE.RGBFormat,\r\n      stencilBuffer: false\r\n    };\r\n    this.isRTT = false;\r\n    this.clearColor = clearColor || 0;\r\n    this.fbo = new THREE.WebGLRenderTarget(this.app.getWorldWidth(),\r\n      this.app.getWorldHeight(), this.renderTargetParameters);\r\n    this.defaultRenderID = Symbol();\r\n    this.renderLoop.add(() => {\r\n      if (this.isRTT) {\r\n        this.app.renderer.render(this.scene, this.camera, this.fbo, true);\r\n      } else {\r\n        this.app.renderer.render(this.scene, this.camera);\r\n      }\r\n    }, this.defaultRenderID);\r\n    this.defaultUpdateID = Symbol();\r\n  }\r\n\r\n  update(time) {\r\n    this.logicLoop.update(time);\r\n    this.renderLoop.update(time);\r\n  }\r\n\r\n  resize(width, height) {\r\n    if (this.camera.type === 'PerspectiveCamera') {\r\n      this.camera.aspect = width / height;\r\n      this.camera.updateProjectionMatrix();\r\n    } else {\r\n      this.camera.left = -width / 2;\r\n      this.camera.right = width / 2;\r\n      this.camera.top = height / 2;\r\n      this.camera.bottom = -height / 2;\r\n      this.camera.updateProjectionMatrix();\r\n    }\r\n  }\r\n}\r\n\r\nexport {\r\n  World\r\n};","const APP_STOP = 0;\r\nconst APP_RUNNING = 1;\r\nconst APP_PAUSE = 2;\r\nconst WORLD_RUNNING = 1;\r\nconst WORLD_PAUSE = 2;\r\nconst VERSION = '0.0.1';\r\n\r\nconsole.log(\"Nova framework for Three.js, version: %c \" + VERSION, \"color:blue\");\r\n\r\nexport {\r\n  APP_STOP,\r\n  APP_RUNNING,\r\n  APP_PAUSE,\r\n  WORLD_RUNNING,\r\n  WORLD_PAUSE\r\n};","class VR {\r\n  constructor(app) {\r\n    this.app = app;\r\n    this.display = undefined;\r\n    this.polyfill = undefined;\r\n    this.isOpenVR = false;\r\n    this.vrEffect = undefined;\r\n    this.getVRDisplay();\r\n    this.createVREffect();\r\n  }\r\n\r\n  createVREffect() {\r\n    if (this.vrEffect) {\r\n      return;\r\n    }\r\n    if (!THREE.VREffect) {\r\n      console.warn(\"未引入VREffect.js，无法创建VR模式。\");\r\n      return;\r\n    }\r\n    this.vrEffect = new THREE.VREffect(this.app.renderer);\r\n    this.vrEffect.setSize(this.app.renderer.domElement.clientWidth,\r\n      this.app.renderer.domElement.clientHeight, false);\r\n    this.vrEffect.isOpened = false;\r\n    this.vrEffect.updateId = Symbol();\r\n  }\r\n\r\n  setPolyfill() {\r\n    if (this.polyfill) {\r\n      return;\r\n    }\r\n    if (!window.WebVRPolyfill) {\r\n      console.warn(\"未引入WebVRPolyfill.js，无法创建VR兼容模式。\");\r\n      return;\r\n    }\r\n    let config = (function() {\r\n      let config = {};\r\n      let q = window.location.search.substring(1);\r\n      if (q === '') {\r\n        return config;\r\n      }\r\n      let params = q.split('&');\r\n      let param, name, value;\r\n      for (let i = 0; i < params.length; i++) {\r\n        param = params[i].split('=');\r\n        name = param[0];\r\n        value = param[1];\r\n\r\n        // All config values are either boolean or float\r\n        config[name] = value === 'true' ? true :\r\n          value === 'false' ? false :\r\n          parseFloat(value);\r\n      }\r\n      return config;\r\n    })();\r\n    this.polyfill = new WebVRPolyfill(config);\r\n  }\r\n\r\n  getVRDisplay() {\r\n    if (!navigator.getVRDisplays) {\r\n      this.setPolyfill();\r\n    }\r\n    if(!navigator.getVRDisplays){\r\n    \treturn;\r\n    }\r\n    return navigator.getVRDisplays()\r\n      .then((vrDisplays) => {\r\n        if (vrDisplays.length) {\r\n          this.display = vrDisplays[0];\r\n          return this.display;\r\n        }\r\n        return \"no\";\r\n      }, (vrDisplays) => {\r\n        return \"no\";\r\n      });\r\n  }\r\n\r\n  open() {\r\n    if (!this.display || !this.vrEffect) {\r\n      console.warn(\"未发现VR设备或浏览器不兼容，无法进入VR模式。\");\r\n      return;\r\n    }\r\n    this.app.renderLoop.add(() => {\r\n      this.vrEffect.render(this.app.world.scene, this.app.world.camera);\r\n    }, this.vrEffect.updateId);\r\n    this.display.requestPresent([{ source: this.app.renderer.domElement }]);\r\n  }\r\n\r\n  close() {\r\n    this.app.renderLoop.remove(this.vrEffect.updateId);\r\n  }\r\n}\r\n\r\nexport {\r\n  VR\r\n};","import { World } from './World.js';\r\nimport { APP_RUNNING, APP_STOP, APP_PAUSE } from './../constant.js';\r\nimport { LoopManager } from './LoopManager.js';\r\nimport { VR } from './VR.js';\r\nimport { DefaultSettings } from './settings/DefaultSettings.js';\r\n\r\nclass App {\r\n  constructor(settings = {}) {\r\n    this.options = _.defaultsDeep(settings, DefaultSettings);\r\n    if (this.options.setCommonCSS) {\r\n      this.setCommonCSS();\r\n    }\r\n    this.parent = this.options.parent;\r\n    this.renderer = new THREE.WebGLRenderer({\r\n      antialias: this.options.renderer.antialias,\r\n      precision: this.options.renderer.precision,\r\n      alpha: this.options.renderer.alpha,\r\n      logarithmicDepthBuffer: this.options.renderer.logarithmicDepthBuffer\r\n    });\r\n    this.renderer.setClearColor(this.options.renderer.clearColor,\r\n      this.options.renderer.clearAlpha);\r\n    this.world = new World(this);\r\n    this.animationFrame;\r\n    this.state = APP_STOP;\r\n    this.logicLoop = new LoopManager();\r\n    this.renderLoop = new LoopManager();\r\n    window.addEventListener('resize', () => {\r\n      this.resize();\r\n    });\r\n    if (this.options.autoStart) {\r\n      this.start();\r\n    }\r\n    if (this.options.VRSupport) {\r\n      this.VR = new VR(this);\r\n    }\r\n  }\r\n\r\n  resize() {\r\n    let width = this.getWorldWidth();\r\n    let height = this.getWorldHeight();\r\n    this.world.resize(width, height);\r\n    this.renderer.setSize(width, height);\r\n    this.renderer.setPixelRatio(this.options.renderer.pixelRatio);\r\n  }\r\n\r\n  update(time) {\r\n    if (this.state === APP_RUNNING) {\r\n      this.logicLoop.update(time);\r\n      this.world.update(time);\r\n      this.renderLoop.update(time);\r\n    }\r\n    this.animationFrame = requestAnimationFrame(() => {\r\n      this.update();\r\n    });\r\n  }\r\n\r\n  setCommonCSS() {\r\n    document.write(\r\n      '<style>*{margin:0;padding:0} body{overflow:hidden}</style>');\r\n  }\r\n\r\n  getWorldWidth() {\r\n    return this.parent === document.body ? window.innerWidth :\r\n      this.parent.offsetWidth;\r\n  }\r\n\r\n  getWorldHeight() {\r\n    return this.parent === document.body ? window.innerHeight :\r\n      this.parent.offsetHeight;\r\n  }\r\n\r\n  start() {\r\n    if (this.state === APP_STOP) {\r\n      this.state = APP_RUNNING;\r\n      this.parent.appendChild(this.renderer.domElement);\r\n      this.resize();\r\n      this.update();\r\n    }\r\n  }\r\n\r\n  resume() {\r\n    if (this.state === APP_PAUSE) {\r\n      this.state = APP_RUNNING;\r\n    }\r\n  }\r\n\r\n  pause() {\r\n    if (this.state === APP_RUNNING) {\r\n      this.state = APP_PAUSE;\r\n    }\r\n  }\r\n\r\n  destroy() {\r\n    this.world.destroy();\r\n  }\r\n\r\n  openFullScreen() {\r\n    let container = this.parent;\r\n    this.isFullScreen = true;\r\n    if (container.requestFullscreen) {\r\n      container.requestFullscreen();\r\n    } else if (container.msRequestFullscreen) {\r\n      container.msRequestFullscreen();\r\n    } else if (container.mozRequestFullScreen) {\r\n      container.mozRequestFullScreen();\r\n    } else if (container.webkitRequestFullscreen) {\r\n      container.webkitRequestFullscreen();\r\n    } else {\r\n      this.isFullScreen = false;\r\n    }\r\n    return this.isFullScreen;\r\n  }\r\n\r\n  closeFullScreen() {\r\n    let container = document;\r\n    this.isFullScreen = false;\r\n    if (container.exitFullscreen) {\r\n      container.exitFullscreen();\r\n    } else if (container.mozCancelFullScreen) {\r\n      container.mozCancelFullScreen();\r\n    } else if (container.webkitExitFullScreen) {\r\n      container.webkitExitFullScreen();\r\n    } else if (container.msExitFullscreen) {\r\n      container.msExitFullscreen();\r\n    } else if (container.webkitCancelFullScreen) {\r\n      container.webkitCancelFullScreen();\r\n    } else if (container.webkitExitFullScreen) {\r\n      container.webkitCancelFullScreen();\r\n    }\r\n    return this.isFullScreen;\r\n  }\r\n\r\n  toggleFullScreen() {\r\n    if (this.isFullScreen) {\r\n      this.closeFullScreen();\r\n    } else {\r\n      this.openFullScreen();\r\n    }\r\n\r\n  }\r\n\r\n  screenshot() {\r\n    let w = window.open('', '');\r\n    w.document.title = \"Nova Screenshot\";\r\n    let img = new Image();\r\n    this.renderer.render(this.world.scene, this.world.camera);\r\n    img.src = app.renderer.domElement.toDataURL();\r\n    w.document.body.appendChild(img);\r\n  }\r\n}\r\n\r\nexport {\r\n  App\r\n};","class Bind {\r\n  constructor(obj) {\r\n    for (let i in obj) {\r\n      this[i] = obj[i];\r\n      this.bindMap = new Map();\r\n      this.defineReactive(this, i, this[i]);\r\n    }\r\n  }\r\n\r\n  add(obj, funcs = {}) {\r\n    this.bindMap.set(obj, funcs);\r\n  }\r\n\r\n  remove(obj) {\r\n    this.bindMap.delete(obj);\r\n  }\r\n\r\n  defineReactive(data, key, val) {\r\n    Object.defineProperty(data, key, {\r\n      enumerable: true,\r\n      configurable: false,\r\n      get: function() {\r\n        return val;\r\n      },\r\n      set: function(newVal) {\r\n        val = newVal;\r\n        let bindMap = data.bindMap;\r\n        for (let [obj, funcs] of bindMap) {\r\n          if (obj[key] !== undefined) {\r\n            obj[key] = funcs[key] ? funcs[key](val, obj) : val;\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n}\r\nexport {\r\n  Bind\r\n};","class FBOWorld {\r\n  constructor(app, camera, width, height) {\r\n    this.width = width;\r\n    this.height = height;\r\n    this.app = app;\r\n    this.scene = new THREE.Scene();\r\n    this.logicLoop = new NOVA.LoopManager();\r\n    this.renderLoop = new NOVA.LoopManager();\r\n    this.camera = camera || new THREE.PerspectiveCamera(45, this.width /\r\n      this.height, 0.01, 5000);\r\n    this.receivers = this.scene.children;\r\n\r\n    this.renderTargetParameters = {\r\n      minFilter: THREE.LinearFilter,\r\n      magFilter: THREE.LinearFilter,\r\n      format: THREE.RGBFormat,\r\n      stencilBuffer: false\r\n    };\r\n    this.clearColor = 0;\r\n    this.fbo = new THREE.WebGLRenderTarget(this.width,\r\n      this.height, this.renderTargetParameters);\r\n    this.defaultRenderID = Symbol();\r\n    this.defaultUpdateID = Symbol();\r\n    this.resize();\r\n    this.renderLoop.add(() => {\r\n      this.app.renderer.render(this.scene, this.camera, this.fbo, true);\r\n    }, this.defaultRenderID);\r\n  }\r\n\r\n  update(time) {\r\n    this.logicLoop.update(time);\r\n    this.renderLoop.update(time);\r\n  }\r\n\r\n  resize() {\r\n    if (this.camera.type === 'PerspectiveCamera') {\r\n      this.camera.aspect = this.width / this.height;\r\n      this.camera.updateProjectionMatrix();\r\n    } else {\r\n      this.camera.left = -this.width / 2;\r\n      this.camera.right = this.width / 2;\r\n      this.camera.top = this.height / 2;\r\n      this.camera.bottom = -this.height / 2;\r\n      this.camera.updateProjectionMatrix();\r\n    }\r\n  }\r\n}\r\n\r\nexport{\r\n\tFBOWorld\r\n}\r\n","class Monitor {\r\n  constructor(world, option) {\r\n    this.option = option;\r\n    this.fullWidth = world.app.getWorldWidth();\r\n    this.fullHeight = world.app.getWorldHeight();\r\n    this.renderer = new THREE.WebGLRenderer();\r\n    this.world = world;\r\n    this.canvas = this.renderer.domElement;\r\n    this.renderer.setSize(this.fullWidth * option.width, this.fullHeight *\r\n      option.height);\r\n    this.renderer.setPixelRatio(window.devicePixelRatio);\r\n  }\r\n\r\n  setViewOffset() {\r\n    let viewX = this.fullWidth * this.option.left;\r\n    let viewY = this.fullHeight * this.option.top;\r\n    let viewWidth = this.fullWidth * this.option.width;\r\n    let viewHeight = this.fullHeight * this.option.height;\r\n    this.world.camera.setViewOffset(this.fullWidth, this.fullHeight, viewX,\r\n      viewY, viewWidth, viewHeight);\r\n  }\r\n\r\n  render() {\r\n    this.setViewOffset();\r\n    this.renderer.render(this.world.scene, this.world.camera);\r\n  }\r\n}\r\n\r\nexport {\r\n  Monitor\r\n};","class QR8bitByte {\r\n  constructor(data) {\r\n    this.mode = QRMode.MODE_8BIT_BYTE;\r\n    this.data = data;\r\n    this.parsedData = [];\r\n\r\n    for (var i = 0, l = this.data.length; i < l; i++) {\r\n      var byteArray = [];\r\n      var code = this.data.charCodeAt(i);\r\n\r\n      if (code > 0x10000) {\r\n        byteArray[0] = 0xF0 | ((code & 0x1C0000) >>> 18);\r\n        byteArray[1] = 0x80 | ((code & 0x3F000) >>> 12);\r\n        byteArray[2] = 0x80 | ((code & 0xFC0) >>> 6);\r\n        byteArray[3] = 0x80 | (code & 0x3F);\r\n      } else if (code > 0x800) {\r\n        byteArray[0] = 0xE0 | ((code & 0xF000) >>> 12);\r\n        byteArray[1] = 0x80 | ((code & 0xFC0) >>> 6);\r\n        byteArray[2] = 0x80 | (code & 0x3F);\r\n      } else if (code > 0x80) {\r\n        byteArray[0] = 0xC0 | ((code & 0x7C0) >>> 6);\r\n        byteArray[1] = 0x80 | (code & 0x3F);\r\n      } else {\r\n        byteArray[0] = code;\r\n      }\r\n\r\n      this.parsedData.push(byteArray);\r\n    }\r\n\r\n    this.parsedData = Array.prototype.concat.apply([], this.parsedData);\r\n\r\n    if (this.parsedData.length != this.data.length) {\r\n      this.parsedData.unshift(191);\r\n      this.parsedData.unshift(187);\r\n      this.parsedData.unshift(239);\r\n    }\r\n  }\r\n\r\n  getLength(buffer) {\r\n    return this.parsedData.length;\r\n  }\r\n\r\n  write(buffer) {\r\n    for (var i = 0, l = this.parsedData.length; i < l; i++) {\r\n      buffer.put(this.parsedData[i], 8);\r\n    }\r\n  }\r\n}\r\n\r\nclass QRCodeModel {\r\n  constructor(typeNumber, errorCorrectLevel) {\r\n    this.typeNumber = typeNumber;\r\n    this.errorCorrectLevel = errorCorrectLevel;\r\n    this.modules = null;\r\n    this.moduleCount = 0;\r\n    this.dataCache = null;\r\n    this.dataList = [];\r\n  }\r\n  addData(data) {\r\n    var newData = new QR8bitByte(data);\r\n    this.dataList.push(newData);\r\n    this.dataCache = null;\r\n  }\r\n\r\n  isDark(row, col) {\r\n    if (row < 0 || this.moduleCount <= row || col < 0 || this.moduleCount <=\r\n      col) {\r\n      throw new Error(row + \",\" + col);\r\n    }\r\n    return this.modules[row][col];\r\n  }\r\n\r\n  getModuleCount() {\r\n    return this.moduleCount;\r\n  }\r\n\r\n  make() {\r\n    this.makeImpl(false, this.getBestMaskPattern());\r\n  }\r\n\r\n  makeImpl(test, maskPattern) {\r\n    this.moduleCount = this.typeNumber * 4 + 17;\r\n    this.modules = new Array(this.moduleCount);\r\n    for (var row = 0; row < this.moduleCount; row++) {\r\n      this.modules[row] = new Array(this.moduleCount);\r\n      for (var col = 0; col < this.moduleCount; col++) {\r\n        this.modules[row][col] = null;\r\n      }\r\n    }\r\n    this.setupPositionProbePattern(0, 0);\r\n    this.setupPositionProbePattern(this.moduleCount - 7, 0);\r\n    this.setupPositionProbePattern(0, this.moduleCount - 7);\r\n    this.setupPositionAdjustPattern();\r\n    this.setupTimingPattern();\r\n    this.setupTypeInfo(test, maskPattern);\r\n    if (this.typeNumber >= 7) {\r\n      this.setupTypeNumber(test);\r\n    }\r\n    if (this.dataCache == null) {\r\n      this.dataCache = QRCodeModel.createData(this.typeNumber, this.errorCorrectLevel,\r\n        this.dataList);\r\n    }\r\n    this.mapData(this.dataCache, maskPattern);\r\n  }\r\n\r\n  setupPositionProbePattern(row, col) {\r\n    for (var r = -1; r <= 7; r++) {\r\n      if (row + r <= -1 || this.moduleCount <= row + r) continue;\r\n      for (var c = -1; c <= 7; c++) {\r\n        if (col + c <= -1 || this.moduleCount <= col + c) continue;\r\n        if ((0 <= r && r <= 6 && (c == 0 || c == 6)) || (0 <= c && c <=\r\n            6 && (r == 0 || r == 6)) || (2 <= r && r <= 4 && 2 <= c &&\r\n            c <= 4)) {\r\n          this.modules[row + r][col + c] = true;\r\n        } else {\r\n          this.modules[row + r][col + c] = false;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  getBestMaskPattern() {\r\n    var minLostPoint = 0;\r\n    var pattern = 0;\r\n    for (var i = 0; i < 8; i++) {\r\n      this.makeImpl(true, i);\r\n      var lostPoint = QRUtil.getLostPoint(this);\r\n      if (i == 0 || minLostPoint > lostPoint) {\r\n        minLostPoint = lostPoint;\r\n        pattern = i;\r\n      }\r\n    }\r\n    return pattern;\r\n  }\r\n\r\n  createMovieClip(target_mc, instance_name, depth) {\r\n    var qr_mc = target_mc.createEmptyMovieClip(instance_name, depth);\r\n    var cs = 1;\r\n    this.make();\r\n    for (var row = 0; row < this.modules.length; row++) {\r\n      var y = row * cs;\r\n      for (var col = 0; col < this.modules[row].length; col++) {\r\n        var x = col * cs;\r\n        var dark = this.modules[row][col];\r\n        if (dark) {\r\n          qr_mc.beginFill(0, 100);\r\n          qr_mc.moveTo(x, y);\r\n          qr_mc.lineTo(x + cs, y);\r\n          qr_mc.lineTo(x + cs, y + cs);\r\n          qr_mc.lineTo(x, y + cs);\r\n          qr_mc.endFill();\r\n        }\r\n      }\r\n    }\r\n    return qr_mc;\r\n  }\r\n\r\n  setupTimingPattern() {\r\n    for (var r = 8; r < this.moduleCount - 8; r++) {\r\n      if (this.modules[r][6] != null) {\r\n        continue;\r\n      }\r\n      this.modules[r][6] = (r % 2 == 0);\r\n    }\r\n    for (var c = 8; c < this.moduleCount - 8; c++) {\r\n      if (this.modules[6][c] != null) {\r\n        continue;\r\n      }\r\n      this.modules[6][c] = (c % 2 == 0);\r\n    }\r\n  }\r\n\r\n  setupPositionAdjustPattern() {\r\n    var pos = QRUtil.getPatternPosition(this.typeNumber);\r\n    for (var i = 0; i < pos.length; i++) {\r\n      for (var j = 0; j < pos.length; j++) {\r\n        var row = pos[i];\r\n        var col = pos[j];\r\n        if (this.modules[row][col] != null) {\r\n          continue;\r\n        }\r\n        for (var r = -2; r <= 2; r++) {\r\n          for (var c = -2; c <= 2; c++) {\r\n            if (r == -2 || r == 2 || c == -2 || c == 2 || (r == 0 && c ==\r\n                0)) {\r\n              this.modules[row + r][col + c] = true;\r\n            } else {\r\n              this.modules[row + r][col + c] = false;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  setupTypeNumber(test) {\r\n    var bits = QRUtil.getBCHTypeNumber(this.typeNumber);\r\n    for (var i = 0; i < 18; i++) {\r\n      var mod = (!test && ((bits >> i) & 1) == 1);\r\n      this.modules[Math.floor(i / 3)][i % 3 + this.moduleCount - 8 - 3] =\r\n        mod;\r\n    }\r\n    for (var i = 0; i < 18; i++) {\r\n      var mod = (!test && ((bits >> i) & 1) == 1);\r\n      this.modules[i % 3 + this.moduleCount - 8 - 3][Math.floor(i / 3)] =\r\n        mod;\r\n    }\r\n  }\r\n\r\n  setupTypeInfo(test, maskPattern) {\r\n    var data = (this.errorCorrectLevel << 3) | maskPattern;\r\n    var bits = QRUtil.getBCHTypeInfo(data);\r\n    for (var i = 0; i < 15; i++) {\r\n      var mod = (!test && ((bits >> i) & 1) == 1);\r\n      if (i < 6) {\r\n        this.modules[i][8] = mod;\r\n      } else if (i < 8) {\r\n        this.modules[i + 1][8] = mod;\r\n      } else {\r\n        this.modules[this.moduleCount - 15 + i][8] = mod;\r\n      }\r\n    }\r\n    for (var i = 0; i < 15; i++) {\r\n      var mod = (!test && ((bits >> i) & 1) == 1);\r\n      if (i < 8) {\r\n        this.modules[8][this.moduleCount - i - 1] = mod;\r\n      } else if (i < 9) {\r\n        this.modules[8][15 - i - 1 + 1] = mod;\r\n      } else {\r\n        this.modules[8][15 - i - 1] = mod;\r\n      }\r\n    }\r\n    this.modules[this.moduleCount - 8][8] = (!test);\r\n  }\r\n\r\n  mapData(data, maskPattern) {\r\n    var inc = -1;\r\n    var row = this.moduleCount - 1;\r\n    var bitIndex = 7;\r\n    var byteIndex = 0;\r\n    for (var col = this.moduleCount - 1; col > 0; col -= 2) {\r\n      if (col == 6) col--;\r\n      while (true) {\r\n        for (var c = 0; c < 2; c++) {\r\n          if (this.modules[row][col - c] == null) {\r\n            var dark = false;\r\n            if (byteIndex < data.length) {\r\n              dark = (((data[byteIndex] >>> bitIndex) & 1) == 1);\r\n            }\r\n            var mask = QRUtil.getMask(maskPattern, row, col - c);\r\n            if (mask) {\r\n              dark = !dark;\r\n            }\r\n            this.modules[row][col - c] = dark;\r\n            bitIndex--;\r\n            if (bitIndex == -1) {\r\n              byteIndex++;\r\n              bitIndex = 7;\r\n            }\r\n          }\r\n        }\r\n        row += inc;\r\n        if (row < 0 || this.moduleCount <= row) {\r\n          row -= inc;\r\n          inc = -inc;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nQRCodeModel.PAD0 = 0xEC;\r\nQRCodeModel.PAD1 = 0x11;\r\nQRCodeModel.createData = function(typeNumber, errorCorrectLevel, dataList) {\r\n  var rsBlocks = QRRSBlock.getRSBlocks(typeNumber, errorCorrectLevel);\r\n  var buffer = new QRBitBuffer();\r\n  for (var i = 0; i < dataList.length; i++) {\r\n    var data = dataList[i];\r\n    buffer.put(data.mode, 4);\r\n    buffer.put(data.getLength(), QRUtil.getLengthInBits(data.mode,\r\n      typeNumber));\r\n    data.write(buffer);\r\n  }\r\n  var totalDataCount = 0;\r\n  for (var i = 0; i < rsBlocks.length; i++) {\r\n    totalDataCount += rsBlocks[i].dataCount;\r\n  }\r\n  if (buffer.getLengthInBits() > totalDataCount * 8) {\r\n    throw new Error(\"code length overflow. (\" +\r\n      buffer.getLengthInBits() +\r\n      \">\" +\r\n      totalDataCount * 8 +\r\n      \")\");\r\n  }\r\n  if (buffer.getLengthInBits() + 4 <= totalDataCount * 8) {\r\n    buffer.put(0, 4);\r\n  }\r\n  while (buffer.getLengthInBits() % 8 != 0) {\r\n    buffer.putBit(false);\r\n  }\r\n  while (true) {\r\n    if (buffer.getLengthInBits() >= totalDataCount * 8) {\r\n      break;\r\n    }\r\n    buffer.put(QRCodeModel.PAD0, 8);\r\n    if (buffer.getLengthInBits() >= totalDataCount * 8) {\r\n      break;\r\n    }\r\n    buffer.put(QRCodeModel.PAD1, 8);\r\n  }\r\n  return QRCodeModel.createBytes(buffer, rsBlocks);\r\n};\r\nQRCodeModel.createBytes = function(buffer, rsBlocks) {\r\n  var offset = 0;\r\n  var maxDcCount = 0;\r\n  var maxEcCount = 0;\r\n  var dcdata = new Array(rsBlocks.length);\r\n  var ecdata = new Array(rsBlocks.length);\r\n  for (var r = 0; r < rsBlocks.length; r++) {\r\n    var dcCount = rsBlocks[r].dataCount;\r\n    var ecCount = rsBlocks[r].totalCount - dcCount;\r\n    maxDcCount = Math.max(maxDcCount, dcCount);\r\n    maxEcCount = Math.max(maxEcCount, ecCount);\r\n    dcdata[r] = new Array(dcCount);\r\n    for (var i = 0; i < dcdata[r].length; i++) {\r\n      dcdata[r][i] = 0xff & buffer.buffer[i + offset];\r\n    }\r\n    offset += dcCount;\r\n    var rsPoly = QRUtil.getErrorCorrectPolynomial(ecCount);\r\n    var rawPoly = new QRPolynomial(dcdata[r], rsPoly.getLength() - 1);\r\n    var modPoly = rawPoly.mod(rsPoly);\r\n    ecdata[r] = new Array(rsPoly.getLength() - 1);\r\n    for (var i = 0; i < ecdata[r].length; i++) {\r\n      var modIndex = i + modPoly.getLength() - ecdata[r].length;\r\n      ecdata[r][i] = (modIndex >= 0) ? modPoly.get(modIndex) : 0;\r\n    }\r\n  }\r\n  var totalCodeCount = 0;\r\n  for (var i = 0; i < rsBlocks.length; i++) {\r\n    totalCodeCount += rsBlocks[i].totalCount;\r\n  }\r\n  var data = new Array(totalCodeCount);\r\n  var index = 0;\r\n  for (var i = 0; i < maxDcCount; i++) {\r\n    for (var r = 0; r < rsBlocks.length; r++) {\r\n      if (i < dcdata[r].length) {\r\n        data[index++] = dcdata[r][i];\r\n      }\r\n    }\r\n  }\r\n  for (var i = 0; i < maxEcCount; i++) {\r\n    for (var r = 0; r < rsBlocks.length; r++) {\r\n      if (i < ecdata[r].length) {\r\n        data[index++] = ecdata[r][i];\r\n      }\r\n    }\r\n  }\r\n  return data;\r\n};\r\nvar QRMode = {\r\n  MODE_NUMBER: 1 << 0,\r\n  MODE_ALPHA_NUM: 1 << 1,\r\n  MODE_8BIT_BYTE: 1 << 2,\r\n  MODE_KANJI: 1 << 3\r\n};\r\nvar QRErrorCorrectLevel = {\r\n  L: 1,\r\n  M: 0,\r\n  Q: 3,\r\n  H: 2\r\n};\r\nvar QRMaskPattern = {\r\n  PATTERN000: 0,\r\n  PATTERN001: 1,\r\n  PATTERN010: 2,\r\n  PATTERN011: 3,\r\n  PATTERN100: 4,\r\n  PATTERN101: 5,\r\n  PATTERN110: 6,\r\n  PATTERN111: 7\r\n};\r\nvar QRUtil = {\r\n  PATTERN_POSITION_TABLE: [\r\n    [],\r\n    [6, 18],\r\n    [6, 22],\r\n    [6, 26],\r\n    [6, 30],\r\n    [6, 34],\r\n    [6, 22, 38],\r\n    [6, 24, 42],\r\n    [6, 26, 46],\r\n    [6, 28, 50],\r\n    [6, 30, 54],\r\n    [6, 32, 58],\r\n    [6, 34, 62],\r\n    [6, 26, 46, 66],\r\n    [6, 26, 48, 70],\r\n    [6, 26, 50, 74],\r\n    [6, 30, 54, 78],\r\n    [6, 30, 56, 82],\r\n    [6, 30, 58, 86],\r\n    [6, 34, 62, 90],\r\n    [6, 28, 50, 72, 94],\r\n    [6, 26, 50, 74, 98],\r\n    [6, 30, 54, 78, 102],\r\n    [6, 28, 54, 80, 106],\r\n    [6, 32, 58, 84, 110],\r\n    [6, 30, 58, 86, 114],\r\n    [6, 34, 62, 90, 118],\r\n    [6, 26, 50, 74, 98, 122],\r\n    [6, 30, 54, 78, 102, 126],\r\n    [6, 26, 52, 78, 104, 130],\r\n    [6, 30, 56, 82, 108, 134],\r\n    [6, 34, 60, 86, 112, 138],\r\n    [6, 30, 58, 86, 114, 142],\r\n    [6, 34, 62, 90, 118, 146],\r\n    [6, 30, 54, 78, 102, 126, 150],\r\n    [6, 24, 50, 76, 102, 128, 154],\r\n    [6, 28, 54, 80, 106, 132, 158],\r\n    [6, 32, 58, 84, 110, 136, 162],\r\n    [6, 26, 54, 82, 110, 138, 166],\r\n    [6, 30, 58, 86, 114, 142, 170]\r\n  ],\r\n  G15: (1 << 10) | (1 << 8) | (1 << 5) | (1 << 4) | (1 << 2) | (1 << 1) |\r\n    (1 << 0),\r\n  G18: (1 << 12) | (1 << 11) | (1 << 10) | (1 << 9) | (1 << 8) | (1 << 5) |\r\n    (1 << 2) | (1 << 0),\r\n  G15_MASK: (1 << 14) | (1 << 12) | (1 << 10) | (1 << 4) | (1 << 1),\r\n  getBCHTypeInfo: function(data) {\r\n    var d = data << 10;\r\n    while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15) >= 0) {\r\n      d ^= (QRUtil.G15 << (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(\r\n        QRUtil.G15)));\r\n    }\r\n    return ((data << 10) | d) ^ QRUtil.G15_MASK;\r\n  },\r\n  getBCHTypeNumber: function(data) {\r\n    var d = data << 12;\r\n    while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18) >= 0) {\r\n      d ^= (QRUtil.G18 << (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(\r\n        QRUtil.G18)));\r\n    }\r\n    return (data << 12) | d;\r\n  },\r\n  getBCHDigit: function(data) {\r\n    var digit = 0;\r\n    while (data != 0) {\r\n      digit++;\r\n      data >>>= 1;\r\n    }\r\n    return digit;\r\n  },\r\n  getPatternPosition: function(typeNumber) {\r\n    return QRUtil.PATTERN_POSITION_TABLE[typeNumber - 1];\r\n  },\r\n  getMask: function(maskPattern, i, j) {\r\n    switch (maskPattern) {\r\n      case QRMaskPattern.PATTERN000:\r\n        return (i + j) % 2 == 0;\r\n      case QRMaskPattern.PATTERN001:\r\n        return i % 2 == 0;\r\n      case QRMaskPattern.PATTERN010:\r\n        return j % 3 == 0;\r\n      case QRMaskPattern.PATTERN011:\r\n        return (i + j) % 3 == 0;\r\n      case QRMaskPattern.PATTERN100:\r\n        return (Math.floor(i / 2) + Math.floor(j / 3)) % 2 == 0;\r\n      case QRMaskPattern.PATTERN101:\r\n        return (i * j) % 2 + (i * j) % 3 == 0;\r\n      case QRMaskPattern.PATTERN110:\r\n        return ((i * j) % 2 + (i * j) % 3) % 2 == 0;\r\n      case QRMaskPattern.PATTERN111:\r\n        return ((i * j) % 3 + (i + j) % 2) % 2 == 0;\r\n      default:\r\n        throw new Error(\"bad maskPattern:\" + maskPattern);\r\n    }\r\n  },\r\n  getErrorCorrectPolynomial: function(errorCorrectLength) {\r\n    var a = new QRPolynomial([1], 0);\r\n    for (var i = 0; i < errorCorrectLength; i++) {\r\n      a = a.multiply(new QRPolynomial([1, QRMath.gexp(i)], 0));\r\n    }\r\n    return a;\r\n  },\r\n  getLengthInBits: function(mode, type) {\r\n    if (1 <= type && type < 10) {\r\n      switch (mode) {\r\n        case QRMode.MODE_NUMBER:\r\n          return 10;\r\n        case QRMode.MODE_ALPHA_NUM:\r\n          return 9;\r\n        case QRMode.MODE_8BIT_BYTE:\r\n          return 8;\r\n        case QRMode.MODE_KANJI:\r\n          return 8;\r\n        default:\r\n          throw new Error(\"mode:\" + mode);\r\n      }\r\n    } else if (type < 27) {\r\n      switch (mode) {\r\n        case QRMode.MODE_NUMBER:\r\n          return 12;\r\n        case QRMode.MODE_ALPHA_NUM:\r\n          return 11;\r\n        case QRMode.MODE_8BIT_BYTE:\r\n          return 16;\r\n        case QRMode.MODE_KANJI:\r\n          return 10;\r\n        default:\r\n          throw new Error(\"mode:\" + mode);\r\n      }\r\n    } else if (type < 41) {\r\n      switch (mode) {\r\n        case QRMode.MODE_NUMBER:\r\n          return 14;\r\n        case QRMode.MODE_ALPHA_NUM:\r\n          return 13;\r\n        case QRMode.MODE_8BIT_BYTE:\r\n          return 16;\r\n        case QRMode.MODE_KANJI:\r\n          return 12;\r\n        default:\r\n          throw new Error(\"mode:\" + mode);\r\n      }\r\n    } else {\r\n      throw new Error(\"type:\" + type);\r\n    }\r\n  },\r\n  getLostPoint: function(qrCode) {\r\n    var moduleCount = qrCode.getModuleCount();\r\n    var lostPoint = 0;\r\n    for (var row = 0; row < moduleCount; row++) {\r\n      for (var col = 0; col < moduleCount; col++) {\r\n        var sameCount = 0;\r\n        var dark = qrCode.isDark(row, col);\r\n        for (var r = -1; r <= 1; r++) {\r\n          if (row + r < 0 || moduleCount <= row + r) {\r\n            continue;\r\n          }\r\n          for (var c = -1; c <= 1; c++) {\r\n            if (col + c < 0 || moduleCount <= col + c) {\r\n              continue;\r\n            }\r\n            if (r == 0 && c == 0) {\r\n              continue;\r\n            }\r\n            if (dark == qrCode.isDark(row + r, col + c)) {\r\n              sameCount++;\r\n            }\r\n          }\r\n        }\r\n        if (sameCount > 5) {\r\n          lostPoint += (3 + sameCount - 5);\r\n        }\r\n      }\r\n    }\r\n    for (var row = 0; row < moduleCount - 1; row++) {\r\n      for (var col = 0; col < moduleCount - 1; col++) {\r\n        var count = 0;\r\n        if (qrCode.isDark(row, col)) count++;\r\n        if (qrCode.isDark(row + 1, col)) count++;\r\n        if (qrCode.isDark(row, col + 1)) count++;\r\n        if (qrCode.isDark(row + 1, col + 1)) count++;\r\n        if (count == 0 || count == 4) {\r\n          lostPoint += 3;\r\n        }\r\n      }\r\n    }\r\n    for (var row = 0; row < moduleCount; row++) {\r\n      for (var col = 0; col < moduleCount - 6; col++) {\r\n        if (qrCode.isDark(row, col) && !qrCode.isDark(row, col + 1) &&\r\n          qrCode.isDark(row, col + 2) && qrCode.isDark(row, col + 3) &&\r\n          qrCode.isDark(row, col + 4) && !qrCode.isDark(row, col + 5) &&\r\n          qrCode.isDark(row, col + 6)) {\r\n          lostPoint += 40;\r\n        }\r\n      }\r\n    }\r\n    for (var col = 0; col < moduleCount; col++) {\r\n      for (var row = 0; row < moduleCount - 6; row++) {\r\n        if (qrCode.isDark(row, col) && !qrCode.isDark(row + 1, col) &&\r\n          qrCode.isDark(row + 2, col) && qrCode.isDark(row + 3, col) &&\r\n          qrCode.isDark(row + 4, col) && !qrCode.isDark(row + 5, col) &&\r\n          qrCode.isDark(row + 6, col)) {\r\n          lostPoint += 40;\r\n        }\r\n      }\r\n    }\r\n    var darkCount = 0;\r\n    for (var col = 0; col < moduleCount; col++) {\r\n      for (var row = 0; row < moduleCount; row++) {\r\n        if (qrCode.isDark(row, col)) {\r\n          darkCount++;\r\n        }\r\n      }\r\n    }\r\n    var ratio = Math.abs(100 * darkCount / moduleCount / moduleCount -\r\n      50) / 5;\r\n    lostPoint += ratio * 10;\r\n    return lostPoint;\r\n  }\r\n};\r\nvar QRMath = {\r\n  glog: function(n) {\r\n    if (n < 1) {\r\n      throw new Error(\"glog(\" + n + \")\");\r\n    }\r\n    return QRMath.LOG_TABLE[n];\r\n  },\r\n  gexp: function(n) {\r\n    while (n < 0) {\r\n      n += 255;\r\n    }\r\n    while (n >= 256) {\r\n      n -= 255;\r\n    }\r\n    return QRMath.EXP_TABLE[n];\r\n  },\r\n  EXP_TABLE: new Array(256),\r\n  LOG_TABLE: new Array(256)\r\n};\r\nfor (var i = 0; i < 8; i++) {\r\n  QRMath.EXP_TABLE[i] = 1 << i;\r\n}\r\nfor (var i = 8; i < 256; i++) {\r\n  QRMath.EXP_TABLE[i] = QRMath.EXP_TABLE[i - 4] ^ QRMath.EXP_TABLE[i - 5] ^\r\n    QRMath.EXP_TABLE[i - 6] ^ QRMath.EXP_TABLE[i - 8];\r\n}\r\nfor (var i = 0; i < 255; i++) {\r\n  QRMath.LOG_TABLE[QRMath.EXP_TABLE[i]] = i;\r\n}\r\n\r\nfunction QRPolynomial(num, shift) {\r\n  if (num.length == undefined) {\r\n    throw new Error(num.length + \"/\" + shift);\r\n  }\r\n  var offset = 0;\r\n  while (offset < num.length && num[offset] == 0) {\r\n    offset++;\r\n  }\r\n  this.num = new Array(num.length - offset + shift);\r\n  for (var i = 0; i < num.length - offset; i++) {\r\n    this.num[i] = num[i + offset];\r\n  }\r\n}\r\nQRPolynomial.prototype = {\r\n  get: function(index) {\r\n    return this.num[index];\r\n  },\r\n  getLength: function() {\r\n    return this.num.length;\r\n  },\r\n  multiply: function(e) {\r\n    var num = new Array(this.getLength() + e.getLength() - 1);\r\n    for (var i = 0; i < this.getLength(); i++) {\r\n      for (var j = 0; j < e.getLength(); j++) {\r\n        num[i + j] ^= QRMath.gexp(QRMath.glog(this.get(i)) + QRMath.glog(\r\n          e.get(j)));\r\n      }\r\n    }\r\n    return new QRPolynomial(num, 0);\r\n  },\r\n  mod: function(e) {\r\n    if (this.getLength() - e.getLength() < 0) {\r\n      return this;\r\n    }\r\n    var ratio = QRMath.glog(this.get(0)) - QRMath.glog(e.get(0));\r\n    var num = new Array(this.getLength());\r\n    for (var i = 0; i < this.getLength(); i++) {\r\n      num[i] = this.get(i);\r\n    }\r\n    for (var i = 0; i < e.getLength(); i++) {\r\n      num[i] ^= QRMath.gexp(QRMath.glog(e.get(i)) + ratio);\r\n    }\r\n    return new QRPolynomial(num, 0)\r\n      .mod(e);\r\n  }\r\n};\r\n\r\nfunction QRRSBlock(totalCount, dataCount) {\r\n  this.totalCount = totalCount;\r\n  this.dataCount = dataCount;\r\n}\r\nQRRSBlock.RS_BLOCK_TABLE = [\r\n  [1, 26, 19],\r\n  [1, 26, 16],\r\n  [1, 26, 13],\r\n  [1, 26, 9],\r\n  [1, 44, 34],\r\n  [1, 44, 28],\r\n  [1, 44, 22],\r\n  [1, 44, 16],\r\n  [1, 70, 55],\r\n  [1, 70, 44],\r\n  [2, 35, 17],\r\n  [2, 35, 13],\r\n  [1, 100, 80],\r\n  [2, 50, 32],\r\n  [2, 50, 24],\r\n  [4, 25, 9],\r\n  [1, 134, 108],\r\n  [2, 67, 43],\r\n  [2, 33, 15, 2, 34, 16],\r\n  [2, 33, 11, 2, 34, 12],\r\n  [2, 86, 68],\r\n  [4, 43, 27],\r\n  [4, 43, 19],\r\n  [4, 43, 15],\r\n  [2, 98, 78],\r\n  [4, 49, 31],\r\n  [2, 32, 14, 4, 33, 15],\r\n  [4, 39, 13, 1, 40, 14],\r\n  [2, 121, 97],\r\n  [2, 60, 38, 2, 61, 39],\r\n  [4, 40, 18, 2, 41, 19],\r\n  [4, 40, 14, 2, 41, 15],\r\n  [2, 146, 116],\r\n  [3, 58, 36, 2, 59, 37],\r\n  [4, 36, 16, 4, 37, 17],\r\n  [4, 36, 12, 4, 37, 13],\r\n  [2, 86, 68, 2, 87, 69],\r\n  [4, 69, 43, 1, 70, 44],\r\n  [6, 43, 19, 2, 44, 20],\r\n  [6, 43, 15, 2, 44, 16],\r\n  [4, 101, 81],\r\n  [1, 80, 50, 4, 81, 51],\r\n  [4, 50, 22, 4, 51, 23],\r\n  [3, 36, 12, 8, 37, 13],\r\n  [2, 116, 92, 2, 117, 93],\r\n  [6, 58, 36, 2, 59, 37],\r\n  [4, 46, 20, 6, 47, 21],\r\n  [7, 42, 14, 4, 43, 15],\r\n  [4, 133, 107],\r\n  [8, 59, 37, 1, 60, 38],\r\n  [8, 44, 20, 4, 45, 21],\r\n  [12, 33, 11, 4, 34, 12],\r\n  [3, 145, 115, 1, 146, 116],\r\n  [4, 64, 40, 5, 65, 41],\r\n  [11, 36, 16, 5, 37, 17],\r\n  [11, 36, 12, 5, 37, 13],\r\n  [5, 109, 87, 1, 110, 88],\r\n  [5, 65, 41, 5, 66, 42],\r\n  [5, 54, 24, 7, 55, 25],\r\n  [11, 36, 12],\r\n  [5, 122, 98, 1, 123, 99],\r\n  [7, 73, 45, 3, 74, 46],\r\n  [15, 43, 19, 2, 44, 20],\r\n  [3, 45, 15, 13, 46, 16],\r\n  [1, 135, 107, 5, 136, 108],\r\n  [10, 74, 46, 1, 75, 47],\r\n  [1, 50, 22, 15, 51, 23],\r\n  [2, 42, 14, 17, 43, 15],\r\n  [5, 150, 120, 1, 151, 121],\r\n  [9, 69, 43, 4, 70, 44],\r\n  [17, 50, 22, 1, 51, 23],\r\n  [2, 42, 14, 19, 43, 15],\r\n  [3, 141, 113, 4, 142, 114],\r\n  [3, 70, 44, 11, 71, 45],\r\n  [17, 47, 21, 4, 48, 22],\r\n  [9, 39, 13, 16, 40, 14],\r\n  [3, 135, 107, 5, 136, 108],\r\n  [3, 67, 41, 13, 68, 42],\r\n  [15, 54, 24, 5, 55, 25],\r\n  [15, 43, 15, 10, 44, 16],\r\n  [4, 144, 116, 4, 145, 117],\r\n  [17, 68, 42],\r\n  [17, 50, 22, 6, 51, 23],\r\n  [19, 46, 16, 6, 47, 17],\r\n  [2, 139, 111, 7, 140, 112],\r\n  [17, 74, 46],\r\n  [7, 54, 24, 16, 55, 25],\r\n  [34, 37, 13],\r\n  [4, 151, 121, 5, 152, 122],\r\n  [4, 75, 47, 14, 76, 48],\r\n  [11, 54, 24, 14, 55, 25],\r\n  [16, 45, 15, 14, 46, 16],\r\n  [6, 147, 117, 4, 148, 118],\r\n  [6, 73, 45, 14, 74, 46],\r\n  [11, 54, 24, 16, 55, 25],\r\n  [30, 46, 16, 2, 47, 17],\r\n  [8, 132, 106, 4, 133, 107],\r\n  [8, 75, 47, 13, 76, 48],\r\n  [7, 54, 24, 22, 55, 25],\r\n  [22, 45, 15, 13, 46, 16],\r\n  [10, 142, 114, 2, 143, 115],\r\n  [19, 74, 46, 4, 75, 47],\r\n  [28, 50, 22, 6, 51, 23],\r\n  [33, 46, 16, 4, 47, 17],\r\n  [8, 152, 122, 4, 153, 123],\r\n  [22, 73, 45, 3, 74, 46],\r\n  [8, 53, 23, 26, 54, 24],\r\n  [12, 45, 15, 28, 46, 16],\r\n  [3, 147, 117, 10, 148, 118],\r\n  [3, 73, 45, 23, 74, 46],\r\n  [4, 54, 24, 31, 55, 25],\r\n  [11, 45, 15, 31, 46, 16],\r\n  [7, 146, 116, 7, 147, 117],\r\n  [21, 73, 45, 7, 74, 46],\r\n  [1, 53, 23, 37, 54, 24],\r\n  [19, 45, 15, 26, 46, 16],\r\n  [5, 145, 115, 10, 146, 116],\r\n  [19, 75, 47, 10, 76, 48],\r\n  [15, 54, 24, 25, 55, 25],\r\n  [23, 45, 15, 25, 46, 16],\r\n  [13, 145, 115, 3, 146, 116],\r\n  [2, 74, 46, 29, 75, 47],\r\n  [42, 54, 24, 1, 55, 25],\r\n  [23, 45, 15, 28, 46, 16],\r\n  [17, 145, 115],\r\n  [10, 74, 46, 23, 75, 47],\r\n  [10, 54, 24, 35, 55, 25],\r\n  [19, 45, 15, 35, 46, 16],\r\n  [17, 145, 115, 1, 146, 116],\r\n  [14, 74, 46, 21, 75, 47],\r\n  [29, 54, 24, 19, 55, 25],\r\n  [11, 45, 15, 46, 46, 16],\r\n  [13, 145, 115, 6, 146, 116],\r\n  [14, 74, 46, 23, 75, 47],\r\n  [44, 54, 24, 7, 55, 25],\r\n  [59, 46, 16, 1, 47, 17],\r\n  [12, 151, 121, 7, 152, 122],\r\n  [12, 75, 47, 26, 76, 48],\r\n  [39, 54, 24, 14, 55, 25],\r\n  [22, 45, 15, 41, 46, 16],\r\n  [6, 151, 121, 14, 152, 122],\r\n  [6, 75, 47, 34, 76, 48],\r\n  [46, 54, 24, 10, 55, 25],\r\n  [2, 45, 15, 64, 46, 16],\r\n  [17, 152, 122, 4, 153, 123],\r\n  [29, 74, 46, 14, 75, 47],\r\n  [49, 54, 24, 10, 55, 25],\r\n  [24, 45, 15, 46, 46, 16],\r\n  [4, 152, 122, 18, 153, 123],\r\n  [13, 74, 46, 32, 75, 47],\r\n  [48, 54, 24, 14, 55, 25],\r\n  [42, 45, 15, 32, 46, 16],\r\n  [20, 147, 117, 4, 148, 118],\r\n  [40, 75, 47, 7, 76, 48],\r\n  [43, 54, 24, 22, 55, 25],\r\n  [10, 45, 15, 67, 46, 16],\r\n  [19, 148, 118, 6, 149, 119],\r\n  [18, 75, 47, 31, 76, 48],\r\n  [34, 54, 24, 34, 55, 25],\r\n  [20, 45, 15, 61, 46, 16]\r\n];\r\nQRRSBlock.getRSBlocks = function(typeNumber, errorCorrectLevel) {\r\n  var rsBlock = QRRSBlock.getRsBlockTable(typeNumber, errorCorrectLevel);\r\n  if (rsBlock == undefined) {\r\n    throw new Error(\"bad rs block @ typeNumber:\" + typeNumber +\r\n      \"/errorCorrectLevel:\" + errorCorrectLevel);\r\n  }\r\n  var length = rsBlock.length / 3;\r\n  var list = [];\r\n  for (var i = 0; i < length; i++) {\r\n    var count = rsBlock[i * 3 + 0];\r\n    var totalCount = rsBlock[i * 3 + 1];\r\n    var dataCount = rsBlock[i * 3 + 2];\r\n    for (var j = 0; j < count; j++) {\r\n      list.push(new QRRSBlock(totalCount, dataCount));\r\n    }\r\n  }\r\n  return list;\r\n};\r\nQRRSBlock.getRsBlockTable = function(typeNumber, errorCorrectLevel) {\r\n  switch (errorCorrectLevel) {\r\n    case QRErrorCorrectLevel.L:\r\n      return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 0];\r\n    case QRErrorCorrectLevel.M:\r\n      return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 1];\r\n    case QRErrorCorrectLevel.Q:\r\n      return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 2];\r\n    case QRErrorCorrectLevel.H:\r\n      return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 3];\r\n    default:\r\n      return undefined;\r\n  }\r\n};\r\n\r\nfunction QRBitBuffer() {\r\n  this.buffer = [];\r\n  this.length = 0;\r\n}\r\nQRBitBuffer.prototype = {\r\n  get: function(index) {\r\n    var bufIndex = Math.floor(index / 8);\r\n    return ((this.buffer[bufIndex] >>> (7 - index % 8)) & 1) == 1;\r\n  },\r\n  put: function(num, length) {\r\n    for (var i = 0; i < length; i++) {\r\n      this.putBit(((num >>> (length - i - 1)) & 1) == 1);\r\n    }\r\n  },\r\n  getLengthInBits: function() {\r\n    return this.length;\r\n  },\r\n  putBit: function(bit) {\r\n    var bufIndex = Math.floor(this.length / 8);\r\n    if (this.buffer.length <= bufIndex) {\r\n      this.buffer.push(0);\r\n    }\r\n    if (bit) {\r\n      this.buffer[bufIndex] |= (0x80 >>> (this.length % 8));\r\n    }\r\n    this.length++;\r\n  }\r\n};\r\nvar QRCodeLimitLength = [\r\n  [17, 14, 11, 7],\r\n  [32, 26, 20, 14],\r\n  [53, 42, 32, 24],\r\n  [78, 62, 46, 34],\r\n  [106, 84, 60, 44],\r\n  [134, 106, 74, 58],\r\n  [154, 122, 86, 64],\r\n  [192, 152, 108, 84],\r\n  [230, 180, 130, 98],\r\n  [271, 213, 151, 119],\r\n  [321, 251, 177, 137],\r\n  [367, 287, 203, 155],\r\n  [425, 331, 241, 177],\r\n  [458, 362, 258, 194],\r\n  [520, 412, 292, 220],\r\n  [586, 450, 322, 250],\r\n  [644, 504, 364, 280],\r\n  [718, 560, 394, 310],\r\n  [792, 624, 442, 338],\r\n  [858, 666, 482, 382],\r\n  [929, 711, 509, 403],\r\n  [1003, 779, 565, 439],\r\n  [1091, 857, 611, 461],\r\n  [1171, 911, 661, 511],\r\n  [1273, 997, 715, 535],\r\n  [1367, 1059, 751, 593],\r\n  [1465, 1125, 805, 625],\r\n  [1528, 1190, 868, 658],\r\n  [1628, 1264, 908, 698],\r\n  [1732, 1370, 982, 742],\r\n  [1840, 1452, 1030, 790],\r\n  [1952, 1538, 1112, 842],\r\n  [2068, 1628, 1168, 898],\r\n  [2188, 1722, 1228, 958],\r\n  [2303, 1809, 1283, 983],\r\n  [2431, 1911, 1351, 1051],\r\n  [2563, 1989, 1423, 1093],\r\n  [2699, 2099, 1499, 1139],\r\n  [2809, 2213, 1579, 1219],\r\n  [2953, 2331, 1663, 1273]\r\n];\r\n\r\n/**\r\n * Get the type by string length\r\n * \r\n * @private\r\n * @param {String} sText\r\n * @param {Number} nCorrectLevel\r\n * @return {Number} type\r\n */\r\nfunction _getTypeNumber(sText, nCorrectLevel) {\r\n  var nType = 1;\r\n  var length = _getUTF8Length(sText);\r\n\r\n  for (var i = 0, len = QRCodeLimitLength.length; i <= len; i++) {\r\n    var nLimit = 0;\r\n\r\n    switch (nCorrectLevel) {\r\n      case QRErrorCorrectLevel.L:\r\n        nLimit = QRCodeLimitLength[i][0];\r\n        break;\r\n      case QRErrorCorrectLevel.M:\r\n        nLimit = QRCodeLimitLength[i][1];\r\n        break;\r\n      case QRErrorCorrectLevel.Q:\r\n        nLimit = QRCodeLimitLength[i][2];\r\n        break;\r\n      case QRErrorCorrectLevel.H:\r\n        nLimit = QRCodeLimitLength[i][3];\r\n        break;\r\n    }\r\n\r\n    if (length <= nLimit) {\r\n      break;\r\n    } else {\r\n      nType++;\r\n    }\r\n  }\r\n\r\n  if (nType > QRCodeLimitLength.length) {\r\n    throw new Error(\"Too long data\");\r\n  }\r\n\r\n  return nType;\r\n}\r\n\r\nfunction _getUTF8Length(sText) {\r\n  var replacedText = encodeURI(sText)\r\n    .toString()\r\n    .replace(/\\%[0-9a-fA-F]{2}/g, 'a');\r\n  return replacedText.length + (replacedText.length != sText ? 3 : 0);\r\n}\r\n\r\nlet QRCode = function(str, correctLevel = QRErrorCorrectLevel.H) {\r\n  this.correctLevel = correctLevel;\r\n  if (str) {\r\n    this.makeCode(str);\r\n  }\r\n};\r\n\r\n/**\r\n * Make the QRCode\r\n * \r\n * @param {String} sText link data\r\n */\r\nQRCode.prototype.makeCode = function(sText) {\r\n  let oQRCode = new QRCodeModel(_getTypeNumber(sText, this.correctLevel),\r\n    this.correctLevel);\r\n  oQRCode.addData(sText);\r\n  oQRCode.make();\r\n  this.size = oQRCode.moduleCount;\r\n  this.data = oQRCode.modules;\r\n};\r\n\r\n/**\r\n * @name QRCode.CorrectLevel\r\n */\r\nQRCode.CorrectLevel = QRErrorCorrectLevel;\r\n\r\nexport {\r\n  QRCode\r\n};","import { World } from './World';\r\n\r\nclass Transitioner {\r\n  constructor(app, world, texture, options = {}) {\r\n    this.options = _.defaults(options, {\r\n      'useTexture': true,\r\n      'transition': 0,\r\n      'speed': 10,\r\n      'texture': 5,\r\n      'loopTexture': true,\r\n      'isAnimate': true,\r\n      'threshold': 0.3\r\n    });\r\n    this.app = app;\r\n    this.targetWorld = world;\r\n    this.maskTexture = texture;\r\n    this.material = new THREE.ShaderMaterial({\r\n      uniforms: {\r\n        tDiffuse1: {\r\n          value: null\r\n        },\r\n        tDiffuse2: {\r\n          value: null\r\n        },\r\n        mixRatio: {\r\n          value: 0.0\r\n        },\r\n        threshold: {\r\n          value: 0.1\r\n        },\r\n        useTexture: {\r\n          value: 1\r\n        },\r\n        tMixTexture: {\r\n          value: this.maskTexture\r\n        }\r\n      },\r\n      vertexShader: `varying vec2 vUv;\r\n        void main() {\r\n        vUv = vec2( uv.x, uv.y );\r\n        gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\r\n        }`,\r\n      fragmentShader: `uniform float mixRatio;\r\n        uniform sampler2D tDiffuse1;\r\n        uniform sampler2D tDiffuse2;\r\n        uniform sampler2D tMixTexture;\r\n        uniform int useTexture;\r\n        uniform float threshold;\r\n        varying vec2 vUv;\r\n        \r\n        void main() {\r\n\r\n        vec4 texel1 = texture2D( tDiffuse1, vUv );\r\n        vec4 texel2 = texture2D( tDiffuse2, vUv );\r\n\r\n        if (useTexture==1) {\r\n\r\n        vec4 transitionTexel = texture2D( tMixTexture, vUv );\r\n        float r = mixRatio * (1.0 + threshold * 2.0) - threshold;\r\n        float mixf=clamp((transitionTexel.r - r)*(1.0/threshold), 0.0, 1.0);\r\n\r\n        gl_FragColor = mix( texel1, texel2, mixf );\r\n        } else {\r\n\r\n        gl_FragColor = mix( texel2, texel1, mixRatio );\r\n\r\n        }\r\n        }`\r\n    });\r\n    let halfWidth = app.getWorldWidth() / 2;\r\n    let halfHeight = app.getWorldHeight() / 2;\r\n    this.world = new World(app, new THREE.OrthographicCamera(-halfWidth,\r\n      halfWidth, halfHeight, -halfHeight, -10, 10));\r\n\r\n    let geometry = new THREE.PlaneBufferGeometry(halfWidth * 2,\r\n      halfHeight * 2);\r\n\r\n    let quad = new THREE.Mesh(geometry, this.material);\r\n    this.world.scene.add(quad);\r\n\r\n    this.sceneA = world;\r\n    this.sceneB = app.world;\r\n\r\n    this.material.uniforms.tDiffuse1.value = this.sceneA.fbo.texture;\r\n    this.material.uniforms.tDiffuse2.value = this.sceneB.fbo.texture;\r\n\r\n    this.needChange = false;\r\n  }\r\n\r\n  setThreshold(value) {\r\n    this.material.uniforms.threshold.value = value;\r\n  }\r\n\r\n  useTexture(value) {\r\n    this.material.uniforms.useTexture.value = value ? 1 : 0;\r\n  }\r\n\r\n  setTexture(i) {\r\n    this.material.uniforms.tMixTexture.value = this.texture;\r\n  }\r\n\r\n  update() {\r\n    let value = Math.min(this.options.transition, 1);\r\n    value = Math.max(value, 0);\r\n    this.material.uniforms.mixRatio.value = value;\r\n    this.app.renderer.setClearColor(this.sceneB.clearColor || 0);\r\n    this.sceneB.update();\r\n    this.app.renderer.render(this.sceneB.scene, this.sceneB.camera, this.sceneB\r\n      .fbo, true);\r\n    this.app.renderer.setClearColor(this.sceneA.clearColor || 0);\r\n    this.sceneA.update();\r\n    this.app.renderer.render(this.sceneA.scene, this.sceneA.camera, this.sceneA\r\n      .fbo, true);\r\n    this.app.renderer.render(this.world.scene, this.world.camera, null, true);\r\n  }\r\n}\r\n\r\nexport {\r\n  Transitioner\r\n};","import { LoopManager } from './LoopManager.js';\r\nimport { EventManager } from './../events/EventManager';\r\n\r\nclass View {\r\n  constructor(world, camera, {\r\n    clearColor = 0x000000,\r\n    top = 0,\r\n    left = 0,\r\n    width = 1,\r\n    height = 1\r\n  }) {\r\n    this.world = world;\r\n    this.scene = world.scene;\r\n    this.worldWidth = world.app.getWorldWidth();\r\n    this.worldHeight = world.app.getWorldHeight();\r\n    this.renderer = world.app.renderer;\r\n    this.camera = camera || new THREE.PerspectiveCamera(45, this.worldWidth /\r\n      this.worldHeight, 0.01, 1000);\r\n    this.renderTargetParameters = {\r\n      minFilter: THREE.LinearFilter,\r\n      magFilter: THREE.LinearFilter,\r\n      format: THREE.RGBFormat,\r\n      stencilBuffer: false\r\n    };\r\n    this.isRTT = false;\r\n    this.clearColor = clearColor;\r\n    this.left = left;\r\n    this.top = top;\r\n    this.width = width;\r\n    this.height = height;\r\n\r\n    this.fbo = new THREE.WebGLRenderTarget(\r\n      this.worldWidth * this.width,\r\n      this.worldHeight * this.height, this.renderTargetParameters\r\n    );\r\n\r\n    this.resize();\r\n  }\r\n\r\n  render() {\r\n    var left = Math.floor(this.worldWidth * this.left);\r\n    var top = Math.floor(this.worldHeight * this.top);\r\n    var width = Math.floor(this.worldWidth * this.width);\r\n    var height = Math.floor(this.worldHeight * this.height);\r\n    this.renderer.setViewport(left, top, width, height);\r\n    this.renderer.setScissor(left, top, width, height);\r\n    this.renderer.setScissorTest(true);\r\n    this.renderer.setClearColor(this.clearColor);\r\n    this.renderer.render(this.scene, this.camera);\r\n  }\r\n\r\n  resize() {\r\n    this.worldWidth = this.world.app.getWorldWidth();\r\n    this.worldHeight = this.world.app.getWorldHeight();\r\n    let width = Math.floor(this.worldWidth * this.width);\r\n    let height = Math.floor(this.worldHeight * this.height);\r\n    if (this.camera.type === 'PerspectiveCamera') {\r\n      this.camera.aspect = width / height;\r\n      this.camera.updateProjectionMatrix();\r\n    } else {\r\n      this.camera.left = -width / 2;\r\n      this.camera.right = width / 2;\r\n      this.camera.top = height / 2;\r\n      this.camera.bottom = -height / 2;\r\n      this.camera.updateProjectionMatrix();\r\n    }\r\n  }\r\n}\r\n\r\nexport {\r\n  View\r\n};","/**\r\n * 用于事件处理\r\n * \r\n * */\r\nclass Signal {\r\n  constructor(type) {\r\n    this.type = type;\r\n    this.functionArr = [];\r\n  }\r\n\r\n  add(func) {\r\n    if (typeof func !== 'function') {\r\n      throw new NotFunctionError();\r\n    } else {\r\n      this.functionArr.push(func);\r\n    }\r\n  }\r\n\r\n  remove(func) {\r\n    return _.remove(this.functionArr, function(n) {\r\n      return n === func;\r\n    });\r\n  }\r\n\r\n  run(event, intersect) {\r\n    this.functionArr.forEach(\r\n      (func) => {\r\n        func(event, intersect);\r\n      });\r\n  }\r\n}\r\n\r\nexport {\r\n  Signal\r\n};","import { Signal } from './Signal';\r\n\r\n/**\r\n * 由于事件处理\r\n * \r\n * */\r\nclass Events {\r\n  constructor(list) {\r\n    list = list || ['press', 'tap', 'pressup', 'pan', 'swipe', 'click',\r\n      'mousedown', 'mouseup', 'touchstart', 'touchend', 'touchmove',\r\n      'mousemove'\r\n    ];\r\n    for (let eventItem of list) {\r\n      this[eventItem] = new Signal(eventItem);\r\n    }\r\n  }\r\n}\r\n\r\nexport {\r\n  Events\r\n};","class GUI extends THREE.Group {\r\n  constructor() {\r\n    super();\r\n    this.css = {\r\n      backgroundColor: \"rgba(0,0,0,0)\",\r\n      opacity: 1,\r\n      width: 1,\r\n      height: 1\r\n    };\r\n  }\r\n}\r\n\r\nclass Body extends GUI {\r\n  constructor(world, css) {\r\n    super();\r\n    this.world = world;\r\n    this.distanceFromCamera = 50;\r\n    this.css = _.defaultsDeep(css || {}, this.css);\r\n    this.canvas = document.createElement(\"canvas\");\r\n    var spriteMaterial = new THREE.SpriteMaterial({\r\n      map: this.canvas,\r\n      color: 0xffffff\r\n    });\r\n    this.element = new THREE.Sprite(spriteMaterial);\r\n    this.vector = new THREE.Vector3();\r\n    this.update();\r\n    this.add(this.element);\r\n  }\r\n\r\n  lockToScreen() {\r\n    var c = this.world.camera;\r\n    c.getWorldDirection(this.vector);\r\n    this.rotation.set(c.rotation.x, c.rotation.y, c.rotation.z);\r\n    this.position.set(c.position.x + this.vector.x * this.distanceFromCamera,\r\n      c.position.y +\r\n      this.vector.y * this.distanceFromCamera, c.position.z + this.vector.z *\r\n      this.distanceFromCamera\r\n    );\r\n  }\r\n\r\n  update() {\r\n    this.canvas.width = this.css.width;\r\n    this.canvas.height = this.css.height;\r\n    let ctx = this.canvas.getContext(\"2d\");\r\n    ctx.fillStyle = this.css.backgroundColor;\r\n    ctx.fillRect(0, 0, this.css.width, this.css.height);\r\n    var texture = new THREE.CanvasTexture(this.canvas);\r\n    texture.generateMipmaps = false;\r\n    texture.minFilter = THREE.LinearFilter;\r\n    texture.magFilter = THREE.LinearFilter;\r\n    var spriteMaterial = new THREE.SpriteMaterial({\r\n      map: texture,\r\n      color: 0xffffff\r\n    });\r\n    this.element.material.dispose();\r\n    this.element.material = spriteMaterial;\r\n    this.element.scale.set(this.css.width / 4, this.css.height / 4, 1);\r\n  }\r\n}\r\n\r\nclass Div extends GUI {\r\n  constructor(world, css) {\r\n    super();\r\n    this.world = world;\r\n    this.css = _.defaultsDeep(css || {}, this.css);\r\n    this.canvas = document.createElement(\"canvas\");\r\n    var spriteMaterial = new THREE.SpriteMaterial({\r\n      map: canvas,\r\n      color: 0xffffff\r\n    });\r\n    this.element = new THREE.Sprite(spriteMaterial);\r\n    this.vector = new THREE.Vector3();\r\n    this.update();\r\n    this.add(this.element);\r\n  }\r\n\r\n  update() {\r\n    this.canvas.width = this.css.width;\r\n    this.canvas.height = this.css.height;\r\n    let ctx = this.canvas.getContext(\"2d\");\r\n    ctx.fillStyle = this.css.backgroundColor;\r\n    ctx.fillRect(0, 0, this.css.width, this.css.height);\r\n    var texture = new THREE.CanvasTexture(this.canvas);\r\n    texture.generateMipmaps = false;\r\n    texture.minFilter = THREE.LinearFilter;\r\n    texture.magFilter = THREE.LinearFilter;\r\n    var spriteMaterial = new THREE.SpriteMaterial({\r\n      map: texture,\r\n      color: 0xffffff\r\n    });\r\n    this.element.material.dispose();\r\n    this.element.material = spriteMaterial;\r\n    this.element.scale.set(this.css.width / 4, this.css.height / 4, 1);\r\n  }\r\n}\r\n\r\nclass Txt extends THREE.Mesh {\r\n  constructor(text, css) {\r\n    css = _.defaultsDeep(css || {}, {\r\n      fontStyle: \"normal\",\r\n      fontVariant: \"normal\",\r\n      fontSize: 12,\r\n      fontWeight: \"normal\",\r\n      fontFamily: \"微软雅黑\",\r\n      color: \"#ffffff\",\r\n      textAlign: \"center\",\r\n      backgroundColor: \"rgba(0,0,0,0)\",\r\n      opacity: 1,\r\n      width: 1,\r\n      height: 1,\r\n      scale: {\r\n        x: 0.25,\r\n        y: 0.25,\r\n        z: 1,\r\n      }\r\n    });\r\n    let canvas = document.createElement(\"canvas\");\r\n    var material = new THREE.MeshBasicMaterial({\r\n      transparent: true,\r\n      needsUpdate: false,\r\n      color: 0xffffff\r\n    });\r\n    super(new THREE.PlaneBufferGeometry(css.width / 8, css.height / 8),\r\n      material);\r\n    this.text = text;\r\n    this.canvas = canvas;\r\n    this.css = css;\r\n    this.update();\r\n  }\r\n\r\n  update() {\r\n    this.canvas.width = this.css.width;\r\n    this.canvas.height = this.css.height;\r\n    let ctx = this.canvas.getContext(\"2d\");\r\n    ctx.fillStyle = this.css.backgroundColor;\r\n    ctx.fillRect(0, 0, this.css.width, this.css.height);\r\n    ctx.textAlign = this.css.textAlign;\r\n    ctx.font = this.css.fontStyle + \" \" + this.css.fontVariant + \" \" + this\r\n      .css.fontWeight +\r\n      \" \" + this.css.fontSize + \"px \" + this.css.fontFamily;\r\n    ctx.fillStyle = this.css.color;\r\n    let width = ctx.measureText(this.text)\r\n      .width;\r\n    ctx.fillText(this.text, this.css.width / 2, this.css.height / 2 + this.css\r\n      .fontSize / 4);\r\n    var texture = new THREE.CanvasTexture(this.canvas);\r\n    texture.generateMipmaps = false;\r\n    texture.minFilter = THREE.LinearFilter;\r\n    texture.magFilter = THREE.LinearFilter;\r\n    this.material.map = texture;\r\n    this.scale.set(this.css.scale.x, this.css.scale.y, this.css.scale.z);\r\n    this.material.opacity = this.css.opacity;\r\n  }\r\n}\r\n\r\n//$$.Img = function(url, css, callback) {\r\n//$$.DOM.call(this);\r\n//var that = this;\r\n//if ($$.Loader.RESOURCE.textures[url]) {\r\n//  var spriteMaterial = new THREE.SpriteMaterial({\r\n//    map: $$.Loader.RESOURCE.textures[url],\r\n//    color: 0xffffff\r\n//  });\r\n//  var sprite = new THREE.Sprite(spriteMaterial);\r\n//  that.element = sprite;\r\n//  that.add(that.element);\r\n//  this.css = $$.extends({}, [this.css, {\r\n//    width: $$.Loader.RESOURCE.textures[url].image.naturalWidth,\r\n//    height: $$.Loader.RESOURCE.textures[url].image.naturalHeight\r\n//  }, css]);\r\n//  sprite.scale.set(this.css.width / 4, this.css.height / 4, 1);\r\n//  sprite.material.opacity = that.css.opacity;\r\n//  if (callback) {\r\n//    callback();\r\n//  }\r\n//} else {\r\n//  that.element = {};\r\n//  $$.Loader.loadTexture([url], function(texture) {\r\n//    texture.generateMipmaps = false;\r\n//    texture.minFilter = THREE.LinearFilter;\r\n//    texture.magFilter = THREE.LinearFilter;\r\n//    var tmpProperty = that.element;\r\n//    var spriteMaterial = new THREE.SpriteMaterial({\r\n//      map: texture,\r\n//      color: 0xffffff\r\n//    });\r\n//    var sprite = new THREE.Sprite(spriteMaterial);\r\n//    that.element = sprite;\r\n//    that.add(that.element);\r\n//    this.css = $$.extends({}, [this.css, {\r\n//      width: texture.image.naturalWidth,\r\n//      height: texture.image.naturalHeight\r\n//    }, css]);\r\n//    if (css.opacity != null) {\r\n//      that.css.opacity = css.opacity;\r\n//    }\r\n//    sprite.scale.set(this.css.width / 4, this.css.height / 4, 1);\r\n//\r\n//    for (var i in tmpProperty) {\r\n//      that.element[i] = tmpProperty[i];\r\n//    }\r\n//    sprite.material.opacity = that.css.opacity;\r\n//    if (callback) {\r\n//      callback();\r\n//    }\r\n//  });\r\n//}\r\n//};\r\n//(function() {\r\n//var Super = function() {};\r\n//Super.prototype = $$.DOM.prototype;\r\n//$$.Img.prototype = new Super();\r\n//})();\r\n//\r\n//$$.Video = function(url, css) {\r\n//$$.DOM.call(this);\r\n//var that = this;\r\n//this.video = document.createElement(\"video\");\r\n//this.video.src = url;\r\n//var texture = new THREE.VideoTexture(this.video);\r\n//texture.generateMipmaps = false;\r\n//texture.minFilter = THREE.LinearFilter;\r\n//texture.magFilter = THREE.LinearFilter;\r\n//var spriteMaterial = new THREE.SpriteMaterial({\r\n//  map: texture,\r\n//  color: 0xffffff\r\n//});\r\n//var sprite = new THREE.Sprite(spriteMaterial);\r\n//that.element = sprite;\r\n//that.add(that.element);\r\n//this.css = $$.extends({}, [this.css, {\r\n//  width: texture.image.naturalWidth,\r\n//  height: texture.image.naturalHeight,\r\n//}, css]);\r\n//sprite.scale.set(this.css.width / 4, this.css.height / 4, 1);\r\n//};\r\n//(function() {\r\n//var Super = function() {};\r\n//Super.prototype = $$.DOM.prototype;\r\n//$$.Video.prototype = new Super();\r\n//})();\r\n\r\nexport {\r\n  GUI,\r\n  Body,\r\n  Txt,\r\n  Div\r\n};","class LoaderFactory {\r\n  constructor() {\r\n    this.manager = new THREE.LoadingManager();\r\n    this.Resource = {\r\n      images: {},\r\n      materials: {},\r\n      textures: {},\r\n      models: {},\r\n      sounds: {},\r\n      fonts: {},\r\n      unloaded: {\r\n        textures: [],\r\n        models: [],\r\n        sounds: [],\r\n        fonts: [],\r\n        images: []\r\n      }\r\n    };\r\n\r\n    this.manager.onStart = (url, itemsLoaded, itemsTotal) => {\r\n      if (this.onStart && typeof this.onStart === 'function') {\r\n        this.onStart(url, itemsLoaded, itemsTotal);\r\n      }\r\n    };\r\n\r\n    this.manager.onLoad = () => {\r\n      if (this.onLoad && typeof this.onLoad === 'function') {\r\n        this.onLoad();\r\n      }\r\n    };\r\n\r\n    this.manager.onProgress = (url, itemsLoaded, itemsTotal) => {\r\n      if (this.onProgress && typeof this.onProgress === 'function') {\r\n        this.onProgress(url, itemsLoaded, itemsTotal);\r\n      }\r\n    };\r\n\r\n    this.manager.onError = (url) => {\r\n      if (this.onError && typeof this.onError === 'function') {\r\n        this.onError(url);\r\n      }\r\n    };\r\n\r\n    this.imageLoader = new THREE.ImageLoader(this.manager);\r\n    this.textureLoader = new THREE.TextureLoader(this.manager);\r\n    this.audioListener = new THREE.AudioListener(this.manager);\r\n  }\r\n\r\n  loadImage(key, src, sucFunc, errFunc) {\r\n    return this.imageLoader.load(src,\r\n      (data) => {\r\n        this.Resource.images[key] = data;\r\n        if (sucFunc) sucFunc(data);\r\n      }, undefined, (err) => {\r\n        this.Resource.unloaded.images.push(src);\r\n        if (errFunc) errFunc(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  loadTexture(key, src, sucFunc, errFunc) {\r\n    return this.textureLoader.load(src,\r\n      (data) => {\r\n        this.Resource.textures[key] = data;\r\n        if (sucFunc) sucFunc(data);\r\n      }, undefined, (err) => {\r\n        this.Resource.unloaded.textures.push(src);\r\n        if (errFunc) errFunc(err);\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\nexport {\r\n  LoaderFactory\r\n};","let CopyShader = {\r\n  uniforms: {\r\n    'tDiffuse': { value: null },\r\n    'opacity': { value: 1.0 }\r\n  },\r\n\r\n  vertexShader: `\r\n    varying vec2 vUv;\r\n    void main() {\r\n      vUv = uv;\r\n      gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\r\n    }`,\r\n\r\n  fragmentShader: `\r\n    uniform float opacity;\r\n    uniform sampler2D tDiffuse;\r\n    varying vec2 vUv;\r\n    void main() {\r\n      vec4 texel = texture2D( tDiffuse, vUv );\r\n      gl_FragColor = opacity * texel;\r\n    }`\r\n};\r\n\r\nexport {\r\n  CopyShader\r\n};","class Pass {\r\n  constructor(effectComposer, renderToScreen = false) {\r\n    // if set to true, the pass is processed by the composer\r\n    this.enabled = true;\r\n    // if set to true, the pass indicates to swap read and write buffer after rendering\r\n    this.needsSwap = true;\r\n    // if set to true, the pass clears its buffer before rendering\r\n    this.clear = false;\r\n    // if set to true, the result of the pass is rendered to screen\r\n    this.renderToScreen = renderToScreen;\r\n    if (effectComposer) {\r\n      effectComposer.addPass(this);\r\n    }\r\n  }\r\n  setSize(width, height) {}\r\n  render(renderer, writeBuffer, readBuffer, delta, maskActive) {}\r\n}\r\n\r\nexport {\r\n  Pass\r\n};","import { Pass } from './Pass.js';\r\n\r\nclass ShaderPass extends Pass {\r\n  constructor(shader, effectComposer, renderToScreen = false,\r\n    textureID = \"tDiffuse\") {\r\n    super(effectComposer, renderToScreen);\r\n    this.textureID = textureID;\r\n\r\n    if (shader instanceof THREE.ShaderMaterial) {\r\n      this.uniforms = shader.uniforms;\r\n      this.material = shader;\r\n    } else if (shader) {\r\n      this.uniforms = THREE.UniformsUtils.clone(shader.uniforms);\r\n      this.material = new THREE.ShaderMaterial({\r\n        defines: shader.defines || {},\r\n        uniforms: this.uniforms,\r\n        vertexShader: shader.vertexShader,\r\n        fragmentShader: shader.fragmentShader\r\n      });\r\n    }\r\n\r\n    this.camera = new THREE.OrthographicCamera(-1, 1, 1, -1, 0, 1);\r\n    this.scene = new THREE.Scene();\r\n    this.quad = new THREE.Mesh(new THREE.PlaneBufferGeometry(2, 2), null);\r\n    this.quad.frustumCulled = false;\r\n    this.scene.add(this.quad);\r\n  }\r\n\r\n  render(renderer, writeBuffer, readBuffer) {\r\n    if (this.uniforms[this.textureID]) {\r\n      this.uniforms[this.textureID].value = readBuffer.texture;\r\n    }\r\n\r\n    this.quad.material = this.material;\r\n    if (this.renderToScreen) {\r\n      renderer.render(this.scene, this.camera);\r\n    } else {\r\n      renderer.render(this.scene, this.camera, writeBuffer, this.clear);\r\n    }\r\n  }\r\n}\r\n\r\nexport {\r\n  ShaderPass\r\n};","import { Pass } from './Pass.js';\r\n\r\nclass RenderPass extends Pass {\r\n  constructor(scene, camera, overrideMaterial, clearColor, clearAlpha = 0) {\r\n    super();\r\n    this.scene = scene;\r\n    this.camera = camera;\r\n    this.overrideMaterial = overrideMaterial;\r\n    this.clearColor = clearColor;\r\n    this.clearAlpha = clearAlpha;\r\n    this.clear = true;\r\n    this.clearDepth = false;\r\n    this.needsSwap = false;\r\n  }\r\n\r\n  render(renderer, writeBuffer, readBuffer, delta, maskActive) {\r\n    let oldAutoClear = renderer.autoClear;\r\n    renderer.autoClear = false;\r\n    this.scene.overrideMaterial = this.overrideMaterial;\r\n    let oldClearColor, oldClearAlpha;\r\n    if (this.clearColor) {\r\n      oldClearColor = renderer.getClearColor()\r\n        .getHex();\r\n      oldClearAlpha = renderer.getClearAlpha();\r\n      renderer.setClearColor(this.clearColor, this.clearAlpha);\r\n    }\r\n    if (this.clearDepth) {\r\n      renderer.clearDepth();\r\n    }\r\n    renderer.render(this.scene, this.camera, this.renderToScreen ? undefined :\r\n      readBuffer, this.clear);\r\n    if (this.clearColor) {\r\n      renderer.setClearColor(oldClearColor, oldClearAlpha);\r\n    }\r\n    this.scene.overrideMaterial = undefined;\r\n    renderer.autoClear = oldAutoClear;\r\n  }\r\n}\r\n\r\nexport {\r\n  RenderPass\r\n};","import { CopyShader } from './shader/CopyShader.js';\r\nimport { ShaderPass } from './ShaderPass.js';\r\nimport { RenderPass } from './RenderPass.js';\r\n\r\nclass EffectComposer {\r\n  constructor(world, options = {}, renderTarget) {\r\n    options = _.defaults(options, {\r\n      renderer: undefined,\r\n      camera: undefined,\r\n      scene: undefined,\r\n      overrideMaterial: undefined,\r\n      clearColor: undefined,\r\n      clearAlpha: 0\r\n    });\r\n    this.renderer = options.renderer || world.app.renderer;\r\n    if (renderTarget === undefined) {\r\n      let parameters = {\r\n        minFilter: THREE.LinearFilter,\r\n        magFilter: THREE.LinearFilter,\r\n        format: THREE.RGBAFormat,\r\n        stencilBuffer: false\r\n      };\r\n      let size = this.renderer.getDrawingBufferSize();\r\n      renderTarget = new THREE.WebGLRenderTarget(size.width, size.height,\r\n        parameters);\r\n      renderTarget.texture.name = 'EffectComposer.rt1';\r\n    }\r\n\r\n    this.renderTarget1 = renderTarget;\r\n    this.renderTarget2 = renderTarget.clone();\r\n    this.renderTarget2.texture.name = 'EffectComposer.rt2';\r\n    this.writeBuffer = this.renderTarget1;\r\n    this.readBuffer = this.renderTarget2;\r\n\r\n    this.passes = [];\r\n    this.copyPass = new ShaderPass(CopyShader);\r\n\r\n    this.addPass(new RenderPass(options.scene || world.scene,\r\n      options.scene || world.camera));\r\n  }\r\n\r\n  swapBuffers() {\r\n    let tmp = this.readBuffer;\r\n    this.readBuffer = this.writeBuffer;\r\n    this.writeBuffer = tmp;\r\n  }\r\n\r\n  addPass(pass) {\r\n    this.passes.push(pass);\r\n    let size = this.renderer.getDrawingBufferSize();\r\n    pass.setSize(size.width, size.height);\r\n  }\r\n\r\n  insertPass(pass, index) {\r\n    this.passes.splice(index, 0, pass);\r\n  }\r\n\r\n  render(delta) {\r\n    let maskActive = false;\r\n    let pass, i, il = this.passes.length;\r\n    for (i = 0; i < il; i++) {\r\n      pass = this.passes[i];\r\n      if (pass.enabled === false) continue;\r\n      pass.render(this.renderer, this.writeBuffer, this.readBuffer, delta,\r\n        maskActive);\r\n\r\n      if (pass.needsSwap) {\r\n        if (maskActive) {\r\n          let context = this.renderer.context;\r\n          context.stencilFunc(context.NOTEQUAL, 1, 0xffffffff);\r\n          this.copyPass.render(this.renderer, this.writeBuffer, this.readBuffer,\r\n            delta);\r\n          context.stencilFunc(context.EQUAL, 1, 0xffffffff);\r\n        }\r\n        this.swapBuffers();\r\n      }\r\n\r\n      if (THREE.MaskPass !== undefined) {\r\n        if (pass instanceof THREE.MaskPass) {\r\n          maskActive = true;\r\n        } else if (pass instanceof THREE.ClearMaskPass) {\r\n          maskActive = false;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  reset(renderTarget) {\r\n    if (renderTarget === undefined) {\r\n      let size = this.renderer.getDrawingBufferSize();\r\n      renderTarget = this.renderTarget1.clone();\r\n      renderTarget.setSize(size.width, size.height);\r\n    }\r\n    this.renderTarget1.dispose();\r\n    this.renderTarget2.dispose();\r\n    this.renderTarget1 = renderTarget;\r\n    this.renderTarget2 = renderTarget.clone();\r\n    this.writeBuffer = this.renderTarget1;\r\n    this.readBuffer = this.renderTarget2;\r\n  }\r\n\r\n  setSize(width, height) {\r\n    this.renderTarget1.setSize(width, height);\r\n    this.renderTarget2.setSize(width, height);\r\n    for (let i = 0; i < this.passes.length; i++) {\r\n      this.passes[i].setSize(width, height);\r\n    }\r\n  }\r\n}\r\n\r\nexport {\r\n  EffectComposer\r\n};","let DotScreenShader = {\r\n  uniforms: {\r\n    \"tDiffuse\": { value: null },\r\n    \"tSize\": { value: new THREE.Vector2(256, 256) },\r\n    \"center\": { value: new THREE.Vector2(0.5, 0.5) },\r\n    \"angle\": { value: 1.57 },\r\n    \"scale\": { value: 1.0 }\r\n  },\r\n\r\n  vertexShader: [\r\n    \"varying vec2 vUv;\",\r\n    \"void main() {\",\r\n    \"vUv = uv;\",\r\n    \"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\r\n    \"}\"\r\n  ].join(\"\\n\"),\r\n\r\n  fragmentShader: [\r\n    \"uniform vec2 center;\",\r\n    \"uniform float angle;\",\r\n    \"uniform float scale;\",\r\n    \"uniform vec2 tSize;\",\r\n    \"uniform sampler2D tDiffuse;\",\r\n    \"varying vec2 vUv;\",\r\n    \"float pattern() {\",\r\n    \"float s = sin( angle ), c = cos( angle );\",\r\n    \"vec2 tex = vUv * tSize - center;\",\r\n    \"vec2 point = vec2( c * tex.x - s * tex.y, s * tex.x + c * tex.y ) * scale;\",\r\n    \"return ( sin( point.x ) * sin( point.y ) ) * 4.0;\",\r\n    \"}\",\r\n\r\n    \"void main() {\",\r\n    \"vec4 color = texture2D( tDiffuse, vUv );\",\r\n    \"float average = ( color.r + color.g + color.b ) / 3.0;\",\r\n    \"gl_FragColor = vec4( vec3( average * 10.0 - 5.0 + pattern() ), color.a );\",\r\n    \"}\"\r\n  ].join(\"\\n\")\r\n};\r\n\r\nexport {\r\n  DotScreenShader\r\n};","import { Pass } from './Pass.js';\r\nimport { DotScreenShader } from './shader/DotScreenShader.js';\r\n\r\nclass DotScreenPass extends Pass {\r\n  constructor(center, angle, scale, effectComposer, renderToScreen = false) {\r\n    super(effectComposer, renderToScreen);\r\n    this.uniforms = THREE.UniformsUtils.clone(DotScreenShader.uniforms);\r\n    if (center !== undefined) this.uniforms[\"center\"].value.copy(center);\r\n    if (angle !== undefined) this.uniforms[\"angle\"].value = angle;\r\n    if (scale !== undefined) this.uniforms[\"scale\"].value = scale;\r\n\r\n    this.material = new THREE.ShaderMaterial({\r\n      uniforms: this.uniforms,\r\n      vertexShader: DotScreenShader.vertexShader,\r\n      fragmentShader: DotScreenShader.fragmentShader\r\n    });\r\n\r\n    this.camera = new THREE.OrthographicCamera(-1, 1, 1, -1, 0, 1);\r\n    this.scene = new THREE.Scene();\r\n    this.quad = new THREE.Mesh(new THREE.PlaneBufferGeometry(2, 2), null);\r\n    this.quad.frustumCulled = false; // Avoid getting clipped\r\n    this.scene.add(this.quad);\r\n  }\r\n\r\n  render(renderer, writeBuffer, readBuffer, delta, maskActive) {\r\n    this.uniforms[\"tDiffuse\"].value = readBuffer.texture;\r\n    this.uniforms[\"tSize\"].value.set(readBuffer.width, readBuffer.height);\r\n\r\n    this.quad.material = this.material;\r\n\r\n    if (this.renderToScreen) {\r\n      renderer.render(this.scene, this.camera);\r\n    } else {\r\n      renderer.render(this.scene, this.camera, writeBuffer, this.clear);\r\n    }\r\n  }\r\n}\r\n\r\nexport {\r\n  DotScreenPass\r\n};","let GhostImageShader = {\r\n  uniforms: {\r\n    \"damp\": { value: 0.96 },\r\n    \"tOld\": { value: null },\r\n    \"tNew\": { value: null }\r\n  },\r\n\r\n  vertexShader: `\r\n    varying vec2 vUv;\r\n    void main() {\r\n      vUv = uv;\r\n      gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\r\n    }`,\r\n\r\n  fragmentShader: `\r\n    uniform sampler2D tOld;\r\n    uniform sampler2D tNew;\r\n    uniform float damp;\r\n\r\n    varying vec2 vUv;\r\n\r\n    float when_gt(float x, float y) {\r\n      return max(sign(x - y), 0.0);\r\n    }\r\n\r\n    void main() {\r\n      vec4 texelOld = texture2D(tOld, vUv);\r\n      vec4 texelNew = texture2D(tNew, vUv);\r\n\r\n      texelOld *= damp;\r\n      texelOld.r *= when_gt(texelOld.r, 0.2);\r\n      texelOld.g *= when_gt(texelOld.g, 0.2);\r\n      texelOld.b *= when_gt(texelOld.b, 0.2);\r\n      texelOld.a *= when_gt(texelOld.a, 0.2);\r\n\r\n      gl_FragColor = texelOld + texelNew;\r\n    }`\r\n};\r\n\r\nexport {\r\n  GhostImageShader\r\n};","import { Pass } from './Pass.js';\r\nimport { GhostImageShader } from './shader/GhostImageShader.js';\r\n\r\nclass GhostImagePass extends Pass {\r\n  constructor(damp = 0.96, effectComposer, renderToScreen = false) {\r\n    super(effectComposer, renderToScreen);\r\n    this.uniforms = THREE.UniformsUtils.clone(GhostImageShader.uniforms);\r\n    this.uniforms[\"damp\"].value = damp;\r\n\r\n    this.textureComp = new THREE.WebGLRenderTarget(window.innerWidth, window.innerHeight, {\r\n      minFilter: THREE.LinearFilter,\r\n      magFilter: THREE.NearestFilter,\r\n      format: THREE.RGBAFormat\r\n    });\r\n\r\n    this.textureOld = new THREE.WebGLRenderTarget(window.innerWidth, window.innerHeight, {\r\n      minFilter: THREE.LinearFilter,\r\n      magFilter: THREE.NearestFilter,\r\n      format: THREE.RGBAFormat\r\n    });\r\n\r\n    this.shaderMaterial = new THREE.ShaderMaterial({\r\n      uniforms: this.uniforms,\r\n      vertexShader: GhostImageShader.vertexShader,\r\n      fragmentShader: GhostImageShader.fragmentShader\r\n    });\r\n\r\n    this.sceneComp = new THREE.Scene();\r\n    this.sceneScreen = new THREE.Scene();\r\n\r\n    this.camera = new THREE.OrthographicCamera(-1, 1, 1, -1, 0, 1);\r\n    this.camera.position.z = 1;\r\n    var geometry = new THREE.PlaneBufferGeometry(2, 2);\r\n\r\n    this.quadComp = new THREE.Mesh(geometry, this.shaderMaterial);\r\n    this.sceneComp.add(this.quadComp);\r\n\r\n    let material = new THREE.MeshBasicMaterial({ map: this.textureComp.texture });\r\n    var quadScreen = new THREE.Mesh(geometry, material);\r\n    this.sceneScreen.add(quadScreen);\r\n  }\r\n\r\n  render(renderer, writeBuffer, readBuffer, delta, maskActive) {\r\n    this.uniforms[\"tOld\"].value = this.textureOld.texture;\r\n    this.uniforms[\"tNew\"].value = readBuffer.texture;\r\n    this.quadComp.material = this.shaderMaterial;\r\n\r\n    renderer.render(this.sceneComp, this.camera, this.textureComp);\r\n    renderer.render(this.sceneScreen, this.camera, this.textureOld);\r\n    if (this.renderToScreen) {\r\n      renderer.render(this.sceneScreen, this.camera);\r\n    } else {\r\n      renderer.render(this.sceneScreen, this.camera, writeBuffer, this.clear);\r\n    }\r\n  }\r\n}\r\n\r\nexport {\r\n  GhostImagePass\r\n};","let GlitchShader = {\r\n  uniforms: {\r\n    \"tDiffuse\": { value: null }, //diffuse texture\r\n    \"tDisp\": { value: null }, //displacement texture for digital glitch squares\r\n    \"byp\": { value: 0 }, //apply the glitch ?\r\n    \"amount\": { value: 0.08 },\r\n    \"angle\": { value: 0.02 },\r\n    \"seed\": { value: 0.02 },\r\n    \"seed_x\": { value: 0.02 }, //-1,1\r\n    \"seed_y\": { value: 0.02 }, //-1,1\r\n    \"distortion_x\": { value: 0.5 },\r\n    \"distortion_y\": { value: 0.6 },\r\n    \"col_s\": { value: 0.05 }\r\n  },\r\n\r\n  vertexShader: [\r\n    \"varying vec2 vUv;\",\r\n    \"void main() {\",\r\n    \"vUv = uv;\",\r\n    \"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\r\n    \"}\"\r\n  ].join(\"\\n\"),\r\n\r\n  fragmentShader: [\r\n    \"uniform int byp;\", //should we apply the glitch ?\r\n    \"uniform sampler2D tDiffuse;\",\r\n    \"uniform sampler2D tDisp;\",\r\n\r\n    \"uniform float amount;\",\r\n    \"uniform float angle;\",\r\n    \"uniform float seed;\",\r\n    \"uniform float seed_x;\",\r\n    \"uniform float seed_y;\",\r\n    \"uniform float distortion_x;\",\r\n    \"uniform float distortion_y;\",\r\n    \"uniform float col_s;\",\r\n\r\n    \"varying vec2 vUv;\",\r\n\r\n    \"float rand(vec2 co){\",\r\n    \"return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\",\r\n    \"}\",\r\n\r\n    \"void main() {\",\r\n    \"if(byp<1) {\",\r\n    \"vec2 p = vUv;\",\r\n    \"float xs = floor(gl_FragCoord.x / 0.5);\",\r\n    \"float ys = floor(gl_FragCoord.y / 0.5);\",\r\n    //based on staffantans glitch shader for unity https://github.com/staffantan/unityglitch\r\n    \"vec4 normal = texture2D (tDisp, p*seed*seed);\",\r\n    \"if(p.y<distortion_x+col_s && p.y>distortion_x-col_s*seed) {\",\r\n    \"if(seed_x>0.){\",\r\n    \"p.y = 1. - (p.y + distortion_y);\",\r\n    \"}\",\r\n    \"else {\",\r\n    \"p.y = distortion_y;\",\r\n    \"}\",\r\n    \"}\",\r\n    \"if(p.x<distortion_y+col_s && p.x>distortion_y-col_s*seed) {\",\r\n    \"if(seed_y>0.){\",\r\n    \"p.x=distortion_x;\",\r\n    \"}\",\r\n    \"else {\",\r\n    \"p.x = 1. - (p.x + distortion_x);\",\r\n    \"}\",\r\n    \"}\",\r\n    \"p.x+=normal.x*seed_x*(seed/5.);\",\r\n    \"p.y+=normal.y*seed_y*(seed/5.);\",\r\n    //base from RGB shift shader\r\n    \"vec2 offset = amount * vec2( cos(angle), sin(angle));\",\r\n    \"vec4 cr = texture2D(tDiffuse, p + offset);\",\r\n    \"vec4 cga = texture2D(tDiffuse, p);\",\r\n    \"vec4 cb = texture2D(tDiffuse, p - offset);\",\r\n    \"gl_FragColor = vec4(cr.r, cga.g, cb.b, cga.a);\",\r\n    //add noise\r\n    \"vec4 snow = 200.*amount*vec4(rand(vec2(xs * seed,ys * seed*50.))*0.2);\",\r\n    \"gl_FragColor = gl_FragColor+ snow;\",\r\n    \"}\",\r\n    \"else {\",\r\n    \"gl_FragColor=texture2D (tDiffuse, vUv);\",\r\n    \"}\",\r\n    \"}\"\r\n  ].join(\"\\n\")\r\n};\r\n\r\nexport {\r\n  GlitchShader\r\n};","import { Pass } from './Pass.js';\r\nimport { GlitchShader } from './shader/GlitchShader.js';\r\n\r\nclass GlitchPass extends Pass {\r\n  constructor(size = 64, goWild = false, effectComposer, renderToScreen = false) {\r\n    super(effectComposer, renderToScreen);\r\n    this.uniforms = THREE.UniformsUtils.clone(GlitchShader.uniforms);\r\n    this.uniforms[\"tDisp\"].value = this.generateHeightmap(size);\r\n\r\n    this.material = new THREE.ShaderMaterial({\r\n      uniforms: this.uniforms,\r\n      vertexShader: GlitchShader.vertexShader,\r\n      fragmentShader: GlitchShader.fragmentShader\r\n    });\r\n\r\n    this.camera = new THREE.OrthographicCamera(-1, 1, 1, -1, 0, 1);\r\n    this.scene = new THREE.Scene();\r\n\r\n    this.quad = new THREE.Mesh(new THREE.PlaneBufferGeometry(2, 2), null);\r\n    this.quad.frustumCulled = false;\r\n    this.scene.add(this.quad);\r\n\r\n    this.goWild = false;\r\n    this.curF = 0;\r\n    this.generateTrigger();\r\n  }\r\n\r\n  render(renderer, writeBuffer, readBuffer, delta, maskActive) {\r\n    this.uniforms[\"tDiffuse\"].value = readBuffer.texture;\r\n    this.uniforms['seed'].value = Math.random();\r\n    this.uniforms['byp'].value = 0;\r\n\r\n    if (this.curF % this.randX == 0 || this.goWild == true) {\r\n      this.uniforms['amount'].value = Math.random() / 30;\r\n      this.uniforms['angle'].value = THREE.Math.randFloat(-Math.PI, Math.PI);\r\n      this.uniforms['seed_x'].value = THREE.Math.randFloat(-1, 1);\r\n      this.uniforms['seed_y'].value = THREE.Math.randFloat(-1, 1);\r\n      this.uniforms['distortion_x'].value = THREE.Math.randFloat(0, 1);\r\n      this.uniforms['distortion_y'].value = THREE.Math.randFloat(0, 1);\r\n      this.curF = 0;\r\n      this.generateTrigger();\r\n    } else if (this.curF % this.randX < this.randX / 5) {\r\n      this.uniforms['amount'].value = Math.random() / 90;\r\n      this.uniforms['angle'].value = THREE.Math.randFloat(-Math.PI, Math.PI);\r\n      this.uniforms['distortion_x'].value = THREE.Math.randFloat(0, 1);\r\n      this.uniforms['distortion_y'].value = THREE.Math.randFloat(0, 1);\r\n      this.uniforms['seed_x'].value = THREE.Math.randFloat(-0.3, 0.3);\r\n      this.uniforms['seed_y'].value = THREE.Math.randFloat(-0.3, 0.3);\r\n    } else if (this.goWild == false) {\r\n      this.uniforms['byp'].value = 1;\r\n    }\r\n\r\n    this.curF++;\r\n    this.quad.material = this.material;\r\n\r\n    if (this.renderToScreen) {\r\n      renderer.render(this.scene, this.camera);\r\n    } else {\r\n      renderer.render(this.scene, this.camera, writeBuffer, this.clear);\r\n    }\r\n  }\r\n\r\n  generateTrigger() {\r\n    this.randX = THREE.Math.randInt(120, 240);\r\n  }\r\n\r\n  generateHeightmap(size) {\r\n    let dataArr = new Float32Array(size * size * 3);\r\n    let length = size * size;\r\n\r\n    for (let i = 0; i < length; i++) {\r\n      let val = THREE.Math.randFloat(0, 1);\r\n      dataArr[i * 3 + 0] = val;\r\n      dataArr[i * 3 + 1] = val;\r\n      dataArr[i * 3 + 2] = val;\r\n    }\r\n\r\n    let texture = new THREE.DataTexture(dataArr, size, size,\r\n      THREE.RGBFormat, THREE.FloatType);\r\n    texture.needsUpdate = true;\r\n    return texture;\r\n  }\r\n}\r\n\r\nexport {\r\n  GlitchPass\r\n};","import { Pass } from './Pass.js';\r\nimport { CopyShader } from './shader/CopyShader.js';\r\n\r\nclass OutlinePass extends Pass {\r\n  constructor(resolution, world, selectedObjects = [], effectComposer) {\r\n    super(undefined, false);\r\n    this.BlurDirectionX = new THREE.Vector2(1.0, 0.0);\r\n    this.BlurDirectionY = new THREE.Vector2(0.0, 1.0);\r\n    this.renderScene = world.scene;\r\n    this.renderCamera = world.camera;\r\n    this.selectedObjects = selectedObjects;\r\n    this.visibleEdgeColor = new THREE.Color(1, 1, 1);\r\n    this.hiddenEdgeColor = new THREE.Color(0.1, 0.04, 0.02);\r\n    this.edgeGlow = 0.0;\r\n    this.usePatternTexture = false;\r\n    this.edgeThickness = 1.0;\r\n    this.edgeStrength = 3.0;\r\n    this.downSampleRatio = 2;\r\n    this.pulsePeriod = 0;\r\n\r\n    this.resolution = (resolution !== undefined) ? new THREE.Vector2(\r\n      resolution.x, resolution.y) : new THREE.Vector2(256, 256);\r\n\r\n    let pars = {\r\n      minFilter: THREE.LinearFilter,\r\n      magFilter: THREE.LinearFilter,\r\n      format: THREE.RGBAFormat\r\n    };\r\n\r\n    let resx = Math.round(this.resolution.x / this.downSampleRatio);\r\n    let resy = Math.round(this.resolution.y / this.downSampleRatio);\r\n\r\n    this.maskBufferMaterial = new THREE.MeshBasicMaterial({ color: 0xffffff });\r\n    this.maskBufferMaterial.side = THREE.DoubleSide;\r\n    this.renderTargetMaskBuffer = new THREE.WebGLRenderTarget(\r\n    \tthis.resolution.x, this.resolution.y, pars);\r\n    this.renderTargetMaskBuffer.texture.name = \"OutlinePass.mask\";\r\n    this.renderTargetMaskBuffer.texture.generateMipmaps = false;\r\n\r\n    this.depthMaterial = new THREE.MeshDepthMaterial();\r\n    this.depthMaterial.side = THREE.DoubleSide;\r\n    this.depthMaterial.depthPacking = THREE.RGBADepthPacking;\r\n    this.depthMaterial.blending = THREE.NoBlending;\r\n\r\n    this.prepareMaskMaterial = this.getPrepareMaskMaterial();\r\n    this.prepareMaskMaterial.side = THREE.DoubleSide;\r\n    this.prepareMaskMaterial.fragmentShader = replaceDepthToViewZ(this.prepareMaskMaterial\r\n      .fragmentShader, this.renderCamera);\r\n\r\n    this.renderTargetDepthBuffer = new THREE.WebGLRenderTarget(this.resolution\r\n      .x,\r\n      this.resolution.y, pars);\r\n    this.renderTargetDepthBuffer.texture.name = \"OutlinePass.depth\";\r\n    this.renderTargetDepthBuffer.texture.generateMipmaps = false;\r\n\r\n    this.renderTargetMaskDownSampleBuffer = new THREE.WebGLRenderTarget(resx,\r\n      resy, pars);\r\n    this.renderTargetMaskDownSampleBuffer.texture.name =\r\n      \"OutlinePass.depthDownSample\";\r\n    this.renderTargetMaskDownSampleBuffer.texture.generateMipmaps = false;\r\n\r\n    this.renderTargetBlurBuffer1 = new THREE.WebGLRenderTarget(resx, resy,\r\n      pars);\r\n    this.renderTargetBlurBuffer1.texture.name = \"OutlinePass.blur1\";\r\n    this.renderTargetBlurBuffer1.texture.generateMipmaps = false;\r\n    this.renderTargetBlurBuffer2 = new THREE.WebGLRenderTarget(Math.round(\r\n      resx /\r\n      2), Math.round(resy / 2), pars);\r\n    this.renderTargetBlurBuffer2.texture.name = \"OutlinePass.blur2\";\r\n    this.renderTargetBlurBuffer2.texture.generateMipmaps = false;\r\n\r\n    this.edgeDetectionMaterial = this.getEdgeDetectionMaterial();\r\n    this.renderTargetEdgeBuffer1 = new THREE.WebGLRenderTarget(resx, resy,\r\n      pars);\r\n    this.renderTargetEdgeBuffer1.texture.name = \"OutlinePass.edge1\";\r\n    this.renderTargetEdgeBuffer1.texture.generateMipmaps = false;\r\n    this.renderTargetEdgeBuffer2 = new THREE.WebGLRenderTarget(Math.round(\r\n      resx /\r\n      2), Math.round(resy / 2), pars);\r\n    this.renderTargetEdgeBuffer2.texture.name = \"OutlinePass.edge2\";\r\n    this.renderTargetEdgeBuffer2.texture.generateMipmaps = false;\r\n\r\n    let MAX_EDGE_THICKNESS = 4;\r\n    let MAX_EDGE_GLOW = 4;\r\n\r\n    this.separableBlurMaterial1 = this.getSeperableBlurMaterial(\r\n      MAX_EDGE_THICKNESS);\r\n    this.separableBlurMaterial1.uniforms[\"texSize\"].value = new THREE.Vector2(\r\n      resx, resy);\r\n    this.separableBlurMaterial1.uniforms[\"kernelRadius\"].value = 1;\r\n    this.separableBlurMaterial2 = this.getSeperableBlurMaterial(MAX_EDGE_GLOW);\r\n    this.separableBlurMaterial2.uniforms[\"texSize\"].value = new THREE.Vector2(\r\n      Math.round(resx / 2), Math.round(resy / 2));\r\n    this.separableBlurMaterial2.uniforms[\"kernelRadius\"].value =\r\n      MAX_EDGE_GLOW;\r\n\r\n    // Overlay material\r\n    this.overlayMaterial = this.getOverlayMaterial();\r\n\r\n    this.copyUniforms = THREE.UniformsUtils.clone(CopyShader.uniforms);\r\n    this.copyUniforms[\"opacity\"].value = 1.0;\r\n\r\n    this.materialCopy = new THREE.ShaderMaterial({\r\n      uniforms: this.copyUniforms,\r\n      vertexShader: CopyShader.vertexShader,\r\n      fragmentShader: CopyShader.fragmentShader,\r\n      blending: THREE.NoBlending,\r\n      depthTest: false,\r\n      depthWrite: false,\r\n      transparent: true\r\n    });\r\n\r\n    this.enabled = true;\r\n    this.needsSwap = false;\r\n\r\n    this.oldClearColor = new THREE.Color();\r\n    this.oldClearAlpha = 1;\r\n\r\n    this.camera = new THREE.OrthographicCamera(-1, 1, 1, -1, 0, 1);\r\n    this.scene = new THREE.Scene();\r\n\r\n    this.quad = new THREE.Mesh(new THREE.PlaneBufferGeometry(2, 2), null);\r\n    this.quad.frustumCulled = false; // Avoid getting clipped\r\n    this.scene.add(this.quad);\r\n\r\n    this.tempPulseColor1 = new THREE.Color();\r\n    this.tempPulseColor2 = new THREE.Color();\r\n    this.textureMatrix = new THREE.Matrix4();\r\n\r\n    function replaceDepthToViewZ(string, camera) {\r\n      let type = camera.isPerspectiveCamera ? 'perspective' : 'orthographic';\r\n      return string.replace(/DEPTH_TO_VIEW_Z/g, type + 'DepthToViewZ');\r\n    }\r\n\r\n    if (effectComposer) {\r\n      effectComposer.addPass(this);\r\n    }\r\n  }\r\n\r\n  dispose() {\r\n    this.renderTargetMaskBuffer.dispose();\r\n    this.renderTargetDepthBuffer.dispose();\r\n    this.renderTargetMaskDownSampleBuffer.dispose();\r\n    this.renderTargetBlurBuffer1.dispose();\r\n    this.renderTargetBlurBuffer2.dispose();\r\n    this.renderTargetEdgeBuffer1.dispose();\r\n    this.renderTargetEdgeBuffer2.dispose();\r\n  }\r\n\r\n  setSize(width, height) {\r\n    this.renderTargetMaskBuffer.setSize(width, height);\r\n\r\n    let resx = Math.round(width / this.downSampleRatio);\r\n    let resy = Math.round(height / this.downSampleRatio);\r\n    this.renderTargetMaskDownSampleBuffer.setSize(resx, resy);\r\n    this.renderTargetBlurBuffer1.setSize(resx, resy);\r\n    this.renderTargetEdgeBuffer1.setSize(resx, resy);\r\n    this.separableBlurMaterial1.uniforms[\"texSize\"].value = new THREE.Vector2(\r\n      resx, resy);\r\n\r\n    resx = Math.round(resx / 2);\r\n    resy = Math.round(resy / 2);\r\n\r\n    this.renderTargetBlurBuffer2.setSize(resx, resy);\r\n    this.renderTargetEdgeBuffer2.setSize(resx, resy);\r\n\r\n    this.separableBlurMaterial2.uniforms[\"texSize\"].value = new THREE.Vector2(\r\n      resx, resy);\r\n  }\r\n\r\n  changeVisibilityOfSelectedObjects(bVisible) {\r\n    function gatherSelectedMeshesCallBack(object) {\r\n      if (object instanceof THREE.Mesh) object.visible = bVisible;\r\n    }\r\n\r\n    for (let i = 0; i < this.selectedObjects.length; i++) {\r\n      let selectedObject = this.selectedObjects[i];\r\n      selectedObject.traverse(gatherSelectedMeshesCallBack);\r\n    }\r\n  }\r\n\r\n  changeVisibilityOfNonSelectedObjects(bVisible) {\r\n    let selectedMeshes = [];\r\n\r\n    function gatherSelectedMeshesCallBack(object) {\r\n      if (object instanceof THREE.Mesh) selectedMeshes.push(object);\r\n    }\r\n\r\n    for (let i = 0; i < this.selectedObjects.length; i++) {\r\n      let selectedObject = this.selectedObjects[i];\r\n      selectedObject.traverse(gatherSelectedMeshesCallBack);\r\n    }\r\n\r\n    function VisibilityChangeCallBack(object) {\r\n      if (object instanceof THREE.Mesh || object instanceof THREE.Line ||\r\n        object instanceof THREE.Sprite) {\r\n\r\n        let bFound = false;\r\n\r\n        for (let i = 0; i < selectedMeshes.length; i++) {\r\n          let selectedObjectId = selectedMeshes[i].id;\r\n          if (selectedObjectId === object.id) {\r\n            bFound = true;\r\n            break;\r\n          }\r\n        }\r\n\r\n        if (!bFound) {\r\n          let visibility = object.visible;\r\n          if (!bVisible || object.bVisible) object.visible = bVisible;\r\n          object.bVisible = visibility;\r\n        }\r\n      }\r\n    }\r\n\r\n    this.renderScene.traverse(VisibilityChangeCallBack);\r\n  }\r\n\r\n  updateTextureMatrix() {\r\n    this.textureMatrix.set(0.5, 0.0, 0.0, 0.5,\r\n      0.0, 0.5, 0.0, 0.5,\r\n      0.0, 0.0, 0.5, 0.5,\r\n      0.0, 0.0, 0.0, 1.0);\r\n    this.textureMatrix.multiply(this.renderCamera.projectionMatrix);\r\n    this.textureMatrix.multiply(this.renderCamera.matrixWorldInverse);\r\n  }\r\n\r\n  render(renderer, writeBuffer, readBuffer, delta, maskActive) {\r\n\r\n    if (this.selectedObjects.length === 0) return;\r\n\r\n    this.oldClearColor.copy(renderer.getClearColor());\r\n    this.oldClearAlpha = renderer.getClearAlpha();\r\n    let oldAutoClear = renderer.autoClear;\r\n\r\n    renderer.autoClear = false;\r\n\r\n    if (maskActive) renderer.context.disable(renderer.context.STENCIL_TEST);\r\n\r\n    renderer.setClearColor(0xffffff, 1);\r\n\r\n    // Make selected objects invisible\r\n    this.changeVisibilityOfSelectedObjects(false);\r\n\r\n    let currentBackground = this.renderScene.background;\r\n    this.renderScene.background = null;\r\n\r\n    // 1. Draw Non Selected objects in the depth buffer\r\n    this.renderScene.overrideMaterial = this.depthMaterial;\r\n    renderer.render(this.renderScene, this.renderCamera, this.renderTargetDepthBuffer,\r\n      true);\r\n\r\n    // Make selected objects visible\r\n    this.changeVisibilityOfSelectedObjects(true);\r\n\r\n    // Update Texture Matrix for Depth compare\r\n    this.updateTextureMatrix();\r\n\r\n    // Make non selected objects invisible, and draw only the selected objects, by comparing the depth buffer of non selected objects\r\n    this.changeVisibilityOfNonSelectedObjects(false);\r\n    this.renderScene.overrideMaterial = this.prepareMaskMaterial;\r\n    this.prepareMaskMaterial.uniforms[\"cameraNearFar\"].value = new THREE.Vector2(\r\n      this.renderCamera.near, this.renderCamera.far);\r\n    this.prepareMaskMaterial.uniforms[\"depthTexture\"].value = this.renderTargetDepthBuffer\r\n      .texture;\r\n    this.prepareMaskMaterial.uniforms[\"textureMatrix\"].value = this.textureMatrix;\r\n    renderer.render(this.renderScene, this.renderCamera, this.renderTargetMaskBuffer,\r\n      true);\r\n    this.renderScene.overrideMaterial = null;\r\n    this.changeVisibilityOfNonSelectedObjects(true);\r\n\r\n    this.renderScene.background = currentBackground;\r\n\r\n    // 2. Downsample to Half resolution\r\n    this.quad.material = this.materialCopy;\r\n    this.copyUniforms[\"tDiffuse\"].value = this.renderTargetMaskBuffer.texture;\r\n    renderer.render(this.scene, this.camera, this.renderTargetMaskDownSampleBuffer,\r\n      true);\r\n\r\n    this.tempPulseColor1.copy(this.visibleEdgeColor);\r\n    this.tempPulseColor2.copy(this.hiddenEdgeColor);\r\n\r\n    if (this.pulsePeriod > 0) {\r\n      let scalar = (1 + 0.25) / 2 + Math.cos(performance.now() * 0.01 /\r\n        this.pulsePeriod) * (1.0 - 0.25) / 2;\r\n      this.tempPulseColor1.multiplyScalar(scalar);\r\n      this.tempPulseColor2.multiplyScalar(scalar);\r\n\r\n    }\r\n\r\n    // 3. Apply Edge Detection Pass\r\n    this.quad.material = this.edgeDetectionMaterial;\r\n    this.edgeDetectionMaterial.uniforms[\"maskTexture\"].value = this.renderTargetMaskDownSampleBuffer\r\n      .texture;\r\n    this.edgeDetectionMaterial.uniforms[\"texSize\"].value = new THREE.Vector2(\r\n      this.renderTargetMaskDownSampleBuffer.width, this.renderTargetMaskDownSampleBuffer\r\n      .height);\r\n    this.edgeDetectionMaterial.uniforms[\"visibleEdgeColor\"].value = this.tempPulseColor1;\r\n    this.edgeDetectionMaterial.uniforms[\"hiddenEdgeColor\"].value = this.tempPulseColor2;\r\n    renderer.render(this.scene, this.camera, this.renderTargetEdgeBuffer1,\r\n      true);\r\n\r\n    // 4. Apply Blur on Half res\r\n    this.quad.material = this.separableBlurMaterial1;\r\n    this.separableBlurMaterial1.uniforms[\"colorTexture\"].value = this.renderTargetEdgeBuffer1\r\n      .texture;\r\n    this.separableBlurMaterial1.uniforms[\"direction\"].value = this.BlurDirectionX;\r\n    this.separableBlurMaterial1.uniforms[\"kernelRadius\"].value = this.edgeThickness;\r\n    renderer.render(this.scene, this.camera, this.renderTargetBlurBuffer1,\r\n      true);\r\n    this.separableBlurMaterial1.uniforms[\"colorTexture\"].value = this.renderTargetBlurBuffer1\r\n      .texture;\r\n    this.separableBlurMaterial1.uniforms[\"direction\"].value = this\r\n      .BlurDirectionY;\r\n    renderer.render(this.scene, this.camera, this.renderTargetEdgeBuffer1,\r\n      true);\r\n\r\n    // Apply Blur on quarter res\r\n    this.quad.material = this.separableBlurMaterial2;\r\n    this.separableBlurMaterial2.uniforms[\"colorTexture\"].value = this.renderTargetEdgeBuffer1.texture;\r\n    this.separableBlurMaterial2.uniforms[\"direction\"].value = this.BlurDirectionX;\r\n    renderer.render(this.scene, this.camera, this.renderTargetBlurBuffer2, true);\r\n    this.separableBlurMaterial2.uniforms[\"colorTexture\"].value = this.renderTargetBlurBuffer2.texture;\r\n    this.separableBlurMaterial2.uniforms[\"direction\"].value = this.BlurDirectionY;\r\n    renderer.render(this.scene, this.camera, this.renderTargetEdgeBuffer2, true);\r\n\r\n    // Blend it additively over the input texture\r\n    this.quad.material = this.overlayMaterial;\r\n    this.overlayMaterial.uniforms[\"maskTexture\"].value = this.renderTargetMaskBuffer\r\n      .texture;\r\n    this.overlayMaterial.uniforms[\"edgeTexture1\"].value = this.renderTargetEdgeBuffer1\r\n      .texture;\r\n    this.overlayMaterial.uniforms[\"edgeTexture2\"].value = this.renderTargetEdgeBuffer2\r\n      .texture;\r\n    this.overlayMaterial.uniforms[\"patternTexture\"].value = this.patternTexture;\r\n    this.overlayMaterial.uniforms[\"edgeStrength\"].value = this.edgeStrength;\r\n    this.overlayMaterial.uniforms[\"edgeGlow\"].value = this.edgeGlow;\r\n    this.overlayMaterial.uniforms[\"usePatternTexture\"].value = this.usePatternTexture;\r\n\r\n    if (maskActive) renderer.context.enable(renderer.context.STENCIL_TEST);\r\n\r\n    renderer.render(this.scene, this.camera, readBuffer, false);\r\n\r\n    renderer.setClearColor(this.oldClearColor, this.oldClearAlpha);\r\n    renderer.autoClear = oldAutoClear;\r\n\r\n  }\r\n\r\n  getPrepareMaskMaterial() {\r\n    return new THREE.ShaderMaterial({\r\n      uniforms: {\r\n        \"depthTexture\": { value: null },\r\n        \"cameraNearFar\": { value: new THREE.Vector2(0.5, 0.5) },\r\n        \"textureMatrix\": { value: new THREE.Matrix4() }\r\n      },\r\n\r\n      vertexShader: [\r\n        'varying vec4 projTexCoord;',\r\n        'varying vec4 vPosition;',\r\n        'uniform mat4 textureMatrix;',\r\n\r\n        'void main() {',\r\n\r\n        '\tvPosition = modelViewMatrix * vec4( position, 1.0 );',\r\n        '\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );',\r\n        '\tprojTexCoord = textureMatrix * worldPosition;',\r\n        '\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\r\n\r\n        '}'\r\n      ].join('\\n'),\r\n\r\n      fragmentShader: [\r\n        '#include <packing>',\r\n        'varying vec4 vPosition;',\r\n        'varying vec4 projTexCoord;',\r\n        'uniform sampler2D depthTexture;',\r\n        'uniform vec2 cameraNearFar;',\r\n\r\n        'void main() {',\r\n\r\n        '\tfloat depth = unpackRGBAToDepth(texture2DProj( depthTexture, projTexCoord ));',\r\n        '\tfloat viewZ = - DEPTH_TO_VIEW_Z( depth, cameraNearFar.x, cameraNearFar.y );',\r\n        '\tfloat depthTest = (-vPosition.z > viewZ) ? 1.0 : 0.0;',\r\n        '\tgl_FragColor = vec4(0.0, depthTest, 1.0, 1.0);',\r\n\r\n        '}'\r\n      ].join('\\n')\r\n    });\r\n  }\r\n\r\n  getEdgeDetectionMaterial() {\r\n    return new THREE.ShaderMaterial({\r\n      uniforms: {\r\n        \"maskTexture\": { value: null },\r\n        \"texSize\": { value: new THREE.Vector2(0.5, 0.5) },\r\n        \"visibleEdgeColor\": { value: new THREE.Vector3(1.0, 1.0, 1.0) },\r\n        \"hiddenEdgeColor\": { value: new THREE.Vector3(1.0, 1.0, 1.0) },\r\n      },\r\n\r\n      vertexShader: `varying vec2 vUv;\r\n\t\t\t\tvoid main() {\r\n\t\t\t\t\tvUv = uv;\r\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\r\n\t\t\t\t}`,\r\n\r\n      fragmentShader: `varying vec2 vUv;\r\n\t\t\t\tuniform sampler2D maskTexture;\r\n\t\t\t\tuniform vec2 texSize;\r\n\t\t\t\tuniform vec3 visibleEdgeColor;\r\n\t\t\t\tuniform vec3 hiddenEdgeColor;\r\n\r\n\t\t\t\tvoid main() {\r\n\t\t\t\t\tvec2 invSize = 1.0 / texSize;\r\n\t\t\t\t\tvec4 uvOffset = vec4(1.0, 0.0, 0.0, 1.0) * vec4(invSize, invSize);\r\n\t\t\t\t\tvec4 c1 = texture2D( maskTexture, vUv + uvOffset.xy);\r\n\t\t\t\t\tvec4 c2 = texture2D( maskTexture, vUv - uvOffset.xy);\r\n\t\t\t\t\tvec4 c3 = texture2D( maskTexture, vUv + uvOffset.yw);\r\n\t\t\t\t\tvec4 c4 = texture2D( maskTexture, vUv - uvOffset.yw);\r\n\t\t\t\t\tfloat diff1 = (c1.r - c2.r)*0.5;\r\n\t\t\t\t\tfloat diff2 = (c3.r - c4.r)*0.5;\r\n\t\t\t\t\tfloat d = length( vec2(diff1, diff2) );\r\n\t\t\t\t\tfloat a1 = min(c1.g, c2.g);\r\n\t\t\t\t\tfloat a2 = min(c3.g, c4.g);\r\n\t\t\t\t\tfloat visibilityFactor = min(a1, a2);\r\n\t\t\t\t\tvec3 edgeColor = 1.0 - visibilityFactor > 0.001 ? visibleEdgeColor : hiddenEdgeColor;\r\n\t\t\t\t\tgl_FragColor = vec4(edgeColor, 1.0) * vec4(d);\r\n\t\t\t\t}`\r\n    });\r\n  }\r\n\r\n  getSeperableBlurMaterial(maxRadius) {\r\n    return new THREE.ShaderMaterial({\r\n      defines: {\r\n        \"MAX_RADIUS\": maxRadius,\r\n      },\r\n\r\n      uniforms: {\r\n        \"colorTexture\": { value: null },\r\n        \"texSize\": { value: new THREE.Vector2(0.5, 0.5) },\r\n        \"direction\": { value: new THREE.Vector2(0.5, 0.5) },\r\n        \"kernelRadius\": { value: 1.0 }\r\n      },\r\n\r\n      vertexShader: `varying vec2 vUv;\r\n\t\t\t\tvoid main() {\r\n\t\t\t\t\tvUv = uv;\r\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\r\n\t\t\t\t}`,\r\n\r\n      fragmentShader: `#include <common>\r\n\t\t\t\tvarying vec2 vUv;\r\n\t\t\t\tuniform sampler2D colorTexture;\r\n\t\t\t\tuniform vec2 texSize;\r\n\t\t\t\tuniform vec2 direction;\r\n\t\t\t\tuniform float kernelRadius;\r\n\r\n\t\t\t\tfloat gaussianPdf(in float x, in float sigma) {\r\n\t\t\t\t\treturn 0.39894 * exp( -0.5 * x * x/( sigma * sigma))/sigma;\r\n\t\t\t\t}\r\n\t\t\t\tvoid main() {\r\n\t\t\t\t\tvec2 invSize = 1.0 / texSize;\r\n\t\t\t\t\tfloat weightSum = gaussianPdf(0.0, kernelRadius);\r\n\t\t\t\t\tvec3 diffuseSum = texture2D( colorTexture, vUv).rgb * weightSum;\r\n\t\t\t\t\tvec2 delta = direction * invSize * kernelRadius/float(MAX_RADIUS);\r\n\t\t\t\t\tvec2 uvOffset = delta;\r\n\t\t\t\t\tfor( int i = 1; i <= MAX_RADIUS; i ++ ) {\r\n\t\t\t\t\t\tfloat w = gaussianPdf(uvOffset.x, kernelRadius);\r\n\t\t\t\t\t\tvec3 sample1 = texture2D( colorTexture, vUv + uvOffset).rgb;\r\n\t\t\t\t\t\tvec3 sample2 = texture2D( colorTexture, vUv - uvOffset).rgb;\r\n\t\t\t\t\t\tdiffuseSum += ((sample1 + sample2) * w);\r\n\t\t\t\t\t\tweightSum += (2.0 * w);\r\n\t\t\t\t\t\tuvOffset += delta;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tgl_FragColor = vec4(diffuseSum/weightSum, 1.0);\r\n\t\t\t\t}`\r\n    });\r\n  }\r\n\r\n  getOverlayMaterial() {\r\n    return new THREE.ShaderMaterial({\r\n      uniforms: {\r\n        \"maskTexture\": { value: null },\r\n        \"edgeTexture1\": { value: null },\r\n        \"edgeTexture2\": { value: null },\r\n        \"patternTexture\": { value: null },\r\n        \"edgeStrength\": { value: 1.0 },\r\n        \"edgeGlow\": { value: 1.0 },\r\n        \"usePatternTexture\": { value: 0.0 }\r\n      },\r\n\r\n      vertexShader: `varying vec2 vUv;\r\n\t\t\t\tvoid main() {\r\n\t\t\t\t\tvUv = uv;\r\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\r\n\t\t\t\t}`,\r\n\r\n      fragmentShader: `varying vec2 vUv;\r\n\t\t\t\tuniform sampler2D maskTexture;\r\n\t\t\t\tuniform sampler2D edgeTexture1;\r\n\t\t\t\tuniform sampler2D edgeTexture2;\r\n\t\t\t\tuniform sampler2D patternTexture;\r\n\t\t\t\tuniform float edgeStrength;\r\n\t\t\t\tuniform float edgeGlow;\r\n\t\t\t\tuniform bool usePatternTexture;\r\n\r\n\t\t\t\tvoid main() {\r\n\t\t\t\t\tvec4 edgeValue1 = texture2D(edgeTexture1, vUv);\r\n\t\t\t\t\tvec4 edgeValue2 = texture2D(edgeTexture2, vUv);\r\n\t\t\t\t\tvec4 maskColor = texture2D(maskTexture, vUv);\r\n\t\t\t\t\tvec4 patternColor = texture2D(patternTexture, 6.0 * vUv);\r\n\t\t\t\t\tfloat visibilityFactor = 1.0 - maskColor.g > 0.0 ? 1.0 : 0.5;\r\n\t\t\t\t\tvec4 edgeValue = edgeValue1 + edgeValue2 * edgeGlow;\r\n\t\t\t\t\tvec4 finalColor = edgeStrength * maskColor.r * edgeValue;\r\n\t\t\t\t\tif(usePatternTexture)\r\n\t\t\t\t\t\tfinalColor += + visibilityFactor * (1.0 - maskColor.r) * (1.0 - patternColor.r);\r\n\t\t\t\t\tgl_FragColor = finalColor;\r\n\t\t\t\t}`,\r\n      blending: THREE.AdditiveBlending,\r\n      depthTest: false,\r\n      depthWrite: false,\r\n      transparent: true\r\n    });\r\n  }\r\n}\r\n\r\nexport {\r\n  OutlinePass\r\n};","/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author davidedc / http://www.sketchpatch.net/\r\n *\r\n * NVIDIA FXAA by Timothy Lottes\r\n * http://timothylottes.blogspot.com/2011/06/fxaa3-source-released.html\r\n * - WebGL port by @supereggbert\r\n * http://www.glge.org/demos/fxaa/\r\n */\r\n\r\nlet FXAAShader = {\r\n\r\n\tuniforms: {\r\n\r\n\t\t\"tDiffuse\":   { value: null },\r\n\t\t\"resolution\": { value: new THREE.Vector2( 1 / 1024, 1 / 512 ) }\r\n\r\n\t},\r\n\r\n\tvertexShader: [\r\n\r\n\t\t\"varying vec2 vUv;\",\r\n\r\n\t\t\"void main() {\",\r\n\r\n\t\t\t\"vUv = uv;\",\r\n\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\r\n\r\n\t\t\"}\"\r\n\r\n\t].join( \"\\n\" ),\r\n\r\n\tfragmentShader: [\r\n        \"precision highp float;\",\r\n        \"\",\r\n        \"uniform sampler2D tDiffuse;\",\r\n        \"\",\r\n        \"uniform vec2 resolution;\",\r\n        \"\",\r\n        \"varying vec2 vUv;\",\r\n        \"\",\r\n        \"// FXAA 3.11 implementation by NVIDIA, ported to WebGL by Agost Biro (biro@archilogic.com)\",\r\n        \"\",\r\n        \"//----------------------------------------------------------------------------------\",\r\n        \"// File:        es3-kepler\\FXAA\\assets\\shaders/FXAA_DefaultES.frag\",\r\n        \"// SDK Version: v3.00\",\r\n        \"// Email:       gameworks@nvidia.com\",\r\n        \"// Site:        http://developer.nvidia.com/\",\r\n        \"//\",\r\n        \"// Copyright (c) 2014-2015, NVIDIA CORPORATION. All rights reserved.\",\r\n        \"//\",\r\n        \"// Redistribution and use in source and binary forms, with or without\",\r\n        \"// modification, are permitted provided that the following conditions\",\r\n        \"// are met:\",\r\n        \"//  * Redistributions of source code must retain the above copyright\",\r\n        \"//    notice, this list of conditions and the following disclaimer.\",\r\n        \"//  * Redistributions in binary form must reproduce the above copyright\",\r\n        \"//    notice, this list of conditions and the following disclaimer in the\",\r\n        \"//    documentation and/or other materials provided with the distribution.\",\r\n        \"//  * Neither the name of NVIDIA CORPORATION nor the names of its\",\r\n        \"//    contributors may be used to endorse or promote products derived\",\r\n        \"//    from this software without specific prior written permission.\",\r\n        \"//\",\r\n        \"// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS ``AS IS'' AND ANY\",\r\n        \"// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\",\r\n        \"// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\",\r\n        \"// PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR\",\r\n        \"// CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\",\r\n        \"// EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\",\r\n        \"// PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\",\r\n        \"// PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\",\r\n        \"// OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\",\r\n        \"// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\",\r\n        \"// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\",\r\n        \"//\",\r\n        \"//----------------------------------------------------------------------------------\",\r\n        \"\",\r\n        \"#define FXAA_PC 1\",\r\n        \"#define FXAA_GLSL_100 1\",\r\n        \"#define FXAA_QUALITY_PRESET 12\",\r\n        \"\",\r\n        \"#define FXAA_GREEN_AS_LUMA 1\",\r\n        \"\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"#ifndef FXAA_PC_CONSOLE\",\r\n        \"    //\",\r\n        \"    // The console algorithm for PC is included\",\r\n        \"    // for developers targeting really low spec machines.\",\r\n        \"    // Likely better to just run FXAA_PC, and use a really low preset.\",\r\n        \"    //\",\r\n        \"    #define FXAA_PC_CONSOLE 0\",\r\n        \"#endif\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"#ifndef FXAA_GLSL_120\",\r\n        \"    #define FXAA_GLSL_120 0\",\r\n        \"#endif\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"#ifndef FXAA_GLSL_130\",\r\n        \"    #define FXAA_GLSL_130 0\",\r\n        \"#endif\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"#ifndef FXAA_HLSL_3\",\r\n        \"    #define FXAA_HLSL_3 0\",\r\n        \"#endif\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"#ifndef FXAA_HLSL_4\",\r\n        \"    #define FXAA_HLSL_4 0\",\r\n        \"#endif\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"#ifndef FXAA_HLSL_5\",\r\n        \"    #define FXAA_HLSL_5 0\",\r\n        \"#endif\",\r\n        \"/*==========================================================================*/\",\r\n        \"#ifndef FXAA_GREEN_AS_LUMA\",\r\n        \"    //\",\r\n        \"    // For those using non-linear color,\",\r\n        \"    // and either not able to get luma in alpha, or not wanting to,\",\r\n        \"    // this enables FXAA to run using green as a proxy for luma.\",\r\n        \"    // So with this enabled, no need to pack luma in alpha.\",\r\n        \"    //\",\r\n        \"    // This will turn off AA on anything which lacks some amount of green.\",\r\n        \"    // Pure red and blue or combination of only R and B, will get no AA.\",\r\n        \"    //\",\r\n        \"    // Might want to lower the settings for both,\",\r\n        \"    //    fxaaConsoleEdgeThresholdMin\",\r\n        \"    //    fxaaQualityEdgeThresholdMin\",\r\n        \"    // In order to insure AA does not get turned off on colors\",\r\n        \"    // which contain a minor amount of green.\",\r\n        \"    //\",\r\n        \"    // 1 = On.\",\r\n        \"    // 0 = Off.\",\r\n        \"    //\",\r\n        \"    #define FXAA_GREEN_AS_LUMA 0\",\r\n        \"#endif\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"#ifndef FXAA_EARLY_EXIT\",\r\n        \"    //\",\r\n        \"    // Controls algorithm's early exit path.\",\r\n        \"    // On PS3 turning this ON adds 2 cycles to the shader.\",\r\n        \"    // On 360 turning this OFF adds 10ths of a millisecond to the shader.\",\r\n        \"    // Turning this off on console will result in a more blurry image.\",\r\n        \"    // So this defaults to on.\",\r\n        \"    //\",\r\n        \"    // 1 = On.\",\r\n        \"    // 0 = Off.\",\r\n        \"    //\",\r\n        \"    #define FXAA_EARLY_EXIT 1\",\r\n        \"#endif\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"#ifndef FXAA_DISCARD\",\r\n        \"    //\",\r\n        \"    // Only valid for PC OpenGL currently.\",\r\n        \"    // Probably will not work when FXAA_GREEN_AS_LUMA = 1.\",\r\n        \"    //\",\r\n        \"    // 1 = Use discard on pixels which don't need AA.\",\r\n        \"    //     For APIs which enable concurrent TEX+ROP from same surface.\",\r\n        \"    // 0 = Return unchanged color on pixels which don't need AA.\",\r\n        \"    //\",\r\n        \"    #define FXAA_DISCARD 0\",\r\n        \"#endif\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"#ifndef FXAA_FAST_PIXEL_OFFSET\",\r\n        \"    //\",\r\n        \"    // Used for GLSL 120 only.\",\r\n        \"    //\",\r\n        \"    // 1 = GL API supports fast pixel offsets\",\r\n        \"    // 0 = do not use fast pixel offsets\",\r\n        \"    //\",\r\n        \"    #ifdef GL_EXT_gpu_shader4\",\r\n        \"        #define FXAA_FAST_PIXEL_OFFSET 1\",\r\n        \"    #endif\",\r\n        \"    #ifdef GL_NV_gpu_shader5\",\r\n        \"        #define FXAA_FAST_PIXEL_OFFSET 1\",\r\n        \"    #endif\",\r\n        \"    #ifdef GL_ARB_gpu_shader5\",\r\n        \"        #define FXAA_FAST_PIXEL_OFFSET 1\",\r\n        \"    #endif\",\r\n        \"    #ifndef FXAA_FAST_PIXEL_OFFSET\",\r\n        \"        #define FXAA_FAST_PIXEL_OFFSET 0\",\r\n        \"    #endif\",\r\n        \"#endif\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"#ifndef FXAA_GATHER4_ALPHA\",\r\n        \"    //\",\r\n        \"    // 1 = API supports gather4 on alpha channel.\",\r\n        \"    // 0 = API does not support gather4 on alpha channel.\",\r\n        \"    //\",\r\n        \"    #if (FXAA_HLSL_5 == 1)\",\r\n        \"        #define FXAA_GATHER4_ALPHA 1\",\r\n        \"    #endif\",\r\n        \"    #ifdef GL_ARB_gpu_shader5\",\r\n        \"        #define FXAA_GATHER4_ALPHA 1\",\r\n        \"    #endif\",\r\n        \"    #ifdef GL_NV_gpu_shader5\",\r\n        \"        #define FXAA_GATHER4_ALPHA 1\",\r\n        \"    #endif\",\r\n        \"    #ifndef FXAA_GATHER4_ALPHA\",\r\n        \"        #define FXAA_GATHER4_ALPHA 0\",\r\n        \"    #endif\",\r\n        \"#endif\",\r\n        \"\",\r\n        \"\",\r\n        \"/*============================================================================\",\r\n        \"                        FXAA QUALITY - TUNING KNOBS\",\r\n        \"------------------------------------------------------------------------------\",\r\n        \"NOTE the other tuning knobs are now in the shader function inputs!\",\r\n        \"============================================================================*/\",\r\n        \"#ifndef FXAA_QUALITY_PRESET\",\r\n        \"    //\",\r\n        \"    // Choose the quality preset.\",\r\n        \"    // This needs to be compiled into the shader as it effects code.\",\r\n        \"    // Best option to include multiple presets is to\",\r\n        \"    // in each shader define the preset, then include this file.\",\r\n        \"    //\",\r\n        \"    // OPTIONS\",\r\n        \"    // -----------------------------------------------------------------------\",\r\n        \"    // 10 to 15 - default medium dither (10=fastest, 15=highest quality)\",\r\n        \"    // 20 to 29 - less dither, more expensive (20=fastest, 29=highest quality)\",\r\n        \"    // 39       - no dither, very expensive\",\r\n        \"    //\",\r\n        \"    // NOTES\",\r\n        \"    // -----------------------------------------------------------------------\",\r\n        \"    // 12 = slightly faster then FXAA 3.9 and higher edge quality (default)\",\r\n        \"    // 13 = about same speed as FXAA 3.9 and better than 12\",\r\n        \"    // 23 = closest to FXAA 3.9 visually and performance wise\",\r\n        \"    //  _ = the lowest digit is directly related to performance\",\r\n        \"    // _  = the highest digit is directly related to style\",\r\n        \"    //\",\r\n        \"    #define FXAA_QUALITY_PRESET 12\",\r\n        \"#endif\",\r\n        \"\",\r\n        \"\",\r\n        \"/*============================================================================\",\r\n        \"\",\r\n        \"                           FXAA QUALITY - PRESETS\",\r\n        \"\",\r\n        \"============================================================================*/\",\r\n        \"\",\r\n        \"/*============================================================================\",\r\n        \"                     FXAA QUALITY - MEDIUM DITHER PRESETS\",\r\n        \"============================================================================*/\",\r\n        \"#if (FXAA_QUALITY_PRESET == 10)\",\r\n        \"    #define FXAA_QUALITY_PS 3\",\r\n        \"    #define FXAA_QUALITY_P0 1.5\",\r\n        \"    #define FXAA_QUALITY_P1 3.0\",\r\n        \"    #define FXAA_QUALITY_P2 12.0\",\r\n        \"#endif\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"#if (FXAA_QUALITY_PRESET == 11)\",\r\n        \"    #define FXAA_QUALITY_PS 4\",\r\n        \"    #define FXAA_QUALITY_P0 1.0\",\r\n        \"    #define FXAA_QUALITY_P1 1.5\",\r\n        \"    #define FXAA_QUALITY_P2 3.0\",\r\n        \"    #define FXAA_QUALITY_P3 12.0\",\r\n        \"#endif\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"#if (FXAA_QUALITY_PRESET == 12)\",\r\n        \"    #define FXAA_QUALITY_PS 5\",\r\n        \"    #define FXAA_QUALITY_P0 1.0\",\r\n        \"    #define FXAA_QUALITY_P1 1.5\",\r\n        \"    #define FXAA_QUALITY_P2 2.0\",\r\n        \"    #define FXAA_QUALITY_P3 4.0\",\r\n        \"    #define FXAA_QUALITY_P4 12.0\",\r\n        \"#endif\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"#if (FXAA_QUALITY_PRESET == 13)\",\r\n        \"    #define FXAA_QUALITY_PS 6\",\r\n        \"    #define FXAA_QUALITY_P0 1.0\",\r\n        \"    #define FXAA_QUALITY_P1 1.5\",\r\n        \"    #define FXAA_QUALITY_P2 2.0\",\r\n        \"    #define FXAA_QUALITY_P3 2.0\",\r\n        \"    #define FXAA_QUALITY_P4 4.0\",\r\n        \"    #define FXAA_QUALITY_P5 12.0\",\r\n        \"#endif\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"#if (FXAA_QUALITY_PRESET == 14)\",\r\n        \"    #define FXAA_QUALITY_PS 7\",\r\n        \"    #define FXAA_QUALITY_P0 1.0\",\r\n        \"    #define FXAA_QUALITY_P1 1.5\",\r\n        \"    #define FXAA_QUALITY_P2 2.0\",\r\n        \"    #define FXAA_QUALITY_P3 2.0\",\r\n        \"    #define FXAA_QUALITY_P4 2.0\",\r\n        \"    #define FXAA_QUALITY_P5 4.0\",\r\n        \"    #define FXAA_QUALITY_P6 12.0\",\r\n        \"#endif\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"#if (FXAA_QUALITY_PRESET == 15)\",\r\n        \"    #define FXAA_QUALITY_PS 8\",\r\n        \"    #define FXAA_QUALITY_P0 1.0\",\r\n        \"    #define FXAA_QUALITY_P1 1.5\",\r\n        \"    #define FXAA_QUALITY_P2 2.0\",\r\n        \"    #define FXAA_QUALITY_P3 2.0\",\r\n        \"    #define FXAA_QUALITY_P4 2.0\",\r\n        \"    #define FXAA_QUALITY_P5 2.0\",\r\n        \"    #define FXAA_QUALITY_P6 4.0\",\r\n        \"    #define FXAA_QUALITY_P7 12.0\",\r\n        \"#endif\",\r\n        \"\",\r\n        \"/*============================================================================\",\r\n        \"                     FXAA QUALITY - LOW DITHER PRESETS\",\r\n        \"============================================================================*/\",\r\n        \"#if (FXAA_QUALITY_PRESET == 20)\",\r\n        \"    #define FXAA_QUALITY_PS 3\",\r\n        \"    #define FXAA_QUALITY_P0 1.5\",\r\n        \"    #define FXAA_QUALITY_P1 2.0\",\r\n        \"    #define FXAA_QUALITY_P2 8.0\",\r\n        \"#endif\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"#if (FXAA_QUALITY_PRESET == 21)\",\r\n        \"    #define FXAA_QUALITY_PS 4\",\r\n        \"    #define FXAA_QUALITY_P0 1.0\",\r\n        \"    #define FXAA_QUALITY_P1 1.5\",\r\n        \"    #define FXAA_QUALITY_P2 2.0\",\r\n        \"    #define FXAA_QUALITY_P3 8.0\",\r\n        \"#endif\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"#if (FXAA_QUALITY_PRESET == 22)\",\r\n        \"    #define FXAA_QUALITY_PS 5\",\r\n        \"    #define FXAA_QUALITY_P0 1.0\",\r\n        \"    #define FXAA_QUALITY_P1 1.5\",\r\n        \"    #define FXAA_QUALITY_P2 2.0\",\r\n        \"    #define FXAA_QUALITY_P3 2.0\",\r\n        \"    #define FXAA_QUALITY_P4 8.0\",\r\n        \"#endif\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"#if (FXAA_QUALITY_PRESET == 23)\",\r\n        \"    #define FXAA_QUALITY_PS 6\",\r\n        \"    #define FXAA_QUALITY_P0 1.0\",\r\n        \"    #define FXAA_QUALITY_P1 1.5\",\r\n        \"    #define FXAA_QUALITY_P2 2.0\",\r\n        \"    #define FXAA_QUALITY_P3 2.0\",\r\n        \"    #define FXAA_QUALITY_P4 2.0\",\r\n        \"    #define FXAA_QUALITY_P5 8.0\",\r\n        \"#endif\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"#if (FXAA_QUALITY_PRESET == 24)\",\r\n        \"    #define FXAA_QUALITY_PS 7\",\r\n        \"    #define FXAA_QUALITY_P0 1.0\",\r\n        \"    #define FXAA_QUALITY_P1 1.5\",\r\n        \"    #define FXAA_QUALITY_P2 2.0\",\r\n        \"    #define FXAA_QUALITY_P3 2.0\",\r\n        \"    #define FXAA_QUALITY_P4 2.0\",\r\n        \"    #define FXAA_QUALITY_P5 3.0\",\r\n        \"    #define FXAA_QUALITY_P6 8.0\",\r\n        \"#endif\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"#if (FXAA_QUALITY_PRESET == 25)\",\r\n        \"    #define FXAA_QUALITY_PS 8\",\r\n        \"    #define FXAA_QUALITY_P0 1.0\",\r\n        \"    #define FXAA_QUALITY_P1 1.5\",\r\n        \"    #define FXAA_QUALITY_P2 2.0\",\r\n        \"    #define FXAA_QUALITY_P3 2.0\",\r\n        \"    #define FXAA_QUALITY_P4 2.0\",\r\n        \"    #define FXAA_QUALITY_P5 2.0\",\r\n        \"    #define FXAA_QUALITY_P6 4.0\",\r\n        \"    #define FXAA_QUALITY_P7 8.0\",\r\n        \"#endif\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"#if (FXAA_QUALITY_PRESET == 26)\",\r\n        \"    #define FXAA_QUALITY_PS 9\",\r\n        \"    #define FXAA_QUALITY_P0 1.0\",\r\n        \"    #define FXAA_QUALITY_P1 1.5\",\r\n        \"    #define FXAA_QUALITY_P2 2.0\",\r\n        \"    #define FXAA_QUALITY_P3 2.0\",\r\n        \"    #define FXAA_QUALITY_P4 2.0\",\r\n        \"    #define FXAA_QUALITY_P5 2.0\",\r\n        \"    #define FXAA_QUALITY_P6 2.0\",\r\n        \"    #define FXAA_QUALITY_P7 4.0\",\r\n        \"    #define FXAA_QUALITY_P8 8.0\",\r\n        \"#endif\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"#if (FXAA_QUALITY_PRESET == 27)\",\r\n        \"    #define FXAA_QUALITY_PS 10\",\r\n        \"    #define FXAA_QUALITY_P0 1.0\",\r\n        \"    #define FXAA_QUALITY_P1 1.5\",\r\n        \"    #define FXAA_QUALITY_P2 2.0\",\r\n        \"    #define FXAA_QUALITY_P3 2.0\",\r\n        \"    #define FXAA_QUALITY_P4 2.0\",\r\n        \"    #define FXAA_QUALITY_P5 2.0\",\r\n        \"    #define FXAA_QUALITY_P6 2.0\",\r\n        \"    #define FXAA_QUALITY_P7 2.0\",\r\n        \"    #define FXAA_QUALITY_P8 4.0\",\r\n        \"    #define FXAA_QUALITY_P9 8.0\",\r\n        \"#endif\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"#if (FXAA_QUALITY_PRESET == 28)\",\r\n        \"    #define FXAA_QUALITY_PS 11\",\r\n        \"    #define FXAA_QUALITY_P0 1.0\",\r\n        \"    #define FXAA_QUALITY_P1 1.5\",\r\n        \"    #define FXAA_QUALITY_P2 2.0\",\r\n        \"    #define FXAA_QUALITY_P3 2.0\",\r\n        \"    #define FXAA_QUALITY_P4 2.0\",\r\n        \"    #define FXAA_QUALITY_P5 2.0\",\r\n        \"    #define FXAA_QUALITY_P6 2.0\",\r\n        \"    #define FXAA_QUALITY_P7 2.0\",\r\n        \"    #define FXAA_QUALITY_P8 2.0\",\r\n        \"    #define FXAA_QUALITY_P9 4.0\",\r\n        \"    #define FXAA_QUALITY_P10 8.0\",\r\n        \"#endif\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"#if (FXAA_QUALITY_PRESET == 29)\",\r\n        \"    #define FXAA_QUALITY_PS 12\",\r\n        \"    #define FXAA_QUALITY_P0 1.0\",\r\n        \"    #define FXAA_QUALITY_P1 1.5\",\r\n        \"    #define FXAA_QUALITY_P2 2.0\",\r\n        \"    #define FXAA_QUALITY_P3 2.0\",\r\n        \"    #define FXAA_QUALITY_P4 2.0\",\r\n        \"    #define FXAA_QUALITY_P5 2.0\",\r\n        \"    #define FXAA_QUALITY_P6 2.0\",\r\n        \"    #define FXAA_QUALITY_P7 2.0\",\r\n        \"    #define FXAA_QUALITY_P8 2.0\",\r\n        \"    #define FXAA_QUALITY_P9 2.0\",\r\n        \"    #define FXAA_QUALITY_P10 4.0\",\r\n        \"    #define FXAA_QUALITY_P11 8.0\",\r\n        \"#endif\",\r\n        \"\",\r\n        \"/*============================================================================\",\r\n        \"                     FXAA QUALITY - EXTREME QUALITY\",\r\n        \"============================================================================*/\",\r\n        \"#if (FXAA_QUALITY_PRESET == 39)\",\r\n        \"    #define FXAA_QUALITY_PS 12\",\r\n        \"    #define FXAA_QUALITY_P0 1.0\",\r\n        \"    #define FXAA_QUALITY_P1 1.0\",\r\n        \"    #define FXAA_QUALITY_P2 1.0\",\r\n        \"    #define FXAA_QUALITY_P3 1.0\",\r\n        \"    #define FXAA_QUALITY_P4 1.0\",\r\n        \"    #define FXAA_QUALITY_P5 1.5\",\r\n        \"    #define FXAA_QUALITY_P6 2.0\",\r\n        \"    #define FXAA_QUALITY_P7 2.0\",\r\n        \"    #define FXAA_QUALITY_P8 2.0\",\r\n        \"    #define FXAA_QUALITY_P9 2.0\",\r\n        \"    #define FXAA_QUALITY_P10 4.0\",\r\n        \"    #define FXAA_QUALITY_P11 8.0\",\r\n        \"#endif\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"/*============================================================================\",\r\n        \"\",\r\n        \"                                API PORTING\",\r\n        \"\",\r\n        \"============================================================================*/\",\r\n        \"#if (FXAA_GLSL_100 == 1) || (FXAA_GLSL_120 == 1) || (FXAA_GLSL_130 == 1)\",\r\n        \"    #define FxaaBool bool\",\r\n        \"    #define FxaaDiscard discard\",\r\n        \"    #define FxaaFloat float\",\r\n        \"    #define FxaaFloat2 vec2\",\r\n        \"    #define FxaaFloat3 vec3\",\r\n        \"    #define FxaaFloat4 vec4\",\r\n        \"    #define FxaaHalf float\",\r\n        \"    #define FxaaHalf2 vec2\",\r\n        \"    #define FxaaHalf3 vec3\",\r\n        \"    #define FxaaHalf4 vec4\",\r\n        \"    #define FxaaInt2 ivec2\",\r\n        \"    #define FxaaSat(x) clamp(x, 0.0, 1.0)\",\r\n        \"    #define FxaaTex sampler2D\",\r\n        \"#else\",\r\n        \"    #define FxaaBool bool\",\r\n        \"    #define FxaaDiscard clip(-1)\",\r\n        \"    #define FxaaFloat float\",\r\n        \"    #define FxaaFloat2 float2\",\r\n        \"    #define FxaaFloat3 float3\",\r\n        \"    #define FxaaFloat4 float4\",\r\n        \"    #define FxaaHalf half\",\r\n        \"    #define FxaaHalf2 half2\",\r\n        \"    #define FxaaHalf3 half3\",\r\n        \"    #define FxaaHalf4 half4\",\r\n        \"    #define FxaaSat(x) saturate(x)\",\r\n        \"#endif\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"#if (FXAA_GLSL_100 == 1)\",\r\n        \"  #define FxaaTexTop(t, p) texture2D(t, p, 0.0)\",\r\n        \"  #define FxaaTexOff(t, p, o, r) texture2D(t, p + (o * r), 0.0)\",\r\n        \"#endif\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"#if (FXAA_GLSL_120 == 1)\",\r\n        \"    // Requires,\",\r\n        \"    //  #version 120\",\r\n        \"    // And at least,\",\r\n        \"    //  #extension GL_EXT_gpu_shader4 : enable\",\r\n        \"    //  (or set FXAA_FAST_PIXEL_OFFSET 1 to work like DX9)\",\r\n        \"    #define FxaaTexTop(t, p) texture2DLod(t, p, 0.0)\",\r\n        \"    #if (FXAA_FAST_PIXEL_OFFSET == 1)\",\r\n        \"        #define FxaaTexOff(t, p, o, r) texture2DLodOffset(t, p, 0.0, o)\",\r\n        \"    #else\",\r\n        \"        #define FxaaTexOff(t, p, o, r) texture2DLod(t, p + (o * r), 0.0)\",\r\n        \"    #endif\",\r\n        \"    #if (FXAA_GATHER4_ALPHA == 1)\",\r\n        \"        // use #extension GL_ARB_gpu_shader5 : enable\",\r\n        \"        #define FxaaTexAlpha4(t, p) textureGather(t, p, 3)\",\r\n        \"        #define FxaaTexOffAlpha4(t, p, o) textureGatherOffset(t, p, o, 3)\",\r\n        \"        #define FxaaTexGreen4(t, p) textureGather(t, p, 1)\",\r\n        \"        #define FxaaTexOffGreen4(t, p, o) textureGatherOffset(t, p, o, 1)\",\r\n        \"    #endif\",\r\n        \"#endif\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"#if (FXAA_GLSL_130 == 1)\",\r\n        \"    // Requires \\\"#version 130\\\" or better\",\r\n        \"    #define FxaaTexTop(t, p) textureLod(t, p, 0.0)\",\r\n        \"    #define FxaaTexOff(t, p, o, r) textureLodOffset(t, p, 0.0, o)\",\r\n        \"    #if (FXAA_GATHER4_ALPHA == 1)\",\r\n        \"        // use #extension GL_ARB_gpu_shader5 : enable\",\r\n        \"        #define FxaaTexAlpha4(t, p) textureGather(t, p, 3)\",\r\n        \"        #define FxaaTexOffAlpha4(t, p, o) textureGatherOffset(t, p, o, 3)\",\r\n        \"        #define FxaaTexGreen4(t, p) textureGather(t, p, 1)\",\r\n        \"        #define FxaaTexOffGreen4(t, p, o) textureGatherOffset(t, p, o, 1)\",\r\n        \"    #endif\",\r\n        \"#endif\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"#if (FXAA_HLSL_3 == 1)\",\r\n        \"    #define FxaaInt2 float2\",\r\n        \"    #define FxaaTex sampler2D\",\r\n        \"    #define FxaaTexTop(t, p) tex2Dlod(t, float4(p, 0.0, 0.0))\",\r\n        \"    #define FxaaTexOff(t, p, o, r) tex2Dlod(t, float4(p + (o * r), 0, 0))\",\r\n        \"#endif\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"#if (FXAA_HLSL_4 == 1)\",\r\n        \"    #define FxaaInt2 int2\",\r\n        \"    struct FxaaTex { SamplerState smpl; Texture2D tex; };\",\r\n        \"    #define FxaaTexTop(t, p) t.tex.SampleLevel(t.smpl, p, 0.0)\",\r\n        \"    #define FxaaTexOff(t, p, o, r) t.tex.SampleLevel(t.smpl, p, 0.0, o)\",\r\n        \"#endif\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"#if (FXAA_HLSL_5 == 1)\",\r\n        \"    #define FxaaInt2 int2\",\r\n        \"    struct FxaaTex { SamplerState smpl; Texture2D tex; };\",\r\n        \"    #define FxaaTexTop(t, p) t.tex.SampleLevel(t.smpl, p, 0.0)\",\r\n        \"    #define FxaaTexOff(t, p, o, r) t.tex.SampleLevel(t.smpl, p, 0.0, o)\",\r\n        \"    #define FxaaTexAlpha4(t, p) t.tex.GatherAlpha(t.smpl, p)\",\r\n        \"    #define FxaaTexOffAlpha4(t, p, o) t.tex.GatherAlpha(t.smpl, p, o)\",\r\n        \"    #define FxaaTexGreen4(t, p) t.tex.GatherGreen(t.smpl, p)\",\r\n        \"    #define FxaaTexOffGreen4(t, p, o) t.tex.GatherGreen(t.smpl, p, o)\",\r\n        \"#endif\",\r\n        \"\",\r\n        \"\",\r\n        \"/*============================================================================\",\r\n        \"                   GREEN AS LUMA OPTION SUPPORT FUNCTION\",\r\n        \"============================================================================*/\",\r\n        \"#if (FXAA_GREEN_AS_LUMA == 0)\",\r\n        \"    FxaaFloat FxaaLuma(FxaaFloat4 rgba) { return rgba.w; }\",\r\n        \"#else\",\r\n        \"    FxaaFloat FxaaLuma(FxaaFloat4 rgba) { return rgba.y; }\",\r\n        \"#endif\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"/*============================================================================\",\r\n        \"\",\r\n        \"                             FXAA3 QUALITY - PC\",\r\n        \"\",\r\n        \"============================================================================*/\",\r\n        \"#if (FXAA_PC == 1)\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"FxaaFloat4 FxaaPixelShader(\",\r\n        \"    //\",\r\n        \"    // Use noperspective interpolation here (turn off perspective interpolation).\",\r\n        \"    // {xy} = center of pixel\",\r\n        \"    FxaaFloat2 pos,\",\r\n        \"    //\",\r\n        \"    // Used only for FXAA Console, and not used on the 360 version.\",\r\n        \"    // Use noperspective interpolation here (turn off perspective interpolation).\",\r\n        \"    // {xy_} = upper left of pixel\",\r\n        \"    // {_zw} = lower right of pixel\",\r\n        \"    FxaaFloat4 fxaaConsolePosPos,\",\r\n        \"    //\",\r\n        \"    // Input color texture.\",\r\n        \"    // {rgb_} = color in linear or perceptual color space\",\r\n        \"    // if (FXAA_GREEN_AS_LUMA == 0)\",\r\n        \"    //     {__a} = luma in perceptual color space (not linear)\",\r\n        \"    FxaaTex tex,\",\r\n        \"    //\",\r\n        \"    // Only used on the optimized 360 version of FXAA Console.\",\r\n        \"    // For everything but 360, just use the same input here as for \\\"tex\\\".\",\r\n        \"    // For 360, same texture, just alias with a 2nd sampler.\",\r\n        \"    // This sampler needs to have an exponent bias of -1.\",\r\n        \"    FxaaTex fxaaConsole360TexExpBiasNegOne,\",\r\n        \"    //\",\r\n        \"    // Only used on the optimized 360 version of FXAA Console.\",\r\n        \"    // For everything but 360, just use the same input here as for \\\"tex\\\".\",\r\n        \"    // For 360, same texture, just alias with a 3nd sampler.\",\r\n        \"    // This sampler needs to have an exponent bias of -2.\",\r\n        \"    FxaaTex fxaaConsole360TexExpBiasNegTwo,\",\r\n        \"    //\",\r\n        \"    // Only used on FXAA Quality.\",\r\n        \"    // This must be from a constant/uniform.\",\r\n        \"    // {x_} = 1.0/screenWidthInPixels\",\r\n        \"    // {_y} = 1.0/screenHeightInPixels\",\r\n        \"    FxaaFloat2 fxaaQualityRcpFrame,\",\r\n        \"    //\",\r\n        \"    // Only used on FXAA Console.\",\r\n        \"    // This must be from a constant/uniform.\",\r\n        \"    // This effects sub-pixel AA quality and inversely sharpness.\",\r\n        \"    //   Where N ranges between,\",\r\n        \"    //     N = 0.50 (default)\",\r\n        \"    //     N = 0.33 (sharper)\",\r\n        \"    // {x__} = -N/screenWidthInPixels\",\r\n        \"    // {_y_} = -N/screenHeightInPixels\",\r\n        \"    // {_z_} =  N/screenWidthInPixels\",\r\n        \"    // {__w} =  N/screenHeightInPixels\",\r\n        \"    FxaaFloat4 fxaaConsoleRcpFrameOpt,\",\r\n        \"    //\",\r\n        \"    // Only used on FXAA Console.\",\r\n        \"    // Not used on 360, but used on PS3 and PC.\",\r\n        \"    // This must be from a constant/uniform.\",\r\n        \"    // {x__} = -2.0/screenWidthInPixels\",\r\n        \"    // {_y_} = -2.0/screenHeightInPixels\",\r\n        \"    // {_z_} =  2.0/screenWidthInPixels\",\r\n        \"    // {__w} =  2.0/screenHeightInPixels\",\r\n        \"    FxaaFloat4 fxaaConsoleRcpFrameOpt2,\",\r\n        \"    //\",\r\n        \"    // Only used on FXAA Console.\",\r\n        \"    // Only used on 360 in place of fxaaConsoleRcpFrameOpt2.\",\r\n        \"    // This must be from a constant/uniform.\",\r\n        \"    // {x__} =  8.0/screenWidthInPixels\",\r\n        \"    // {_y_} =  8.0/screenHeightInPixels\",\r\n        \"    // {_z_} = -4.0/screenWidthInPixels\",\r\n        \"    // {__w} = -4.0/screenHeightInPixels\",\r\n        \"    FxaaFloat4 fxaaConsole360RcpFrameOpt2,\",\r\n        \"    //\",\r\n        \"    // Only used on FXAA Quality.\",\r\n        \"    // This used to be the FXAA_QUALITY_SUBPIX define.\",\r\n        \"    // It is here now to allow easier tuning.\",\r\n        \"    // Choose the amount of sub-pixel aliasing removal.\",\r\n        \"    // This can effect sharpness.\",\r\n        \"    //   1.00 - upper limit (softer)\",\r\n        \"    //   0.75 - default amount of filtering\",\r\n        \"    //   0.50 - lower limit (sharper, less sub-pixel aliasing removal)\",\r\n        \"    //   0.25 - almost off\",\r\n        \"    //   0.00 - completely off\",\r\n        \"    FxaaFloat fxaaQualitySubpix,\",\r\n        \"    //\",\r\n        \"    // Only used on FXAA Quality.\",\r\n        \"    // This used to be the FXAA_QUALITY_EDGE_THRESHOLD define.\",\r\n        \"    // It is here now to allow easier tuning.\",\r\n        \"    // The minimum amount of local contrast required to apply algorithm.\",\r\n        \"    //   0.333 - too little (faster)\",\r\n        \"    //   0.250 - low quality\",\r\n        \"    //   0.166 - default\",\r\n        \"    //   0.125 - high quality\",\r\n        \"    //   0.063 - overkill (slower)\",\r\n        \"    FxaaFloat fxaaQualityEdgeThreshold,\",\r\n        \"    //\",\r\n        \"    // Only used on FXAA Quality.\",\r\n        \"    // This used to be the FXAA_QUALITY_EDGE_THRESHOLD_MIN define.\",\r\n        \"    // It is here now to allow easier tuning.\",\r\n        \"    // Trims the algorithm from processing darks.\",\r\n        \"    //   0.0833 - upper limit (default, the start of visible unfiltered edges)\",\r\n        \"    //   0.0625 - high quality (faster)\",\r\n        \"    //   0.0312 - visible limit (slower)\",\r\n        \"    // Special notes when using FXAA_GREEN_AS_LUMA,\",\r\n        \"    //   Likely want to set this to zero.\",\r\n        \"    //   As colors that are mostly not-green\",\r\n        \"    //   will appear very dark in the green channel!\",\r\n        \"    //   Tune by looking at mostly non-green content,\",\r\n        \"    //   then start at zero and increase until aliasing is a problem.\",\r\n        \"    FxaaFloat fxaaQualityEdgeThresholdMin,\",\r\n        \"    //\",\r\n        \"    // Only used on FXAA Console.\",\r\n        \"    // This used to be the FXAA_CONSOLE_EDGE_SHARPNESS define.\",\r\n        \"    // It is here now to allow easier tuning.\",\r\n        \"    // This does not effect PS3, as this needs to be compiled in.\",\r\n        \"    //   Use FXAA_CONSOLE_PS3_EDGE_SHARPNESS for PS3.\",\r\n        \"    //   Due to the PS3 being ALU bound,\",\r\n        \"    //   there are only three safe values here: 2 and 4 and 8.\",\r\n        \"    //   These options use the shaders ability to a free *|/ by 2|4|8.\",\r\n        \"    // For all other platforms can be a non-power of two.\",\r\n        \"    //   8.0 is sharper (default!!!)\",\r\n        \"    //   4.0 is softer\",\r\n        \"    //   2.0 is really soft (good only for vector graphics inputs)\",\r\n        \"    FxaaFloat fxaaConsoleEdgeSharpness,\",\r\n        \"    //\",\r\n        \"    // Only used on FXAA Console.\",\r\n        \"    // This used to be the FXAA_CONSOLE_EDGE_THRESHOLD define.\",\r\n        \"    // It is here now to allow easier tuning.\",\r\n        \"    // This does not effect PS3, as this needs to be compiled in.\",\r\n        \"    //   Use FXAA_CONSOLE_PS3_EDGE_THRESHOLD for PS3.\",\r\n        \"    //   Due to the PS3 being ALU bound,\",\r\n        \"    //   there are only two safe values here: 1/4 and 1/8.\",\r\n        \"    //   These options use the shaders ability to a free *|/ by 2|4|8.\",\r\n        \"    // The console setting has a different mapping than the quality setting.\",\r\n        \"    // Other platforms can use other values.\",\r\n        \"    //   0.125 leaves less aliasing, but is softer (default!!!)\",\r\n        \"    //   0.25 leaves more aliasing, and is sharper\",\r\n        \"    FxaaFloat fxaaConsoleEdgeThreshold,\",\r\n        \"    //\",\r\n        \"    // Only used on FXAA Console.\",\r\n        \"    // This used to be the FXAA_CONSOLE_EDGE_THRESHOLD_MIN define.\",\r\n        \"    // It is here now to allow easier tuning.\",\r\n        \"    // Trims the algorithm from processing darks.\",\r\n        \"    // The console setting has a different mapping than the quality setting.\",\r\n        \"    // This only applies when FXAA_EARLY_EXIT is 1.\",\r\n        \"    // This does not apply to PS3,\",\r\n        \"    // PS3 was simplified to avoid more shader instructions.\",\r\n        \"    //   0.06 - faster but more aliasing in darks\",\r\n        \"    //   0.05 - default\",\r\n        \"    //   0.04 - slower and less aliasing in darks\",\r\n        \"    // Special notes when using FXAA_GREEN_AS_LUMA,\",\r\n        \"    //   Likely want to set this to zero.\",\r\n        \"    //   As colors that are mostly not-green\",\r\n        \"    //   will appear very dark in the green channel!\",\r\n        \"    //   Tune by looking at mostly non-green content,\",\r\n        \"    //   then start at zero and increase until aliasing is a problem.\",\r\n        \"    FxaaFloat fxaaConsoleEdgeThresholdMin,\",\r\n        \"    //\",\r\n        \"    // Extra constants for 360 FXAA Console only.\",\r\n        \"    // Use zeros or anything else for other platforms.\",\r\n        \"    // These must be in physical constant registers and NOT immedates.\",\r\n        \"    // Immedates will result in compiler un-optimizing.\",\r\n        \"    // {xyzw} = float4(1.0, -1.0, 0.25, -0.25)\",\r\n        \"    FxaaFloat4 fxaaConsole360ConstDir\",\r\n        \") {\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"    FxaaFloat2 posM;\",\r\n        \"    posM.x = pos.x;\",\r\n        \"    posM.y = pos.y;\",\r\n        \"    #if (FXAA_GATHER4_ALPHA == 1)\",\r\n        \"        #if (FXAA_DISCARD == 0)\",\r\n        \"            FxaaFloat4 rgbyM = FxaaTexTop(tex, posM);\",\r\n        \"            #if (FXAA_GREEN_AS_LUMA == 0)\",\r\n        \"                #define lumaM rgbyM.w\",\r\n        \"            #else\",\r\n        \"                #define lumaM rgbyM.y\",\r\n        \"            #endif\",\r\n        \"        #endif\",\r\n        \"        #if (FXAA_GREEN_AS_LUMA == 0)\",\r\n        \"            FxaaFloat4 luma4A = FxaaTexAlpha4(tex, posM);\",\r\n        \"            FxaaFloat4 luma4B = FxaaTexOffAlpha4(tex, posM, FxaaInt2(-1, -1));\",\r\n        \"        #else\",\r\n        \"            FxaaFloat4 luma4A = FxaaTexGreen4(tex, posM);\",\r\n        \"            FxaaFloat4 luma4B = FxaaTexOffGreen4(tex, posM, FxaaInt2(-1, -1));\",\r\n        \"        #endif\",\r\n        \"        #if (FXAA_DISCARD == 1)\",\r\n        \"            #define lumaM luma4A.w\",\r\n        \"        #endif\",\r\n        \"        #define lumaE luma4A.z\",\r\n        \"        #define lumaS luma4A.x\",\r\n        \"        #define lumaSE luma4A.y\",\r\n        \"        #define lumaNW luma4B.w\",\r\n        \"        #define lumaN luma4B.z\",\r\n        \"        #define lumaW luma4B.x\",\r\n        \"    #else\",\r\n        \"        FxaaFloat4 rgbyM = FxaaTexTop(tex, posM);\",\r\n        \"        #if (FXAA_GREEN_AS_LUMA == 0)\",\r\n        \"            #define lumaM rgbyM.w\",\r\n        \"        #else\",\r\n        \"            #define lumaM rgbyM.y\",\r\n        \"        #endif\",\r\n        \"        #if (FXAA_GLSL_100 == 1)\",\r\n        \"          FxaaFloat lumaS = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 0.0, 1.0), fxaaQualityRcpFrame.xy));\",\r\n        \"          FxaaFloat lumaE = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 1.0, 0.0), fxaaQualityRcpFrame.xy));\",\r\n        \"          FxaaFloat lumaN = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 0.0,-1.0), fxaaQualityRcpFrame.xy));\",\r\n        \"          FxaaFloat lumaW = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2(-1.0, 0.0), fxaaQualityRcpFrame.xy));\",\r\n        \"        #else\",\r\n        \"          FxaaFloat lumaS = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 0, 1), fxaaQualityRcpFrame.xy));\",\r\n        \"          FxaaFloat lumaE = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 1, 0), fxaaQualityRcpFrame.xy));\",\r\n        \"          FxaaFloat lumaN = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 0,-1), fxaaQualityRcpFrame.xy));\",\r\n        \"          FxaaFloat lumaW = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(-1, 0), fxaaQualityRcpFrame.xy));\",\r\n        \"        #endif\",\r\n        \"    #endif\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"    FxaaFloat maxSM = max(lumaS, lumaM);\",\r\n        \"    FxaaFloat minSM = min(lumaS, lumaM);\",\r\n        \"    FxaaFloat maxESM = max(lumaE, maxSM);\",\r\n        \"    FxaaFloat minESM = min(lumaE, minSM);\",\r\n        \"    FxaaFloat maxWN = max(lumaN, lumaW);\",\r\n        \"    FxaaFloat minWN = min(lumaN, lumaW);\",\r\n        \"    FxaaFloat rangeMax = max(maxWN, maxESM);\",\r\n        \"    FxaaFloat rangeMin = min(minWN, minESM);\",\r\n        \"    FxaaFloat rangeMaxScaled = rangeMax * fxaaQualityEdgeThreshold;\",\r\n        \"    FxaaFloat range = rangeMax - rangeMin;\",\r\n        \"    FxaaFloat rangeMaxClamped = max(fxaaQualityEdgeThresholdMin, rangeMaxScaled);\",\r\n        \"    FxaaBool earlyExit = range < rangeMaxClamped;\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"    if(earlyExit)\",\r\n        \"        #if (FXAA_DISCARD == 1)\",\r\n        \"            FxaaDiscard;\",\r\n        \"        #else\",\r\n        \"            return rgbyM;\",\r\n        \"        #endif\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"    #if (FXAA_GATHER4_ALPHA == 0)\",\r\n        \"        #if (FXAA_GLSL_100 == 1)\",\r\n        \"          FxaaFloat lumaNW = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2(-1.0,-1.0), fxaaQualityRcpFrame.xy));\",\r\n        \"          FxaaFloat lumaSE = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 1.0, 1.0), fxaaQualityRcpFrame.xy));\",\r\n        \"          FxaaFloat lumaNE = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 1.0,-1.0), fxaaQualityRcpFrame.xy));\",\r\n        \"          FxaaFloat lumaSW = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2(-1.0, 1.0), fxaaQualityRcpFrame.xy));\",\r\n        \"        #else\",\r\n        \"          FxaaFloat lumaNW = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(-1,-1), fxaaQualityRcpFrame.xy));\",\r\n        \"          FxaaFloat lumaSE = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 1, 1), fxaaQualityRcpFrame.xy));\",\r\n        \"          FxaaFloat lumaNE = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 1,-1), fxaaQualityRcpFrame.xy));\",\r\n        \"          FxaaFloat lumaSW = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(-1, 1), fxaaQualityRcpFrame.xy));\",\r\n        \"        #endif\",\r\n        \"    #else\",\r\n        \"        FxaaFloat lumaNE = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(1, -1), fxaaQualityRcpFrame.xy));\",\r\n        \"        FxaaFloat lumaSW = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(-1, 1), fxaaQualityRcpFrame.xy));\",\r\n        \"    #endif\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"    FxaaFloat lumaNS = lumaN + lumaS;\",\r\n        \"    FxaaFloat lumaWE = lumaW + lumaE;\",\r\n        \"    FxaaFloat subpixRcpRange = 1.0/range;\",\r\n        \"    FxaaFloat subpixNSWE = lumaNS + lumaWE;\",\r\n        \"    FxaaFloat edgeHorz1 = (-2.0 * lumaM) + lumaNS;\",\r\n        \"    FxaaFloat edgeVert1 = (-2.0 * lumaM) + lumaWE;\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"    FxaaFloat lumaNESE = lumaNE + lumaSE;\",\r\n        \"    FxaaFloat lumaNWNE = lumaNW + lumaNE;\",\r\n        \"    FxaaFloat edgeHorz2 = (-2.0 * lumaE) + lumaNESE;\",\r\n        \"    FxaaFloat edgeVert2 = (-2.0 * lumaN) + lumaNWNE;\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"    FxaaFloat lumaNWSW = lumaNW + lumaSW;\",\r\n        \"    FxaaFloat lumaSWSE = lumaSW + lumaSE;\",\r\n        \"    FxaaFloat edgeHorz4 = (abs(edgeHorz1) * 2.0) + abs(edgeHorz2);\",\r\n        \"    FxaaFloat edgeVert4 = (abs(edgeVert1) * 2.0) + abs(edgeVert2);\",\r\n        \"    FxaaFloat edgeHorz3 = (-2.0 * lumaW) + lumaNWSW;\",\r\n        \"    FxaaFloat edgeVert3 = (-2.0 * lumaS) + lumaSWSE;\",\r\n        \"    FxaaFloat edgeHorz = abs(edgeHorz3) + edgeHorz4;\",\r\n        \"    FxaaFloat edgeVert = abs(edgeVert3) + edgeVert4;\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"    FxaaFloat subpixNWSWNESE = lumaNWSW + lumaNESE;\",\r\n        \"    FxaaFloat lengthSign = fxaaQualityRcpFrame.x;\",\r\n        \"    FxaaBool horzSpan = edgeHorz >= edgeVert;\",\r\n        \"    FxaaFloat subpixA = subpixNSWE * 2.0 + subpixNWSWNESE;\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"    if(!horzSpan) lumaN = lumaW;\",\r\n        \"    if(!horzSpan) lumaS = lumaE;\",\r\n        \"    if(horzSpan) lengthSign = fxaaQualityRcpFrame.y;\",\r\n        \"    FxaaFloat subpixB = (subpixA * (1.0/12.0)) - lumaM;\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"    FxaaFloat gradientN = lumaN - lumaM;\",\r\n        \"    FxaaFloat gradientS = lumaS - lumaM;\",\r\n        \"    FxaaFloat lumaNN = lumaN + lumaM;\",\r\n        \"    FxaaFloat lumaSS = lumaS + lumaM;\",\r\n        \"    FxaaBool pairN = abs(gradientN) >= abs(gradientS);\",\r\n        \"    FxaaFloat gradient = max(abs(gradientN), abs(gradientS));\",\r\n        \"    if(pairN) lengthSign = -lengthSign;\",\r\n        \"    FxaaFloat subpixC = FxaaSat(abs(subpixB) * subpixRcpRange);\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"    FxaaFloat2 posB;\",\r\n        \"    posB.x = posM.x;\",\r\n        \"    posB.y = posM.y;\",\r\n        \"    FxaaFloat2 offNP;\",\r\n        \"    offNP.x = (!horzSpan) ? 0.0 : fxaaQualityRcpFrame.x;\",\r\n        \"    offNP.y = ( horzSpan) ? 0.0 : fxaaQualityRcpFrame.y;\",\r\n        \"    if(!horzSpan) posB.x += lengthSign * 0.5;\",\r\n        \"    if( horzSpan) posB.y += lengthSign * 0.5;\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"    FxaaFloat2 posN;\",\r\n        \"    posN.x = posB.x - offNP.x * FXAA_QUALITY_P0;\",\r\n        \"    posN.y = posB.y - offNP.y * FXAA_QUALITY_P0;\",\r\n        \"    FxaaFloat2 posP;\",\r\n        \"    posP.x = posB.x + offNP.x * FXAA_QUALITY_P0;\",\r\n        \"    posP.y = posB.y + offNP.y * FXAA_QUALITY_P0;\",\r\n        \"    FxaaFloat subpixD = ((-2.0)*subpixC) + 3.0;\",\r\n        \"    FxaaFloat lumaEndN = FxaaLuma(FxaaTexTop(tex, posN));\",\r\n        \"    FxaaFloat subpixE = subpixC * subpixC;\",\r\n        \"    FxaaFloat lumaEndP = FxaaLuma(FxaaTexTop(tex, posP));\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"    if(!pairN) lumaNN = lumaSS;\",\r\n        \"    FxaaFloat gradientScaled = gradient * 1.0/4.0;\",\r\n        \"    FxaaFloat lumaMM = lumaM - lumaNN * 0.5;\",\r\n        \"    FxaaFloat subpixF = subpixD * subpixE;\",\r\n        \"    FxaaBool lumaMLTZero = lumaMM < 0.0;\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"    lumaEndN -= lumaNN * 0.5;\",\r\n        \"    lumaEndP -= lumaNN * 0.5;\",\r\n        \"    FxaaBool doneN = abs(lumaEndN) >= gradientScaled;\",\r\n        \"    FxaaBool doneP = abs(lumaEndP) >= gradientScaled;\",\r\n        \"    if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P1;\",\r\n        \"    if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P1;\",\r\n        \"    FxaaBool doneNP = (!doneN) || (!doneP);\",\r\n        \"    if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P1;\",\r\n        \"    if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P1;\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"    if(doneNP) {\",\r\n        \"        if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\r\n        \"        if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\r\n        \"        if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\r\n        \"        if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\r\n        \"        doneN = abs(lumaEndN) >= gradientScaled;\",\r\n        \"        doneP = abs(lumaEndP) >= gradientScaled;\",\r\n        \"        if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P2;\",\r\n        \"        if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P2;\",\r\n        \"        doneNP = (!doneN) || (!doneP);\",\r\n        \"        if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P2;\",\r\n        \"        if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P2;\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"        #if (FXAA_QUALITY_PS > 3)\",\r\n        \"        if(doneNP) {\",\r\n        \"            if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\r\n        \"            if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\r\n        \"            if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\r\n        \"            if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\r\n        \"            doneN = abs(lumaEndN) >= gradientScaled;\",\r\n        \"            doneP = abs(lumaEndP) >= gradientScaled;\",\r\n        \"            if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P3;\",\r\n        \"            if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P3;\",\r\n        \"            doneNP = (!doneN) || (!doneP);\",\r\n        \"            if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P3;\",\r\n        \"            if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P3;\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"            #if (FXAA_QUALITY_PS > 4)\",\r\n        \"            if(doneNP) {\",\r\n        \"                if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\r\n        \"                if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\r\n        \"                if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\r\n        \"                if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\r\n        \"                doneN = abs(lumaEndN) >= gradientScaled;\",\r\n        \"                doneP = abs(lumaEndP) >= gradientScaled;\",\r\n        \"                if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P4;\",\r\n        \"                if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P4;\",\r\n        \"                doneNP = (!doneN) || (!doneP);\",\r\n        \"                if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P4;\",\r\n        \"                if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P4;\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"                #if (FXAA_QUALITY_PS > 5)\",\r\n        \"                if(doneNP) {\",\r\n        \"                    if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\r\n        \"                    if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\r\n        \"                    if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\r\n        \"                    if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\r\n        \"                    doneN = abs(lumaEndN) >= gradientScaled;\",\r\n        \"                    doneP = abs(lumaEndP) >= gradientScaled;\",\r\n        \"                    if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P5;\",\r\n        \"                    if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P5;\",\r\n        \"                    doneNP = (!doneN) || (!doneP);\",\r\n        \"                    if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P5;\",\r\n        \"                    if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P5;\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"                    #if (FXAA_QUALITY_PS > 6)\",\r\n        \"                    if(doneNP) {\",\r\n        \"                        if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\r\n        \"                        if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\r\n        \"                        if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\r\n        \"                        if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\r\n        \"                        doneN = abs(lumaEndN) >= gradientScaled;\",\r\n        \"                        doneP = abs(lumaEndP) >= gradientScaled;\",\r\n        \"                        if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P6;\",\r\n        \"                        if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P6;\",\r\n        \"                        doneNP = (!doneN) || (!doneP);\",\r\n        \"                        if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P6;\",\r\n        \"                        if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P6;\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"                        #if (FXAA_QUALITY_PS > 7)\",\r\n        \"                        if(doneNP) {\",\r\n        \"                            if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\r\n        \"                            if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\r\n        \"                            if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\r\n        \"                            if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\r\n        \"                            doneN = abs(lumaEndN) >= gradientScaled;\",\r\n        \"                            doneP = abs(lumaEndP) >= gradientScaled;\",\r\n        \"                            if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P7;\",\r\n        \"                            if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P7;\",\r\n        \"                            doneNP = (!doneN) || (!doneP);\",\r\n        \"                            if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P7;\",\r\n        \"                            if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P7;\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"    #if (FXAA_QUALITY_PS > 8)\",\r\n        \"    if(doneNP) {\",\r\n        \"        if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\r\n        \"        if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\r\n        \"        if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\r\n        \"        if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\r\n        \"        doneN = abs(lumaEndN) >= gradientScaled;\",\r\n        \"        doneP = abs(lumaEndP) >= gradientScaled;\",\r\n        \"        if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P8;\",\r\n        \"        if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P8;\",\r\n        \"        doneNP = (!doneN) || (!doneP);\",\r\n        \"        if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P8;\",\r\n        \"        if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P8;\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"        #if (FXAA_QUALITY_PS > 9)\",\r\n        \"        if(doneNP) {\",\r\n        \"            if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\r\n        \"            if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\r\n        \"            if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\r\n        \"            if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\r\n        \"            doneN = abs(lumaEndN) >= gradientScaled;\",\r\n        \"            doneP = abs(lumaEndP) >= gradientScaled;\",\r\n        \"            if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P9;\",\r\n        \"            if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P9;\",\r\n        \"            doneNP = (!doneN) || (!doneP);\",\r\n        \"            if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P9;\",\r\n        \"            if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P9;\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"            #if (FXAA_QUALITY_PS > 10)\",\r\n        \"            if(doneNP) {\",\r\n        \"                if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\r\n        \"                if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\r\n        \"                if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\r\n        \"                if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\r\n        \"                doneN = abs(lumaEndN) >= gradientScaled;\",\r\n        \"                doneP = abs(lumaEndP) >= gradientScaled;\",\r\n        \"                if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P10;\",\r\n        \"                if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P10;\",\r\n        \"                doneNP = (!doneN) || (!doneP);\",\r\n        \"                if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P10;\",\r\n        \"                if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P10;\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"                #if (FXAA_QUALITY_PS > 11)\",\r\n        \"                if(doneNP) {\",\r\n        \"                    if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\r\n        \"                    if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\r\n        \"                    if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\r\n        \"                    if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\r\n        \"                    doneN = abs(lumaEndN) >= gradientScaled;\",\r\n        \"                    doneP = abs(lumaEndP) >= gradientScaled;\",\r\n        \"                    if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P11;\",\r\n        \"                    if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P11;\",\r\n        \"                    doneNP = (!doneN) || (!doneP);\",\r\n        \"                    if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P11;\",\r\n        \"                    if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P11;\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"                    #if (FXAA_QUALITY_PS > 12)\",\r\n        \"                    if(doneNP) {\",\r\n        \"                        if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\r\n        \"                        if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\r\n        \"                        if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\r\n        \"                        if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\r\n        \"                        doneN = abs(lumaEndN) >= gradientScaled;\",\r\n        \"                        doneP = abs(lumaEndP) >= gradientScaled;\",\r\n        \"                        if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P12;\",\r\n        \"                        if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P12;\",\r\n        \"                        doneNP = (!doneN) || (!doneP);\",\r\n        \"                        if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P12;\",\r\n        \"                        if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P12;\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"                    }\",\r\n        \"                    #endif\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"                }\",\r\n        \"                #endif\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"            }\",\r\n        \"            #endif\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"        }\",\r\n        \"        #endif\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"    }\",\r\n        \"    #endif\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"                        }\",\r\n        \"                        #endif\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"                    }\",\r\n        \"                    #endif\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"                }\",\r\n        \"                #endif\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"            }\",\r\n        \"            #endif\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"        }\",\r\n        \"        #endif\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"    }\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"    FxaaFloat dstN = posM.x - posN.x;\",\r\n        \"    FxaaFloat dstP = posP.x - posM.x;\",\r\n        \"    if(!horzSpan) dstN = posM.y - posN.y;\",\r\n        \"    if(!horzSpan) dstP = posP.y - posM.y;\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"    FxaaBool goodSpanN = (lumaEndN < 0.0) != lumaMLTZero;\",\r\n        \"    FxaaFloat spanLength = (dstP + dstN);\",\r\n        \"    FxaaBool goodSpanP = (lumaEndP < 0.0) != lumaMLTZero;\",\r\n        \"    FxaaFloat spanLengthRcp = 1.0/spanLength;\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"    FxaaBool directionN = dstN < dstP;\",\r\n        \"    FxaaFloat dst = min(dstN, dstP);\",\r\n        \"    FxaaBool goodSpan = directionN ? goodSpanN : goodSpanP;\",\r\n        \"    FxaaFloat subpixG = subpixF * subpixF;\",\r\n        \"    FxaaFloat pixelOffset = (dst * (-spanLengthRcp)) + 0.5;\",\r\n        \"    FxaaFloat subpixH = subpixG * fxaaQualitySubpix;\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"    FxaaFloat pixelOffsetGood = goodSpan ? pixelOffset : 0.0;\",\r\n        \"    FxaaFloat pixelOffsetSubpix = max(pixelOffsetGood, subpixH);\",\r\n        \"    if(!horzSpan) posM.x += pixelOffsetSubpix * lengthSign;\",\r\n        \"    if( horzSpan) posM.y += pixelOffsetSubpix * lengthSign;\",\r\n        \"    #if (FXAA_DISCARD == 1)\",\r\n        \"        return FxaaTexTop(tex, posM);\",\r\n        \"    #else\",\r\n        \"        return FxaaFloat4(FxaaTexTop(tex, posM).xyz, lumaM);\",\r\n        \"    #endif\",\r\n        \"}\",\r\n        \"/*==========================================================================*/\",\r\n        \"#endif\",\r\n        \"\",\r\n        \"void main() {\",\r\n        \"  gl_FragColor = FxaaPixelShader(\",\r\n        \"    vUv,\",\r\n        \"    vec4(0.0),\",\r\n        \"    tDiffuse,\",\r\n        \"    tDiffuse,\",\r\n        \"    tDiffuse,\",\r\n        \"    resolution,\",\r\n        \"    vec4(0.0),\",\r\n        \"    vec4(0.0),\",\r\n        \"    vec4(0.0),\",\r\n        \"    0.75,\",\r\n        \"    0.166,\",\r\n        \"    0.0833,\",\r\n        \"    0.0,\",\r\n        \"    0.0,\",\r\n        \"    0.0,\",\r\n        \"    vec4(0.0)\",\r\n        \"  );\",\r\n        \"\",\r\n        \"  // TODO avoid querying texture twice for same texel\",\r\n        \"  gl_FragColor.a = texture2D(tDiffuse, vUv).a;\",\r\n        \"}\"\r\n\t].join(\"\\n\")\r\n\r\n};\r\n\r\nexport{\r\n\tFXAAShader\r\n};\r\n","let _extends = ( des, src, over ) => {\r\n  let res = _extend( des, src, over );\r\n\r\n  function _extend( des, src, over ) {\r\n    let override = true;\r\n    if( over === false ) {\r\n      override = false;\r\n    }\r\n    if( src instanceof Array ) {\r\n      for( let i = 0, len = src.length; i < len; i++ )\r\n        _extend( des, src[ i ], override );\r\n    }\r\n    for( let i in src ) {\r\n      if( override || !( i in des ) ) {\r\n        des[ i ] = src[ i ];\r\n      }\r\n    }\r\n    return des;\r\n  }\r\n  for( let i in src ) {\r\n    delete res[ i ];\r\n  }\r\n  return res;\r\n};\r\n\r\nexport {\r\n  _extends\r\n};","let rndInt = ( max ) => {\r\n  return Math.floor( Math.random() * max );\r\n};\r\nexport {\r\n  rndInt\r\n};","let rndString = (len) => {\r\n  if (len <= 0) {\r\n    return '';\r\n  }\r\n  len = len - 1 || 31;\r\n  let $chars =\r\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n  let maxPos = $chars.length + 1;\r\n  let pwd = $chars.charAt(Math.floor(Math.random() * (maxPos - 10)));\r\n  for (let i = 0; i < len; i++) {\r\n    pwd += $chars.charAt(Math.floor(Math.random() * maxPos));\r\n  }\r\n  return pwd;\r\n};\r\n\r\nexport {\r\n  rndString\r\n};","let geoToCartesian = (lat = 0, lon = 0, radius = 1) => {\r\n  lat *= Math.PI / 180;\r\n  lon *= Math.PI / 180;\r\n  return new THREE.Vector3(-radius * Math.cos(lat) * Math.cos(lon),\r\n    radius * Math.sin(lat),\r\n    radius * Math.cos(lat) * Math.sin(lon)\r\n  );\r\n}\r\n\r\nexport {\r\n  geoToCartesian\r\n};","import { _extends as extend } from './extends';\r\nimport { rndInt } from './rndInt';\r\nimport { rndString } from './rndString';\r\nimport { geoToCartesian } from './geoToCartesian';\r\n\r\nlet Util = {\r\n  extend,\r\n  rndInt,\r\n  rndString,\r\n  geoToCartesian\r\n};\r\n\r\nexport {\r\n  Util\r\n};","/* eslint-disable */\r\nexport { DefaultSettings } from './core/settings/DefaultSettings.js';\r\nexport { App } from './core/App.js';\r\nexport { Bind } from './core/Bind.js';\r\nexport { FBOWorld } from './core/FBOWorld.js';\r\nexport { LoopManager } from './core/LoopManager.js';\r\nexport { Monitor } from './core/Monitor.js';\r\nexport { QRCode } from './core/QRCode.js';\r\nexport { Transitioner } from './core/Transitioner.js';\r\nexport { View } from './core/View.js';\r\nexport { VR } from './core/VR.js';\r\nexport { World } from './core/World.js';\r\n\r\nexport { NotFunctionError } from './error/NotFunctionError.js';\r\n\r\nexport { EventManager } from './events/EventManager.js';\r\nexport { Events } from './events/Events.js';\r\nexport { Signal } from './events/Signal.js';\r\n\r\nexport { GUI, Body, Txt, Div } from './gui/GUI.js';\r\n\r\nexport { LoaderFactory } from './loader/LoaderFactory.js';\r\n\r\nexport { EffectComposer } from './postprocessing/EffectComposer.js';\r\n\r\nexport { Pass } from './postprocessing/Pass.js';\r\nexport { DotScreenPass } from './postprocessing/DotScreenPass.js';\r\nexport { RenderPass } from './postprocessing/RenderPass.js';\r\nexport { ShaderPass } from './postprocessing/ShaderPass.js';\r\nexport { GhostImagePass } from './postprocessing/GhostImagePass.js';\r\nexport { GlitchPass } from './postprocessing/GlitchPass.js';\r\nexport { OutlinePass } from './postprocessing/OutlinePass.js';\r\n\r\nexport { CopyShader } from './postprocessing/shader/CopyShader.js';\r\nexport { DotScreenShader } from './postprocessing/shader/DotScreenShader.js';\r\nexport { FXAAShader } from './postprocessing/shader/FXAAShader.js';\r\nexport { GhostImageShader } from './postprocessing/shader/GhostImageShader.js';\r\nexport { GlitchShader } from './postprocessing/shader/GlitchShader.js';\r\n\r\nexport { Util } from './util/Util.js';\r\n\r\n//export * from './thirdparty/three.module.js';"],"names":["NotFunctionError","extend"],"mappings":"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IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;CACnB,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;CACnB,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;CACnB,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;CACnB,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;CACnB,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;CACnB,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;CACvB,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;CACvB,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC;CACxB,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC;CACxB,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC;CACxB,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC;CACxB,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC;CACxB,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC;CAC5B,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;CAC7B,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;CAC7B,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;CAC7B,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;CAC7B,IAAI,CAAC,CAAC,EAAE,EA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AAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;CACxB,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;CACb,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;CACb,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;CACb,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;CACb,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;CACb,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;CACb,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;CACxB,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;CACxB,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,CAAC;CACd,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;CACxB,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;CACxB,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;CACxB,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;CACf,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;CACxB,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;CACxB,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;CACxB,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;CACxB,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;CACxB,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;CACxB,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;CACxB,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,CAAC;CACd,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;CACxB,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;CACxB,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;CACxB,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,CAAC;CAC1B,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;CACxB,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;CACxB,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;CACxB,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;CACf,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;CACxB,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;CACxB,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;CACzB,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;CAC5B,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;CACxB,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;CACzB,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;CACzB,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,CAAC;CAC1B,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;CACxB,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;CACxB,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;CACd,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,CAAC;CAC1B,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;CACxB,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;CACzB,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;CACzB,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;CAC5B,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;CACzB,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;CACzB,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;CACzB,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;CAC5B,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;CACxB,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;CACzB,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;CACzB,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;CAC5B,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;CACzB,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;CACzB,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;CACzB,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;CAC5B,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;CACzB,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;CACzB,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;CAC1B,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;CAC5B,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;CACd,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;CACzB,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;CACzB,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;CAC5B,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;CACd,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;CACzB,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;CACd,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;CAC5B,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;CACzB,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;CAC1B,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;CAC1B,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;CAC5B,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;CACzB,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;CAC1B,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;CACzB,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;CAC5B,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;CACzB,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;CACzB,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;CAC1B,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;CAC7B,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;CACzB,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;CACzB,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;CACzB,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;CAC5B,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;CACzB,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;CACzB,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;CAC1B,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;CAC7B,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;CACzB,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;CACzB,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;CAC1B,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;CAC5B,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;CACzB,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;CACzB,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;CAC1B,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;CAC7B,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;CAC1B,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;CAC1B,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;CAC1B,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;CAC7B,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;CACzB,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;CACzB,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;CAC1B,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;CAChB,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;CAC1B,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;CAC1B,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;CAC1B,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;CAC7B,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;CAC1B,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;CAC1B,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;CAC1B,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;CAC7B,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;CAC1B,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;CACzB,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;CACzB,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;CAC7B,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;CAC1B,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;CAC1B,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;CAC1B,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;CAC7B,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;CACzB,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;CAC1B,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;CACzB,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;CAC7B,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;CAC1B,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;CAC1B,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;CAC1B,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;CAC7B,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;CAC1B,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;CAC1B,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAA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CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC;CACpB,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC;CACrB,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC;CACrB,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;CACtB,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;CACtB,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;CACtB,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;CACtB,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;CACtB,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;CACtB,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;CACtB,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;CACtB,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;CACtB,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;CACtB,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;CACtB,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;CACtB,EAAE,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;CACvB,EAAE,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;CACvB,EAAE,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;CACvB,EAAE,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;CACvB,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,CAAC;CACxB,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,CAAC;CACxB,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,CAAC;CACxB,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,CAAC;CACxB,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,CAAC;CACxB,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,CAAC;CACzB,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,CAAC;CACzB,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,CAAC;CACzB,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,CAAC;CACzB,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,CAAC;CACzB,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;CAC1B,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;CAC1B,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;CAC1B,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;CAC1B,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;CAC1B,CAAC,CAAC;;CAEF;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,SAAS,cAAc,CAAC,KAAK,EAAE,aAAa,EAAE;CAC9C,EAAE,IAAI,KAAK,GAAG,CAAC,CAAC;CAChB,EAAE,IAAI,MAAM,GAAG,cAAc,CAAC,KAAK,CAAC,CAAC;;CAErC,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,iBAAiB,CAAC,MAAM,EAAE,CAAC,IAAI,GAAG,EAAE,CAAC,EAAE,EAAE;CACjE,IAAI,IAAI,MAAM,GAAG,CAAC,CAAC;;CAEnB,IAAI,QAAQ,aAAa;CACzB,MAAM,KAAK,mBAAmB,CAAC,CAAC;CAChC,QAAQ,MAAM,GAAG,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;CACzC,QAAQ,MAAM;CACd,MAAM,KAAK,mBAAmB,CAAC,CAAC;CAChC,QAAQ,MAAM,GAAG,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;CACzC,QAAQ,MAAM;CACd,MAAM,KAAK,mBAAmB,CAAC,CAAC;CAChC,QAAQ,MAAM,GAAG,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;CACzC,QAAQ,MAAM;CACd,MAAM,KAAK,mBAAmB,CAAC,CAAC;CAChC,QAAQ,MAAM,GAAG,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;CACzC,QAAQ,MAAM;CACd,KAAK;;CAEL,IAAI,IAAI,MAAM,IAAI,MAAM,EAAE;CAC1B,MAAM,MAAM;CACZ,KAAK,MAAM;CACX,MAAM,KAAK,EAAE,CAAC;CACd,KAAK;CACL,GAAG;;CAEH,EAAE,IAAI,KAAK,GAAG,iBAAiB,CAAC,MAAM,EAAE;CACxC,IAAI,MAAM,IAAI,KAAK,CAAC,eAAe,CAAC,CAAC;CACrC,GAAG;;CAEH,EAAE,OAAO,KAAK,CAAC;CACf,CAAC;;CAED,SAAS,cAAc,CAAC,KAAK,EAAE;CAC/B,EAAE,IAAI,YAAY,GAAG,SAAS,CAAC,KAAK,CAAC;CACrC,KAAK,QAAQ,EAAE;CACf,KAAK,OAAO,CAAC,mBAAmB,EAAE,GAAG,CAAC,CAAC;CACvC,EAAE,OAAO,YAAY,CAAC,MAAM,IAAI,YAAY,CAAC,MAAM,IAAI,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;CACtE,CAAC;;AAED,KAAI,MAAM,GAAG,SAAS,GAAG,EAAE,YAAY,GAAG,mBAAmB,CAAC,CAAC,EAAE;CACjE,EAAE,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;CACnC,EAAE,IAAI,GAAG,EAAE;CACX,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;CACvB,GAAG;CACH,CAAC,CAAC;;CAEF;CACA;CACA;CACA;CACA;CACA,MAAM,CAAC,SAAS,CAAC,QAAQ,GAAG,SAAS,KAAK,EAAE;CAC5C,EAAE,IAAI,OAAO,GAAG,IAAI,WAAW,CAAC,cAAc,CAAC,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC;CACxE,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC;CACvB,EAAE,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;CACzB,EAAE,OAAO,CAAC,IAAI,EAAE,CAAC;CACjB,EAAE,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,WAAW,CAAC;CAClC,EAAE,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,OAAO,CAAC;CAC9B,CAAC,CAAC;;CAEF;CACA;CACA;CACA,MAAM,CAAC,YAAY,GAAG,mBAAmB,CAAC;;CChgC1C,MAAM,YAAY,CAAC;CACnB,EAAE,WAAW,CAAC,GAAG,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,GAAG,EAAE,EAAE;CACjD,IAAI,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,QAAQ,CAAC,OAAO,EAAE;CACvC,MAAM,YAAY,EAAE,IAAI;CACxB,MAAM,YAAY,EAAE,CAAC;CACrB,MAAM,OAAO,EAAE,EAAE;CACjB,MAAM,SAAS,EAAE,CAAC;CAClB,MAAM,aAAa,EAAE,IAAI;CACzB,MAAM,WAAW,EAAE,IAAI;CACvB,MAAM,WAAW,EAAE,GAAG;CACtB,KAAK,CAAC,CAAC;CACP,IAAI,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;CACnB,IAAI,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;CAC7B,IAAI,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC;CAC/B,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAI,KAAK,CAAC,cAAc,CAAC;CAC7C,MAAM,QAAQ,EAAE;CAChB,QAAQ,SAAS,EAAE;CACnB,UAAU,KAAK,EAAE,IAAI;CACrB,SAAS;CACT,QAAQ,SAAS,EAAE;CACnB,UAAU,KAAK,EAAE,IAAI;CACrB,SAAS;CACT,QAAQ,QAAQ,EAAE;CAClB,UAAU,KAAK,EAAE,GAAG;CACpB,SAAS;CACT,QAAQ,SAAS,EAAE;CACnB,UAAU,KAAK,EAAE,GAAG;CACpB,SAAS;CACT,QAAQ,UAAU,EAAE;CACpB,UAAU,KAAK,EAAE,CAAC;CAClB,SAAS;CACT,QAAQ,WAAW,EAAE;CACrB,UAAU,KAAK,EAAE,IAAI,CAAC,WAAW;CACjC,SAAS;CACT,OAAO;CACP,MAAM,YAAY,EAAE,CAAC;;;;SAIZ,CAAC;CACV,MAAM,cAAc,EAAE,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;SAyBd,CAAC;CACV,KAAK,CAAC,CAAC;CACP,IAAI,IAAI,SAAS,GAAG,GAAG,CAAC,aAAa,EAAE,GAAG,CAAC,CAAC;CAC5C,IAAI,IAAI,UAAU,GAAG,GAAG,CAAC,cAAc,EAAE,GAAG,CAAC,CAAC;CAC9C,IAAI,IAAI,CAAC,KAAK,GAAG,IAAI,KAAK,CAAC,GAAG,EAAE,IAAI,KAAK,CAAC,kBAAkB,CAAC,CAAC,SAAS;CACvE,MAAM,SAAS,EAAE,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;;CAEpD,IAAI,IAAI,QAAQ,GAAG,IAAI,KAAK,CAAC,mBAAmB,CAAC,SAAS,GAAG,CAAC;CAC9D,MAAM,UAAU,GAAG,CAAC,CAAC,CAAC;;CAEtB,IAAI,IAAI,IAAI,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;CACvD,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;;CAE/B,IAAI,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;CACxB,IAAI,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,KAAK,CAAC;;CAE5B,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC;CACrE,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC;;CAErE,IAAI,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;CAC5B,GAAG;;CAEH,EAAE,YAAY,CAAC,KAAK,EAAE;CACtB,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK,GAAG,KAAK,CAAC;CACnD,GAAG;;CAEH,EAAE,UAAU,CAAC,KAAK,EAAE;CACpB,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,UAAU,CAAC,KAAK,GAAG,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC;CAC5D,GAAG;;CAEH,EAAE,UAAU,CAAC,CAAC,EAAE;CAChB,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC;CAC5D,GAAG;;CAEH,EAAE,MAAM,GAAG;CACX,IAAI,IAAI,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;CACrD,IAAI,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;CAC/B,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,GAAG,KAAK,CAAC;CAClD,IAAI,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,IAAI,CAAC,CAAC,CAAC;CACjE,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;CACzB,IAAI,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM;CAC/E,OAAO,GAAG,EAAE,IAAI,CAAC,CAAC;CAClB,IAAI,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,IAAI,CAAC,CAAC,CAAC;CACjE,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;CACzB,IAAI,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM;CAC/E,OAAO,GAAG,EAAE,IAAI,CAAC,CAAC;CAClB,IAAI,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;CAC9E,GAAG;CACH,CAAC;;CChHD,MAAM,IAAI,CAAC;CACX,EAAE,WAAW,CAAC,KAAK,EAAE,MAAM,EAAE;CAC7B,IAAI,UAAU,GAAG,QAAQ;CACzB,IAAI,GAAG,GAAG,CAAC;CACX,IAAI,IAAI,GAAG,CAAC;CACZ,IAAI,KAAK,GAAG,CAAC;CACb,IAAI,MAAM,GAAG,CAAC;CACd,GAAG,EAAE;CACL,IAAI,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;CACvB,IAAI,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;CAC7B,IAAI,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;CAChD,IAAI,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,GAAG,CAAC,cAAc,EAAE,CAAC;CAClD,IAAI,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC;CACvC,IAAI,IAAI,CAAC,MAAM,GAAG,MAAM,IAAI,IAAI,KAAK,CAAC,iBAAiB,CAAC,EAAE,EAAE,IAAI,CAAC,UAAU;CAC3E,MAAM,IAAI,CAAC,WAAW,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;CACpC,IAAI,IAAI,CAAC,sBAAsB,GAAG;CAClC,MAAM,SAAS,EAAE,KAAK,CAAC,YAAY;CACnC,MAAM,SAAS,EAAE,KAAK,CAAC,YAAY;CACnC,MAAM,MAAM,EAAE,KAAK,CAAC,SAAS;CAC7B,MAAM,aAAa,EAAE,KAAK;CAC1B,KAAK,CAAC;CACN,IAAI,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;CACvB,IAAI,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;CACjC,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;CACrB,IAAI,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;CACnB,IAAI,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;CACvB,IAAI,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;;CAEzB,IAAI,IAAI,CAAC,GAAG,GAAG,IAAI,KAAK,CAAC,iBAAiB;CAC1C,MAAM,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK;CAClC,MAAM,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,sBAAsB;CACjE,KAAK,CAAC;;CAEN,IAAI,IAAI,CAAC,MAAM,EAAE,CAAC;CAClB,GAAG;;CAEH,EAAE,MAAM,GAAG;CACX,IAAI,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;CACvD,IAAI,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;CACtD,IAAI,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;CACzD,IAAI,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;CAC5D,IAAI,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;CACxD,IAAI,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;CACvD,IAAI,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;CACvC,IAAI,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;CACjD,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;CAClD,GAAG;;CAEH,EAAE,MAAM,GAAG;CACX,IAAI,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;CACrD,IAAI,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,cAAc,EAAE,CAAC;CACvD,IAAI,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;CACzD,IAAI,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;CAC5D,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,KAAK,mBAAmB,EAAE;CAClD,MAAM,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,KAAK,GAAG,MAAM,CAAC;CAC1C,MAAM,IAAI,CAAC,MAAM,CAAC,sBAAsB,EAAE,CAAC;CAC3C,KAAK,MAAM;CACX,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC;CACpC,MAAM,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,KAAK,GAAG,CAAC,CAAC;CACpC,MAAM,IAAI,CAAC,MAAM,CAAC,GAAG,GAAG,MAAM,GAAG,CAAC,CAAC;CACnC,MAAM,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC;CACvC,MAAM,IAAI,CAAC,MAAM,CAAC,sBAAsB,EAAE,CAAC;CAC3C,KAAK;CACL,GAAG;CACH,CAAC;;CCnED;CACA;CACA;CACA;CACA,MAAM,MAAM,CAAC;CACb,EAAE,WAAW,CAAC,IAAI,EAAE;CACpB,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;CACrB,IAAI,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;CAC1B,GAAG;;CAEH,EAAE,GAAG,CAAC,IAAI,EAAE;CACZ,IAAI,IAAI,OAAO,IAAI,KAAK,UAAU,EAAE;CACpC,MAAM,MAAM,IAAI,gBAAgB,EAAE,CAAC;CACnC,KAAK,MAAM;CACX,MAAM,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;CAClC,KAAK;CACL,GAAG;;CAEH,EAAE,MAAM,CAAC,IAAI,EAAE;CACf,IAAI,OAAO,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,SAAS,CAAC,EAAE;CAClD,MAAM,OAAO,CAAC,KAAK,IAAI,CAAC;CACxB,KAAK,CAAC,CAAC;CACP,GAAG;;CAEH,EAAE,GAAG,CAAC,KAAK,EAAE,SAAS,EAAE;CACxB,IAAI,IAAI,CAAC,WAAW,CAAC,OAAO;CAC5B,MAAM,CAAC,IAAI,KAAK;CAChB,QAAQ,IAAI,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;CAC/B,OAAO,CAAC,CAAC;CACT,GAAG;CACH,CAAC;;CC5BD;CACA;CACA;CACA;CACA,MAAM,MAAM,CAAC;CACb,EAAE,WAAW,CAAC,IAAI,EAAE;CACpB,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,OAAO,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO;CACtE,MAAM,WAAW,EAAE,SAAS,EAAE,YAAY,EAAE,UAAU,EAAE,WAAW;CACnE,MAAM,WAAW;CACjB,KAAK,CAAC;CACN,IAAI,KAAK,IAAI,SAAS,IAAI,IAAI,EAAE;CAChC,MAAM,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,MAAM,CAAC,SAAS,CAAC,CAAC;CAC9C,KAAK;CACL,GAAG;CACH,CAAC;;CChBD,MAAM,GAAG,SAAS,KAAK,CAAC,KAAK,CAAC;CAC9B,EAAE,WAAW,GAAG;CAChB,IAAI,KAAK,EAAE,CAAC;CACZ,IAAI,IAAI,CAAC,GAAG,GAAG;CACf,MAAM,eAAe,EAAE,eAAe;CACtC,MAAM,OAAO,EAAE,CAAC;CAChB,MAAM,KAAK,EAAE,CAAC;CACd,MAAM,MAAM,EAAE,CAAC;CACf,KAAK,CAAC;CACN,GAAG;CACH,CAAC;;CAED,MAAM,IAAI,SAAS,GAAG,CAAC;CACvB,EAAE,WAAW,CAAC,KAAK,EAAE,GAAG,EAAE;CAC1B,IAAI,KAAK,EAAE,CAAC;CACZ,IAAI,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;CACvB,IAAI,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;CACjC,IAAI,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,YAAY,CAAC,GAAG,IAAI,EAAE,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;CACnD,IAAI,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;CACnD,IAAI,IAAI,cAAc,GAAG,IAAI,KAAK,CAAC,cAAc,CAAC;CAClD,MAAM,GAAG,EAAE,IAAI,CAAC,MAAM;CACtB,MAAM,KAAK,EAAE,QAAQ;CACrB,KAAK,CAAC,CAAC;CACP,IAAI,IAAI,CAAC,OAAO,GAAG,IAAI,KAAK,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;CACpD,IAAI,IAAI,CAAC,MAAM,GAAG,IAAI,KAAK,CAAC,OAAO,EAAE,CAAC;CACtC,IAAI,IAAI,CAAC,MAAM,EAAE,CAAC;CAClB,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;CAC3B,GAAG;;CAEH,EAAE,YAAY,GAAG;CACjB,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;CAC9B,IAAI,CAAC,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;CACrC,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;CAChE,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,kBAAkB;CAC5E,MAAM,CAAC,CAAC,QAAQ,CAAC,CAAC;CAClB,MAAM,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;CAC3E,MAAM,IAAI,CAAC,kBAAkB;CAC7B,KAAK,CAAC;CACN,GAAG;;CAEH,EAAE,MAAM,GAAG;CACX,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;CACvC,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC;CACzC,IAAI,IAAI,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;CAC3C,IAAI,GAAG,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC;CAC7C,IAAI,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;CACxD,IAAI,IAAI,OAAO,GAAG,IAAI,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;CACvD,IAAI,OAAO,CAAC,eAAe,GAAG,KAAK,CAAC;CACpC,IAAI,OAAO,CAAC,SAAS,GAAG,KAAK,CAAC,YAAY,CAAC;CAC3C,IAAI,OAAO,CAAC,SAAS,GAAG,KAAK,CAAC,YAAY,CAAC;CAC3C,IAAI,IAAI,cAAc,GAAG,IAAI,KAAK,CAAC,cAAc,CAAC;CAClD,MAAM,GAAG,EAAE,OAAO;CAClB,MAAM,KAAK,EAAE,QAAQ;CACrB,KAAK,CAAC,CAAC;CACP,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;CACpC,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,cAAc,CAAC;CAC3C,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;CACvE,GAAG;CACH,CAAC;;CAED,MAAM,GAAG,SAAS,GAAG,CAAC;CACtB,EAAE,WAAW,CAAC,KAAK,EAAE,GAAG,EAAE;CAC1B,IAAI,KAAK,EAAE,CAAC;CACZ,IAAI,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;CACvB,IAAI,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,YAAY,CAAC,GAAG,IAAI,EAAE,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;CACnD,IAAI,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;CACnD,IAAI,IAAI,cAAc,GAAG,IAAI,KAAK,CAAC,cAAc,CAAC;CAClD,MAAM,GAAG,EAAE,MAAM;CACjB,MAAM,KAAK,EAAE,QAAQ;CACrB,KAAK,CAAC,CAAC;CACP,IAAI,IAAI,CAAC,OAAO,GAAG,IAAI,KAAK,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;CACpD,IAAI,IAAI,CAAC,MAAM,GAAG,IAAI,KAAK,CAAC,OAAO,EAAE,CAAC;CACtC,IAAI,IAAI,CAAC,MAAM,EAAE,CAAC;CAClB,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;CAC3B,GAAG;;CAEH,EAAE,MAAM,GAAG;CACX,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;CACvC,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC;CACzC,IAAI,IAAI,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;CAC3C,IAAI,GAAG,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC;CAC7C,IAAI,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;CACxD,IAAI,IAAI,OAAO,GAAG,IAAI,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;CACvD,IAAI,OAAO,CAAC,eAAe,GAAG,KAAK,CAAC;CACpC,IAAI,OAAO,CAAC,SAAS,GAAG,KAAK,CAAC,YAAY,CAAC;CAC3C,IAAI,OAAO,CAAC,SAAS,GAAG,KAAK,CAAC,YAAY,CAAC;CAC3C,IAAI,IAAI,cAAc,GAAG,IAAI,KAAK,CAAC,cAAc,CAAC;CAClD,MAAM,GAAG,EAAE,OAAO;CAClB,MAAM,KAAK,EAAE,QAAQ;CACrB,KAAK,CAAC,CAAC;CACP,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;CACpC,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,cAAc,CAAC;CAC3C,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;CACvE,GAAG;CACH,CAAC;;CAED,MAAM,GAAG,SAAS,KAAK,CAAC,IAAI,CAAC;CAC7B,EAAE,WAAW,CAAC,IAAI,EAAE,GAAG,EAAE;CACzB,IAAI,GAAG,GAAG,CAAC,CAAC,YAAY,CAAC,GAAG,IAAI,EAAE,EAAE;CACpC,MAAM,SAAS,EAAE,QAAQ;CACzB,MAAM,WAAW,EAAE,QAAQ;CAC3B,MAAM,QAAQ,EAAE,EAAE;CAClB,MAAM,UAAU,EAAE,QAAQ;CAC1B,MAAM,UAAU,EAAE,MAAM;CACxB,MAAM,KAAK,EAAE,SAAS;CACtB,MAAM,SAAS,EAAE,QAAQ;CACzB,MAAM,eAAe,EAAE,eAAe;CACtC,MAAM,OAAO,EAAE,CAAC;CAChB,MAAM,KAAK,EAAE,CAAC;CACd,MAAM,MAAM,EAAE,CAAC;CACf,MAAM,KAAK,EAAE;CACb,QAAQ,CAAC,EAAE,IAAI;CACf,QAAQ,CAAC,EAAE,IAAI;CACf,QAAQ,CAAC,EAAE,CAAC;CACZ,OAAO;CACP,KAAK,CAAC,CAAC;CACP,IAAI,IAAI,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;CAClD,IAAI,IAAI,QAAQ,GAAG,IAAI,KAAK,CAAC,iBAAiB,CAAC;CAC/C,MAAM,WAAW,EAAE,IAAI;CACvB,MAAM,WAAW,EAAE,KAAK;CACxB,MAAM,KAAK,EAAE,QAAQ;CACrB,KAAK,CAAC,CAAC;CACP,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,mBAAmB,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC,EAAE,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC;CACtE,MAAM,QAAQ,CAAC,CAAC;CAChB,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;CACrB,IAAI,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;CACzB,IAAI,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;CACnB,IAAI,IAAI,CAAC,MAAM,EAAE,CAAC;CAClB,GAAG;;CAEH,EAAE,MAAM,GAAG;CACX,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;CACvC,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC;CACzC,IAAI,IAAI,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;CAC3C,IAAI,GAAG,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC;CAC7C,IAAI,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;CACxD,IAAI,GAAG,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC;CACvC,IAAI,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,GAAG,GAAG,GAAG,IAAI;CAC3E,OAAO,GAAG,CAAC,UAAU;CACrB,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,GAAG,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC;CAC5D,IAAI,GAAG,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;CACnC,IAAI,IAAI,KAAK,GAAG,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC;CAC1C,OAAO,KAAK,CAAC;CACb,IAAI,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG;CAC9E,OAAO,QAAQ,GAAG,CAAC,CAAC,CAAC;CACrB,IAAI,IAAI,OAAO,GAAG,IAAI,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;CACvD,IAAI,OAAO,CAAC,eAAe,GAAG,KAAK,CAAC;CACpC,IAAI,OAAO,CAAC,SAAS,GAAG,KAAK,CAAC,YAAY,CAAC;CAC3C,IAAI,OAAO,CAAC,SAAS,GAAG,KAAK,CAAC,YAAY,CAAC;CAC3C,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,GAAG,OAAO,CAAC;CAChC,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;CACzE,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC;CAC7C,GAAG;CACH,CAAC;;CCzJD,MAAM,aAAa,CAAC;CACpB,EAAE,WAAW,GAAG;CAChB,IAAI,IAAI,CAAC,OAAO,GAAG,IAAI,KAAK,CAAC,cAAc,EAAE,CAAC;CAC9C,IAAI,IAAI,CAAC,QAAQ,GAAG;CACpB,MAAM,MAAM,EAAE,EAAE;CAChB,MAAM,SAAS,EAAE,EAAE;CACnB,MAAM,QAAQ,EAAE,EAAE;CAClB,MAAM,MAAM,EAAE,EAAE;CAChB,MAAM,MAAM,EAAE,EAAE;CAChB,MAAM,KAAK,EAAE,EAAE;CACf,MAAM,QAAQ,EAAE;CAChB,QAAQ,QAAQ,EAAE,EAAE;CACpB,QAAQ,MAAM,EAAE,EAAE;CAClB,QAAQ,MAAM,EAAE,EAAE;CAClB,QAAQ,KAAK,EAAE,EAAE;CACjB,QAAQ,MAAM,EAAE,EAAE;CAClB,OAAO;CACP,KAAK,CAAC;;CAEN,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,CAAC,GAAG,EAAE,WAAW,EAAE,UAAU,KAAK;CAC7D,MAAM,IAAI,IAAI,CAAC,OAAO,IAAI,OAAO,IAAI,CAAC,OAAO,KAAK,UAAU,EAAE;CAC9D,QAAQ,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,WAAW,EAAE,UAAU,CAAC,CAAC;CACnD,OAAO;CACP,KAAK,CAAC;;CAEN,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,MAAM;CAChC,MAAM,IAAI,IAAI,CAAC,MAAM,IAAI,OAAO,IAAI,CAAC,MAAM,KAAK,UAAU,EAAE;CAC5D,QAAQ,IAAI,CAAC,MAAM,EAAE,CAAC;CACtB,OAAO;CACP,KAAK,CAAC;;CAEN,IAAI,IAAI,CAAC,OAAO,CAAC,UAAU,GAAG,CAAC,GAAG,EAAE,WAAW,EAAE,UAAU,KAAK;CAChE,MAAM,IAAI,IAAI,CAAC,UAAU,IAAI,OAAO,IAAI,CAAC,UAAU,KAAK,UAAU,EAAE;CACpE,QAAQ,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,WAAW,EAAE,UAAU,CAAC,CAAC;CACtD,OAAO;CACP,KAAK,CAAC;;CAEN,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,CAAC,GAAG,KAAK;CACpC,MAAM,IAAI,IAAI,CAAC,OAAO,IAAI,OAAO,IAAI,CAAC,OAAO,KAAK,UAAU,EAAE;CAC9D,QAAQ,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;CAC1B,OAAO;CACP,KAAK,CAAC;;CAEN,IAAI,IAAI,CAAC,WAAW,GAAG,IAAI,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;CAC3D,IAAI,IAAI,CAAC,aAAa,GAAG,IAAI,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;CAC/D,IAAI,IAAI,CAAC,aAAa,GAAG,IAAI,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;CAC/D,GAAG;;CAEH,EAAE,SAAS,CAAC,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,OAAO,EAAE;CACxC,IAAI,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG;CACpC,MAAM,CAAC,IAAI,KAAK;CAChB,QAAQ,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;CACzC,QAAQ,IAAI,OAAO,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC;CACnC,OAAO,EAAE,SAAS,EAAE,CAAC,GAAG,KAAK;CAC7B,QAAQ,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;CAChD,QAAQ,IAAI,OAAO,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC;CAClC,OAAO;CACP,KAAK,CAAC;CACN,GAAG;;CAEH,EAAE,WAAW,CAAC,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,OAAO,EAAE;CAC1C,IAAI,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG;CACtC,MAAM,CAAC,IAAI,KAAK;CAChB,QAAQ,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;CAC3C,QAAQ,IAAI,OAAO,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC;CACnC,OAAO,EAAE,SAAS,EAAE,CAAC,GAAG,KAAK;CAC7B,QAAQ,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;CAClD,QAAQ,IAAI,OAAO,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC;CAClC,OAAO;CACP,KAAK,CAAC;CACN,GAAG;CACH,CAAC;;ACvED,KAAI,UAAU,GAAG;CACjB,EAAE,QAAQ,EAAE;CACZ,IAAI,UAAU,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE;CAC/B,IAAI,SAAS,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE;CAC7B,GAAG;;CAEH,EAAE,YAAY,EAAE,CAAC;;;;;KAKZ,CAAC;;CAEN,EAAE,cAAc,EAAE,CAAC;;;;;;;KAOd,CAAC;CACN,CAAC;;CCrBD,MAAM,IAAI,CAAC;CACX,EAAE,WAAW,CAAC,cAAc,EAAE,cAAc,GAAG,KAAK,EAAE;CACtD;CACA,IAAI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;CACxB;CACA,IAAI,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;CAC1B;CACA,IAAI,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;CACvB;CACA,IAAI,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;CACzC,IAAI,IAAI,cAAc,EAAE;CACxB,MAAM,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;CACnC,KAAK;CACL,GAAG;CACH,EAAE,OAAO,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE;CAC3B,EAAE,MAAM,CAAC,QAAQ,EAAE,WAAW,EAAE,UAAU,EAAE,KAAK,EAAE,UAAU,EAAE,EAAE;CACjE,CAAC;;CCdD,MAAM,UAAU,SAAS,IAAI,CAAC;CAC9B,EAAE,WAAW,CAAC,MAAM,EAAE,cAAc,EAAE,cAAc,GAAG,KAAK;CAC5D,IAAI,SAAS,GAAG,UAAU,EAAE;CAC5B,IAAI,KAAK,CAAC,cAAc,EAAE,cAAc,CAAC,CAAC;CAC1C,IAAI,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;;CAE/B,IAAI,IAAI,MAAM,YAAY,KAAK,CAAC,cAAc,EAAE;CAChD,MAAM,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;CACtC,MAAM,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC;CAC7B,KAAK,MAAM,IAAI,MAAM,EAAE;CACvB,MAAM,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;CACjE,MAAM,IAAI,CAAC,QAAQ,GAAG,IAAI,KAAK,CAAC,cAAc,CAAC;CAC/C,QAAQ,OAAO,EAAE,MAAM,CAAC,OAAO,IAAI,EAAE;CACrC,QAAQ,QAAQ,EAAE,IAAI,CAAC,QAAQ;CAC/B,QAAQ,YAAY,EAAE,MAAM,CAAC,YAAY;CACzC,QAAQ,cAAc,EAAE,MAAM,CAAC,cAAc;CAC7C,OAAO,CAAC,CAAC;CACT,KAAK;;CAEL,IAAI,IAAI,CAAC,MAAM,GAAG,IAAI,KAAK,CAAC,kBAAkB,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;CACnE,IAAI,IAAI,CAAC,KAAK,GAAG,IAAI,KAAK,CAAC,KAAK,EAAE,CAAC;CACnC,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,mBAAmB,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;CAC1E,IAAI,IAAI,CAAC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;CACpC,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;CAC9B,GAAG;;CAEH,EAAE,MAAM,CAAC,QAAQ,EAAE,WAAW,EAAE,UAAU,EAAE;CAC5C,IAAI,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE;CACvC,MAAM,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,KAAK,GAAG,UAAU,CAAC,OAAO,CAAC;CAC/D,KAAK;;CAEL,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;CACvC,IAAI,IAAI,IAAI,CAAC,cAAc,EAAE;CAC7B,MAAM,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;CAC/C,KAAK,MAAM;CACX,MAAM,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;CACxE,KAAK;CACL,GAAG;CACH,CAAC;;CCtCD,MAAM,UAAU,SAAS,IAAI,CAAC;CAC9B,EAAE,WAAW,CAAC,KAAK,EAAE,MAAM,EAAE,gBAAgB,EAAE,UAAU,EAAE,UAAU,GAAG,CAAC,EAAE;CAC3E,IAAI,KAAK,EAAE,CAAC;CACZ,IAAI,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;CACvB,IAAI,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;CACzB,IAAI,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;CAC7C,IAAI,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;CACjC,IAAI,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;CACjC,IAAI,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;CACtB,IAAI,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;CAC5B,IAAI,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;CAC3B,GAAG;;CAEH,EAAE,MAAM,CAAC,QAAQ,EAAE,WAAW,EAAE,UAAU,EAAE,KAAK,EAAE,UAAU,EAAE;CAC/D,IAAI,IAAI,YAAY,GAAG,QAAQ,CAAC,SAAS,CAAC;CAC1C,IAAI,QAAQ,CAAC,SAAS,GAAG,KAAK,CAAC;CAC/B,IAAI,IAAI,CAAC,KAAK,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;CACxD,IAAI,IAAI,aAAa,EAAE,aAAa,CAAC;CACrC,IAAI,IAAI,IAAI,CAAC,UAAU,EAAE;CACzB,MAAM,aAAa,GAAG,QAAQ,CAAC,aAAa,EAAE;CAC9C,SAAS,MAAM,EAAE,CAAC;CAClB,MAAM,aAAa,GAAG,QAAQ,CAAC,aAAa,EAAE,CAAC;CAC/C,MAAM,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;CAC/D,KAAK;CACL,IAAI,IAAI,IAAI,CAAC,UAAU,EAAE;CACzB,MAAM,QAAQ,CAAC,UAAU,EAAE,CAAC;CAC5B,KAAK;CACL,IAAI,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,cAAc,GAAG,SAAS;CAC5E,MAAM,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;CAC9B,IAAI,IAAI,IAAI,CAAC,UAAU,EAAE;CACzB,MAAM,QAAQ,CAAC,aAAa,CAAC,aAAa,EAAE,aAAa,CAAC,CAAC;CAC3D,KAAK;CACL,IAAI,IAAI,CAAC,KAAK,CAAC,gBAAgB,GAAG,SAAS,CAAC;CAC5C,IAAI,QAAQ,CAAC,SAAS,GAAG,YAAY,CAAC;CACtC,GAAG;CACH,CAAC;;CCjCD,MAAM,cAAc,CAAC;CACrB,EAAE,WAAW,CAAC,KAAK,EAAE,OAAO,GAAG,EAAE,EAAE,YAAY,EAAE;CACjD,IAAI,OAAO,GAAG,CAAC,CAAC,QAAQ,CAAC,OAAO,EAAE;CAClC,MAAM,QAAQ,EAAE,SAAS;CACzB,MAAM,MAAM,EAAE,SAAS;CACvB,MAAM,KAAK,EAAE,SAAS;CACtB,MAAM,gBAAgB,EAAE,SAAS;CACjC,MAAM,UAAU,EAAE,SAAS;CAC3B,MAAM,UAAU,EAAE,CAAC;CACnB,KAAK,CAAC,CAAC;CACP,IAAI,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,IAAI,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC;CAC3D,IAAI,IAAI,YAAY,KAAK,SAAS,EAAE;CACpC,MAAM,IAAI,UAAU,GAAG;CACvB,QAAQ,SAAS,EAAE,KAAK,CAAC,YAAY;CACrC,QAAQ,SAAS,EAAE,KAAK,CAAC,YAAY;CACrC,QAAQ,MAAM,EAAE,KAAK,CAAC,UAAU;CAChC,QAAQ,aAAa,EAAE,KAAK;CAC5B,OAAO,CAAC;CACR,MAAM,IAAI,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,oBAAoB,EAAE,CAAC;CACtD,MAAM,YAAY,GAAG,IAAI,KAAK,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM;CACxE,QAAQ,UAAU,CAAC,CAAC;CACpB,MAAM,YAAY,CAAC,OAAO,CAAC,IAAI,GAAG,oBAAoB,CAAC;CACvD,KAAK;;CAEL,IAAI,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;CACtC,IAAI,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC,KAAK,EAAE,CAAC;CAC9C,IAAI,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,GAAG,oBAAoB,CAAC;CAC3D,IAAI,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC;CAC1C,IAAI,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC;;CAEzC,IAAI,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;CACrB,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAI,UAAU,CAAC,UAAU,CAAC,CAAC;;CAE/C,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,UAAU,CAAC,OAAO,CAAC,KAAK,IAAI,KAAK,CAAC,KAAK;CAC5D,MAAM,OAAO,CAAC,KAAK,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;CACtC,GAAG;;CAEH,EAAE,WAAW,GAAG;CAChB,IAAI,IAAI,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC;CAC9B,IAAI,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC;CACvC,IAAI,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC;CAC3B,GAAG;;CAEH,EAAE,OAAO,CAAC,IAAI,EAAE;CAChB,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;CAC3B,IAAI,IAAI,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,oBAAoB,EAAE,CAAC;CACpD,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;CAC1C,GAAG;;CAEH,EAAE,UAAU,CAAC,IAAI,EAAE,KAAK,EAAE;CAC1B,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;CACvC,GAAG;;CAEH,EAAE,MAAM,CAAC,KAAK,EAAE;CAChB,IAAI,IAAI,UAAU,GAAG,KAAK,CAAC;CAC3B,IAAI,IAAI,IAAI,EAAE,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;CACzC,IAAI,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;CAC7B,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;CAC5B,MAAM,IAAI,IAAI,CAAC,OAAO,KAAK,KAAK,EAAE,SAAS;CAC3C,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,UAAU,EAAE,KAAK;CACzE,QAAQ,UAAU,CAAC,CAAC;;CAEpB,MAAM,IAAI,IAAI,CAAC,SAAS,EAAE;CAC1B,QAAQ,IAAI,UAAU,EAAE;CACxB,UAAU,IAAI,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;CAC9C,UAAU,OAAO,CAAC,WAAW,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,EAAE,UAAU,CAAC,CAAC;CAC/D,UAAU,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,UAAU;CAC/E,YAAY,KAAK,CAAC,CAAC;CACnB,UAAU,OAAO,CAAC,WAAW,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC,EAAE,UAAU,CAAC,CAAC;CAC5D,SAAS;CACT,QAAQ,IAAI,CAAC,WAAW,EAAE,CAAC;CAC3B,OAAO;;CAEP,MAAM,IAAI,KAAK,CAAC,QAAQ,KAAK,SAAS,EAAE;CACxC,QAAQ,IAAI,IAAI,YAAY,KAAK,CAAC,QAAQ,EAAE;CAC5C,UAAU,UAAU,GAAG,IAAI,CAAC;CAC5B,SAAS,MAAM,IAAI,IAAI,YAAY,KAAK,CAAC,aAAa,EAAE;CACxD,UAAU,UAAU,GAAG,KAAK,CAAC;CAC7B,SAAS;CACT,OAAO;CACP,KAAK;CACL,GAAG;;CAEH,EAAE,KAAK,CAAC,YAAY,EAAE;CACtB,IAAI,IAAI,YAAY,KAAK,SAAS,EAAE;CACpC,MAAM,IAAI,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,oBAAoB,EAAE,CAAC;CACtD,MAAM,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;CAChD,MAAM,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;CACpD,KAAK;CACL,IAAI,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC;CACjC,IAAI,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC;CACjC,IAAI,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;CACtC,IAAI,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC,KAAK,EAAE,CAAC;CAC9C,IAAI,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC;CAC1C,IAAI,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC;CACzC,GAAG;;CAEH,EAAE,OAAO,CAAC,KAAK,EAAE,MAAM,EAAE;CACzB,IAAI,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;CAC9C,IAAI,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;CAC9C,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;CACjD,MAAM,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;CAC5C,KAAK;CACL,GAAG;CACH,CAAC;;AC5GD,KAAI,eAAe,GAAG;CACtB,EAAE,QAAQ,EAAE;CACZ,IAAI,UAAU,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE;CAC/B,IAAI,OAAO,EAAE,EAAE,KAAK,EAAE,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE;CACnD,IAAI,QAAQ,EAAE,EAAE,KAAK,EAAE,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE;CACpD,IAAI,OAAO,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE;CAC5B,IAAI,OAAO,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE;CAC3B,GAAG;;CAEH,EAAE,YAAY,EAAE;CAChB,IAAI,mBAAmB;CACvB,IAAI,eAAe;CACnB,IAAI,WAAW;CACf,IAAI,2EAA2E;CAC/E,IAAI,GAAG;CACP,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;;CAEd,EAAE,cAAc,EAAE;CAClB,IAAI,sBAAsB;CAC1B,IAAI,sBAAsB;CAC1B,IAAI,sBAAsB;CAC1B,IAAI,qBAAqB;CACzB,IAAI,6BAA6B;CACjC,IAAI,mBAAmB;CACvB,IAAI,mBAAmB;CACvB,IAAI,2CAA2C;CAC/C,IAAI,kCAAkC;CACtC,IAAI,4EAA4E;CAChF,IAAI,mDAAmD;CACvD,IAAI,GAAG;;CAEP,IAAI,eAAe;CACnB,IAAI,0CAA0C;CAC9C,IAAI,wDAAwD;CAC5D,IAAI,2EAA2E;CAC/E,IAAI,GAAG;CACP,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;CACd,CAAC;;CClCD,MAAM,aAAa,SAAS,IAAI,CAAC;CACjC,EAAE,WAAW,CAAC,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,cAAc,EAAE,cAAc,GAAG,KAAK,EAAE;CAC5E,IAAI,KAAK,CAAC,cAAc,EAAE,cAAc,CAAC,CAAC;CAC1C,IAAI,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,aAAa,CAAC,KAAK,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;CACxE,IAAI,IAAI,MAAM,KAAK,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;CACzE,IAAI,IAAI,KAAK,KAAK,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,KAAK,GAAG,KAAK,CAAC;CAClE,IAAI,IAAI,KAAK,KAAK,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,KAAK,GAAG,KAAK,CAAC;;CAElE,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAI,KAAK,CAAC,cAAc,CAAC;CAC7C,MAAM,QAAQ,EAAE,IAAI,CAAC,QAAQ;CAC7B,MAAM,YAAY,EAAE,eAAe,CAAC,YAAY;CAChD,MAAM,cAAc,EAAE,eAAe,CAAC,cAAc;CACpD,KAAK,CAAC,CAAC;;CAEP,IAAI,IAAI,CAAC,MAAM,GAAG,IAAI,KAAK,CAAC,kBAAkB,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;CACnE,IAAI,IAAI,CAAC,KAAK,GAAG,IAAI,KAAK,CAAC,KAAK,EAAE,CAAC;CACnC,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,mBAAmB,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;CAC1E,IAAI,IAAI,CAAC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;CACpC,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;CAC9B,GAAG;;CAEH,EAAE,MAAM,CAAC,QAAQ,EAAE,WAAW,EAAE,UAAU,EAAE,KAAK,EAAE,UAAU,EAAE;CAC/D,IAAI,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,KAAK,GAAG,UAAU,CAAC,OAAO,CAAC;CACzD,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,KAAK,EAAE,UAAU,CAAC,MAAM,CAAC,CAAC;;CAE1E,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;;CAEvC,IAAI,IAAI,IAAI,CAAC,cAAc,EAAE;CAC7B,MAAM,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;CAC/C,KAAK,MAAM;CACX,MAAM,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;CACxE,KAAK;CACL,GAAG;CACH,CAAC;;ACpCD,KAAI,gBAAgB,GAAG;CACvB,EAAE,QAAQ,EAAE;CACZ,IAAI,MAAM,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE;CAC3B,IAAI,MAAM,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE;CAC3B,IAAI,MAAM,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE;CAC3B,GAAG;;CAEH,EAAE,YAAY,EAAE,CAAC;;;;;KAKZ,CAAC;;CAEN,EAAE,cAAc,EAAE,CAAC;;;;;;;;;;;;;;;;;;;;;;KAsBd,CAAC;CACN,CAAC;;CClCD,MAAM,cAAc,SAAS,IAAI,CAAC;CAClC,EAAE,WAAW,CAAC,IAAI,GAAG,IAAI,EAAE,cAAc,EAAE,cAAc,GAAG,KAAK,EAAE;CACnE,IAAI,KAAK,CAAC,cAAc,EAAE,cAAc,CAAC,CAAC;CAC1C,IAAI,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,aAAa,CAAC,KAAK,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;CACzE,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC;;CAEvC,IAAI,IAAI,CAAC,WAAW,GAAG,IAAI,KAAK,CAAC,iBAAiB,CAAC,MAAM,CAAC,UAAU,EAAE,MAAM,CAAC,WAAW,EAAE;CAC1F,MAAM,SAAS,EAAE,KAAK,CAAC,YAAY;CACnC,MAAM,SAAS,EAAE,KAAK,CAAC,aAAa;CACpC,MAAM,MAAM,EAAE,KAAK,CAAC,UAAU;CAC9B,KAAK,CAAC,CAAC;;CAEP,IAAI,IAAI,CAAC,UAAU,GAAG,IAAI,KAAK,CAAC,iBAAiB,CAAC,MAAM,CAAC,UAAU,EAAE,MAAM,CAAC,WAAW,EAAE;CACzF,MAAM,SAAS,EAAE,KAAK,CAAC,YAAY;CACnC,MAAM,SAAS,EAAE,KAAK,CAAC,aAAa;CACpC,MAAM,MAAM,EAAE,KAAK,CAAC,UAAU;CAC9B,KAAK,CAAC,CAAC;;CAEP,IAAI,IAAI,CAAC,cAAc,GAAG,IAAI,KAAK,CAAC,cAAc,CAAC;CACnD,MAAM,QAAQ,EAAE,IAAI,CAAC,QAAQ;CAC7B,MAAM,YAAY,EAAE,gBAAgB,CAAC,YAAY;CACjD,MAAM,cAAc,EAAE,gBAAgB,CAAC,cAAc;CACrD,KAAK,CAAC,CAAC;;CAEP,IAAI,IAAI,CAAC,SAAS,GAAG,IAAI,KAAK,CAAC,KAAK,EAAE,CAAC;CACvC,IAAI,IAAI,CAAC,WAAW,GAAG,IAAI,KAAK,CAAC,KAAK,EAAE,CAAC;;CAEzC,IAAI,IAAI,CAAC,MAAM,GAAG,IAAI,KAAK,CAAC,kBAAkB,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;CACnE,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;CAC/B,IAAI,IAAI,QAAQ,GAAG,IAAI,KAAK,CAAC,mBAAmB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;;CAEvD,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;CAClE,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;;CAEtC,IAAI,IAAI,QAAQ,GAAG,IAAI,KAAK,CAAC,iBAAiB,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC,CAAC;CAClF,IAAI,IAAI,UAAU,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;CACxD,IAAI,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;CACrC,GAAG;;CAEH,EAAE,MAAM,CAAC,QAAQ,EAAE,WAAW,EAAE,UAAU,EAAE,KAAK,EAAE,UAAU,EAAE;CAC/D,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC;CAC1D,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,KAAK,GAAG,UAAU,CAAC,OAAO,CAAC;CACrD,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC;;CAEjD,IAAI,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;CACnE,IAAI,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;CACpE,IAAI,IAAI,IAAI,CAAC,cAAc,EAAE;CAC7B,MAAM,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;CACrD,KAAK,MAAM;CACX,MAAM,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,MAAM,EAAE,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;CAC9E,KAAK;CACL,GAAG;CACH,CAAC;;ACvDD,KAAI,YAAY,GAAG;CACnB,EAAE,QAAQ,EAAE;CACZ,IAAI,UAAU,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE;CAC/B,IAAI,OAAO,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE;CAC5B,IAAI,KAAK,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE;CACvB,IAAI,QAAQ,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE;CAC7B,IAAI,OAAO,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE;CAC5B,IAAI,MAAM,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE;CAC3B,IAAI,QAAQ,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE;CAC7B,IAAI,QAAQ,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE;CAC7B,IAAI,cAAc,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE;CAClC,IAAI,cAAc,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE;CAClC,IAAI,OAAO,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE;CAC5B,GAAG;;CAEH,EAAE,YAAY,EAAE;CAChB,IAAI,mBAAmB;CACvB,IAAI,eAAe;CACnB,IAAI,WAAW;CACf,IAAI,2EAA2E;CAC/E,IAAI,GAAG;CACP,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;;CAEd,EAAE,cAAc,EAAE;CAClB,IAAI,kBAAkB;CACtB,IAAI,6BAA6B;CACjC,IAAI,0BAA0B;;CAE9B,IAAI,uBAAuB;CAC3B,IAAI,sBAAsB;CAC1B,IAAI,qBAAqB;CACzB,IAAI,uBAAuB;CAC3B,IAAI,uBAAuB;CAC3B,IAAI,6BAA6B;CACjC,IAAI,6BAA6B;CACjC,IAAI,sBAAsB;;CAE1B,IAAI,mBAAmB;;CAEvB,IAAI,sBAAsB;CAC1B,IAAI,mEAAmE;CACvE,IAAI,GAAG;;CAEP,IAAI,eAAe;CACnB,IAAI,aAAa;CACjB,IAAI,eAAe;CACnB,IAAI,yCAAyC;CAC7C,IAAI,yCAAyC;CAC7C;CACA,IAAI,+CAA+C;CACnD,IAAI,6DAA6D;CACjE,IAAI,gBAAgB;CACpB,IAAI,kCAAkC;CACtC,IAAI,GAAG;CACP,IAAI,QAAQ;CACZ,IAAI,qBAAqB;CACzB,IAAI,GAAG;CACP,IAAI,GAAG;CACP,IAAI,6DAA6D;CACjE,IAAI,gBAAgB;CACpB,IAAI,mBAAmB;CACvB,IAAI,GAAG;CACP,IAAI,QAAQ;CACZ,IAAI,kCAAkC;CACtC,IAAI,GAAG;CACP,IAAI,GAAG;CACP,IAAI,iCAAiC;CACrC,IAAI,iCAAiC;CACrC;CACA,IAAI,uDAAuD;CAC3D,IAAI,4CAA4C;CAChD,IAAI,oCAAoC;CACxC,IAAI,4CAA4C;CAChD,IAAI,gDAAgD;CACpD;CACA,IAAI,wEAAwE;CAC5E,IAAI,oCAAoC;CACxC,IAAI,GAAG;CACP,IAAI,QAAQ;CACZ,IAAI,yCAAyC;CAC7C,IAAI,GAAG;CACP,IAAI,GAAG;CACP,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;CACd,CAAC;;CChFD,MAAM,UAAU,SAAS,IAAI,CAAC;CAC9B,EAAE,WAAW,CAAC,IAAI,GAAG,EAAE,EAAE,MAAM,GAAG,KAAK,EAAE,cAAc,EAAE,cAAc,GAAG,KAAK,EAAE;CACjF,IAAI,KAAK,CAAC,cAAc,EAAE,cAAc,CAAC,CAAC;CAC1C,IAAI,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,aAAa,CAAC,KAAK,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;CACrE,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;;CAEhE,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAI,KAAK,CAAC,cAAc,CAAC;CAC7C,MAAM,QAAQ,EAAE,IAAI,CAAC,QAAQ;CAC7B,MAAM,YAAY,EAAE,YAAY,CAAC,YAAY;CAC7C,MAAM,cAAc,EAAE,YAAY,CAAC,cAAc;CACjD,KAAK,CAAC,CAAC;;CAEP,IAAI,IAAI,CAAC,MAAM,GAAG,IAAI,KAAK,CAAC,kBAAkB,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;CACnE,IAAI,IAAI,CAAC,KAAK,GAAG,IAAI,KAAK,CAAC,KAAK,EAAE,CAAC;;CAEnC,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,mBAAmB,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;CAC1E,IAAI,IAAI,CAAC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;CACpC,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;CAE9B,IAAI,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;CACxB,IAAI,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;CAClB,IAAI,IAAI,CAAC,eAAe,EAAE,CAAC;CAC3B,GAAG;;CAEH,EAAE,MAAM,CAAC,QAAQ,EAAE,WAAW,EAAE,UAAU,EAAE,KAAK,EAAE,UAAU,EAAE;CAC/D,IAAI,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,KAAK,GAAG,UAAU,CAAC,OAAO,CAAC;CACzD,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;CAChD,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC;;CAEnC,IAAI,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,EAAE;CAC5D,MAAM,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC;CACzD,MAAM,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;CAC7E,MAAM,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;CAClE,MAAM,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;CAClE,MAAM,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;CACvE,MAAM,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;CACvE,MAAM,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;CACpB,MAAM,IAAI,CAAC,eAAe,EAAE,CAAC;CAC7B,KAAK,MAAM,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE;CACxD,MAAM,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC;CACzD,MAAM,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;CAC7E,MAAM,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;CACvE,MAAM,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;CACvE,MAAM,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;CACtE,MAAM,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;CACtE,KAAK,MAAM,IAAI,IAAI,CAAC,MAAM,IAAI,KAAK,EAAE;CACrC,MAAM,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC;CACrC,KAAK;;CAEL,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC;CAChB,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;;CAEvC,IAAI,IAAI,IAAI,CAAC,cAAc,EAAE;CAC7B,MAAM,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;CAC/C,KAAK,MAAM;CACX,MAAM,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;CACxE,KAAK;CACL,GAAG;;CAEH,EAAE,eAAe,GAAG;CACpB,IAAI,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;CAC9C,GAAG;;CAEH,EAAE,iBAAiB,CAAC,IAAI,EAAE;CAC1B,IAAI,IAAI,OAAO,GAAG,IAAI,YAAY,CAAC,IAAI,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC;CACpD,IAAI,IAAI,MAAM,GAAG,IAAI,GAAG,IAAI,CAAC;;CAE7B,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;CACrC,MAAM,IAAI,GAAG,GAAG,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;CAC3C,MAAM,OAAO,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC;CAC/B,MAAM,OAAO,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC;CAC/B,MAAM,OAAO,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC;CAC/B,KAAK;;CAEL,IAAI,IAAI,OAAO,GAAG,IAAI,KAAK,CAAC,WAAW,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI;CAC3D,MAAM,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,SAAS,CAAC,CAAC;CACxC,IAAI,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC;CAC/B,IAAI,OAAO,OAAO,CAAC;CACnB,GAAG;CACH,CAAC;;CC/ED,MAAM,WAAW,SAAS,IAAI,CAAC;CAC/B,EAAE,WAAW,CAAC,UAAU,EAAE,KAAK,EAAE,eAAe,GAAG,EAAE,EAAE,cAAc,EAAE;CACvE,IAAI,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;CAC5B,IAAI,IAAI,CAAC,cAAc,GAAG,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;CACtD,IAAI,IAAI,CAAC,cAAc,GAAG,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;CACtD,IAAI,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,KAAK,CAAC;CACnC,IAAI,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC,MAAM,CAAC;CACrC,IAAI,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;CAC3C,IAAI,IAAI,CAAC,gBAAgB,GAAG,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;CACrD,IAAI,IAAI,CAAC,eAAe,GAAG,IAAI,KAAK,CAAC,KAAK,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;CAC5D,IAAI,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;CACxB,IAAI,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;CACnC,IAAI,IAAI,CAAC,aAAa,GAAG,GAAG,CAAC;CAC7B,IAAI,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC;CAC5B,IAAI,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;CAC7B,IAAI,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;;CAEzB,IAAI,IAAI,CAAC,UAAU,GAAG,CAAC,UAAU,KAAK,SAAS,IAAI,IAAI,KAAK,CAAC,OAAO;CACpE,MAAM,UAAU,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC,GAAG,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;;CAEhE,IAAI,IAAI,IAAI,GAAG;CACf,MAAM,SAAS,EAAE,KAAK,CAAC,YAAY;CACnC,MAAM,SAAS,EAAE,KAAK,CAAC,YAAY;CACnC,MAAM,MAAM,EAAE,KAAK,CAAC,UAAU;CAC9B,KAAK,CAAC;;CAEN,IAAI,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,CAAC;CACpE,IAAI,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,CAAC;;CAEpE,IAAI,IAAI,CAAC,kBAAkB,GAAG,IAAI,KAAK,CAAC,iBAAiB,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,CAAC,CAAC;CAC/E,IAAI,IAAI,CAAC,kBAAkB,CAAC,IAAI,GAAG,KAAK,CAAC,UAAU,CAAC;CACpD,IAAI,IAAI,CAAC,sBAAsB,GAAG,IAAI,KAAK,CAAC,iBAAiB;CAC7D,KAAK,IAAI,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;CACjD,IAAI,IAAI,CAAC,sBAAsB,CAAC,OAAO,CAAC,IAAI,GAAG,kBAAkB,CAAC;CAClE,IAAI,IAAI,CAAC,sBAAsB,CAAC,OAAO,CAAC,eAAe,GAAG,KAAK,CAAC;;CAEhE,IAAI,IAAI,CAAC,aAAa,GAAG,IAAI,KAAK,CAAC,iBAAiB,EAAE,CAAC;CACvD,IAAI,IAAI,CAAC,aAAa,CAAC,IAAI,GAAG,KAAK,CAAC,UAAU,CAAC;CAC/C,IAAI,IAAI,CAAC,aAAa,CAAC,YAAY,GAAG,KAAK,CAAC,gBAAgB,CAAC;CAC7D,IAAI,IAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,KAAK,CAAC,UAAU,CAAC;;CAEnD,IAAI,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,sBAAsB,EAAE,CAAC;CAC7D,IAAI,IAAI,CAAC,mBAAmB,CAAC,IAAI,GAAG,KAAK,CAAC,UAAU,CAAC;CACrD,IAAI,IAAI,CAAC,mBAAmB,CAAC,cAAc,GAAG,mBAAmB,CAAC,IAAI,CAAC,mBAAmB;CAC1F,OAAO,cAAc,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;;CAE1C,IAAI,IAAI,CAAC,uBAAuB,GAAG,IAAI,KAAK,CAAC,iBAAiB,CAAC,IAAI,CAAC,UAAU;CAC9E,OAAO,CAAC;CACR,MAAM,IAAI,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;CAC/B,IAAI,IAAI,CAAC,uBAAuB,CAAC,OAAO,CAAC,IAAI,GAAG,mBAAmB,CAAC;CACpE,IAAI,IAAI,CAAC,uBAAuB,CAAC,OAAO,CAAC,eAAe,GAAG,KAAK,CAAC;;CAEjE,IAAI,IAAI,CAAC,gCAAgC,GAAG,IAAI,KAAK,CAAC,iBAAiB,CAAC,IAAI;CAC5E,MAAM,IAAI,EAAE,IAAI,CAAC,CAAC;CAClB,IAAI,IAAI,CAAC,gCAAgC,CAAC,OAAO,CAAC,IAAI;CACtD,MAAM,6BAA6B,CAAC;CACpC,IAAI,IAAI,CAAC,gCAAgC,CAAC,OAAO,CAAC,eAAe,GAAG,KAAK,CAAC;;CAE1E,IAAI,IAAI,CAAC,uBAAuB,GAAG,IAAI,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,IAAI;CACzE,MAAM,IAAI,CAAC,CAAC;CACZ,IAAI,IAAI,CAAC,uBAAuB,CAAC,OAAO,CAAC,IAAI,GAAG,mBAAmB,CAAC;CACpE,IAAI,IAAI,CAAC,uBAAuB,CAAC,OAAO,CAAC,eAAe,GAAG,KAAK,CAAC;CACjE,IAAI,IAAI,CAAC,uBAAuB,GAAG,IAAI,KAAK,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK;CACzE,MAAM,IAAI;CACV,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;CACtC,IAAI,IAAI,CAAC,uBAAuB,CAAC,OAAO,CAAC,IAAI,GAAG,mBAAmB,CAAC;CACpE,IAAI,IAAI,CAAC,uBAAuB,CAAC,OAAO,CAAC,eAAe,GAAG,KAAK,CAAC;;CAEjE,IAAI,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,wBAAwB,EAAE,CAAC;CACjE,IAAI,IAAI,CAAC,uBAAuB,GAAG,IAAI,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,IAAI;CACzE,MAAM,IAAI,CAAC,CAAC;CACZ,IAAI,IAAI,CAAC,uBAAuB,CAAC,OAAO,CAAC,IAAI,GAAG,mBAAmB,CAAC;CACpE,IAAI,IAAI,CAAC,uBAAuB,CAAC,OAAO,CAAC,eAAe,GAAG,KAAK,CAAC;CACjE,IAAI,IAAI,CAAC,uBAAuB,GAAG,IAAI,KAAK,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK;CACzE,MAAM,IAAI;CACV,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;CACtC,IAAI,IAAI,CAAC,uBAAuB,CAAC,OAAO,CAAC,IAAI,GAAG,mBAAmB,CAAC;CACpE,IAAI,IAAI,CAAC,uBAAuB,CAAC,OAAO,CAAC,eAAe,GAAG,KAAK,CAAC;;CAEjE,IAAI,IAAI,kBAAkB,GAAG,CAAC,CAAC;CAC/B,IAAI,IAAI,aAAa,GAAG,CAAC,CAAC;;CAE1B,IAAI,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,wBAAwB;CAC/D,MAAM,kBAAkB,CAAC,CAAC;CAC1B,IAAI,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,KAAK,GAAG,IAAI,KAAK,CAAC,OAAO;CAC7E,MAAM,IAAI,EAAE,IAAI,CAAC,CAAC;CAClB,IAAI,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC;CACnE,IAAI,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,wBAAwB,CAAC,aAAa,CAAC,CAAC;CAC/E,IAAI,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,KAAK,GAAG,IAAI,KAAK,CAAC,OAAO;CAC7E,MAAM,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;CAClD,IAAI,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,KAAK;CAC9D,MAAM,aAAa,CAAC;;CAEpB;CACA,IAAI,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC;;CAErD,IAAI,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC,aAAa,CAAC,KAAK,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;CACvE,IAAI,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,KAAK,GAAG,GAAG,CAAC;;CAE7C,IAAI,IAAI,CAAC,YAAY,GAAG,IAAI,KAAK,CAAC,cAAc,CAAC;CACjD,MAAM,QAAQ,EAAE,IAAI,CAAC,YAAY;CACjC,MAAM,YAAY,EAAE,UAAU,CAAC,YAAY;CAC3C,MAAM,cAAc,EAAE,UAAU,CAAC,cAAc;CAC/C,MAAM,QAAQ,EAAE,KAAK,CAAC,UAAU;CAChC,MAAM,SAAS,EAAE,KAAK;CACtB,MAAM,UAAU,EAAE,KAAK;CACvB,MAAM,WAAW,EAAE,IAAI;CACvB,KAAK,CAAC,CAAC;;CAEP,IAAI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;CACxB,IAAI,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;;CAE3B,IAAI,IAAI,CAAC,aAAa,GAAG,IAAI,KAAK,CAAC,KAAK,EAAE,CAAC;CAC3C,IAAI,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;;CAE3B,IAAI,IAAI,CAAC,MAAM,GAAG,IAAI,KAAK,CAAC,kBAAkB,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;CACnE,IAAI,IAAI,CAAC,KAAK,GAAG,IAAI,KAAK,CAAC,KAAK,EAAE,CAAC;;CAEnC,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,mBAAmB,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;CAC1E,IAAI,IAAI,CAAC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;CACpC,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;CAE9B,IAAI,IAAI,CAAC,eAAe,GAAG,IAAI,KAAK,CAAC,KAAK,EAAE,CAAC;CAC7C,IAAI,IAAI,CAAC,eAAe,GAAG,IAAI,KAAK,CAAC,KAAK,EAAE,CAAC;CAC7C,IAAI,IAAI,CAAC,aAAa,GAAG,IAAI,KAAK,CAAC,OAAO,EAAE,CAAC;;CAE7C,IAAI,SAAS,mBAAmB,CAAC,MAAM,EAAE,MAAM,EAAE;CACjD,MAAM,IAAI,IAAI,GAAG,MAAM,CAAC,mBAAmB,GAAG,aAAa,GAAG,cAAc,CAAC;CAC7E,MAAM,OAAO,MAAM,CAAC,OAAO,CAAC,kBAAkB,EAAE,IAAI,GAAG,cAAc,CAAC,CAAC;CACvE,KAAK;;CAEL,IAAI,IAAI,cAAc,EAAE;CACxB,MAAM,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;CACnC,KAAK;CACL,GAAG;;CAEH,EAAE,OAAO,GAAG;CACZ,IAAI,IAAI,CAAC,sBAAsB,CAAC,OAAO,EAAE,CAAC;CAC1C,IAAI,IAAI,CAAC,uBAAuB,CAAC,OAAO,EAAE,CAAC;CAC3C,IAAI,IAAI,CAAC,gCAAgC,CAAC,OAAO,EAAE,CAAC;CACpD,IAAI,IAAI,CAAC,uBAAuB,CAAC,OAAO,EAAE,CAAC;CAC3C,IAAI,IAAI,CAAC,uBAAuB,CAAC,OAAO,EAAE,CAAC;CAC3C,IAAI,IAAI,CAAC,uBAAuB,CAAC,OAAO,EAAE,CAAC;CAC3C,IAAI,IAAI,CAAC,uBAAuB,CAAC,OAAO,EAAE,CAAC;CAC3C,GAAG;;CAEH,EAAE,OAAO,CAAC,KAAK,EAAE,MAAM,EAAE;CACzB,IAAI,IAAI,CAAC,sBAAsB,CAAC,OAAO,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;;CAEvD,IAAI,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,CAAC;CACxD,IAAI,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,CAAC;CACzD,IAAI,IAAI,CAAC,gCAAgC,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;CAC9D,IAAI,IAAI,CAAC,uBAAuB,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;CACrD,IAAI,IAAI,CAAC,uBAAuB,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;CACrD,IAAI,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,KAAK,GAAG,IAAI,KAAK,CAAC,OAAO;CAC7E,MAAM,IAAI,EAAE,IAAI,CAAC,CAAC;;CAElB,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC;CAChC,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC;;CAEhC,IAAI,IAAI,CAAC,uBAAuB,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;CACrD,IAAI,IAAI,CAAC,uBAAuB,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;;CAErD,IAAI,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,KAAK,GAAG,IAAI,KAAK,CAAC,OAAO;CAC7E,MAAM,IAAI,EAAE,IAAI,CAAC,CAAC;CAClB,GAAG;;CAEH,EAAE,iCAAiC,CAAC,QAAQ,EAAE;CAC9C,IAAI,SAAS,4BAA4B,CAAC,MAAM,EAAE;CAClD,MAAM,IAAI,MAAM,YAAY,KAAK,CAAC,IAAI,EAAE,MAAM,CAAC,OAAO,GAAG,QAAQ,CAAC;CAClE,KAAK;;CAEL,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;CAC1D,MAAM,IAAI,cAAc,GAAG,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;CACnD,MAAM,cAAc,CAAC,QAAQ,CAAC,4BAA4B,CAAC,CAAC;CAC5D,KAAK;CACL,GAAG;;CAEH,EAAE,oCAAoC,CAAC,QAAQ,EAAE;CACjD,IAAI,IAAI,cAAc,GAAG,EAAE,CAAC;;CAE5B,IAAI,SAAS,4BAA4B,CAAC,MAAM,EAAE;CAClD,MAAM,IAAI,MAAM,YAAY,KAAK,CAAC,IAAI,EAAE,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;CACpE,KAAK;;CAEL,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;CAC1D,MAAM,IAAI,cAAc,GAAG,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;CACnD,MAAM,cAAc,CAAC,QAAQ,CAAC,4BAA4B,CAAC,CAAC;CAC5D,KAAK;;CAEL,IAAI,SAAS,wBAAwB,CAAC,MAAM,EAAE;CAC9C,MAAM,IAAI,MAAM,YAAY,KAAK,CAAC,IAAI,IAAI,MAAM,YAAY,KAAK,CAAC,IAAI;CACtE,QAAQ,MAAM,YAAY,KAAK,CAAC,MAAM,EAAE;;CAExC,QAAQ,IAAI,MAAM,GAAG,KAAK,CAAC;;CAE3B,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;CACxD,UAAU,IAAI,gBAAgB,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;CACtD,UAAU,IAAI,gBAAgB,KAAK,MAAM,CAAC,EAAE,EAAE;CAC9C,YAAY,MAAM,GAAG,IAAI,CAAC;CAC1B,YAAY,MAAM;CAClB,WAAW;CACX,SAAS;;CAET,QAAQ,IAAI,CAAC,MAAM,EAAE;CACrB,UAAU,IAAI,UAAU,GAAG,MAAM,CAAC,OAAO,CAAC;CAC1C,UAAU,IAAI,CAAC,QAAQ,IAAI,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,OAAO,GAAG,QAAQ,CAAC;CACtE,UAAU,MAAM,CAAC,QAAQ,GAAG,UAAU,CAAC;CACvC,SAAS;CACT,OAAO;CACP,KAAK;;CAEL,IAAI,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,wBAAwB,CAAC,CAAC;CACxD,GAAG;;CAEH,EAAE,mBAAmB,GAAG;CACxB,IAAI,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;CAC7C,MAAM,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;CACxB,MAAM,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;CACxB,MAAM,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;CAC1B,IAAI,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,CAAC;CACpE,IAAI,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,CAAC;CACtE,GAAG;;CAEH,EAAE,MAAM,CAAC,QAAQ,EAAE,WAAW,EAAE,UAAU,EAAE,KAAK,EAAE,UAAU,EAAE;;CAE/D,IAAI,IAAI,IAAI,CAAC,eAAe,CAAC,MAAM,KAAK,CAAC,EAAE,OAAO;;CAElD,IAAI,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,CAAC,CAAC;CACtD,IAAI,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC,aAAa,EAAE,CAAC;CAClD,IAAI,IAAI,YAAY,GAAG,QAAQ,CAAC,SAAS,CAAC;;CAE1C,IAAI,QAAQ,CAAC,SAAS,GAAG,KAAK,CAAC;;CAE/B,IAAI,IAAI,UAAU,EAAE,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;;CAE5E,IAAI,QAAQ,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;;CAExC;CACA,IAAI,IAAI,CAAC,iCAAiC,CAAC,KAAK,CAAC,CAAC;;CAElD,IAAI,IAAI,iBAAiB,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC;CACxD,IAAI,IAAI,CAAC,WAAW,CAAC,UAAU,GAAG,IAAI,CAAC;;CAEvC;CACA,IAAI,IAAI,CAAC,WAAW,CAAC,gBAAgB,GAAG,IAAI,CAAC,aAAa,CAAC;CAC3D,IAAI,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,uBAAuB;CACrF,MAAM,IAAI,CAAC,CAAC;;CAEZ;CACA,IAAI,IAAI,CAAC,iCAAiC,CAAC,IAAI,CAAC,CAAC;;CAEjD;CACA,IAAI,IAAI,CAAC,mBAAmB,EAAE,CAAC;;CAE/B;CACA,IAAI,IAAI,CAAC,oCAAoC,CAAC,KAAK,CAAC,CAAC;CACrD,IAAI,IAAI,CAAC,WAAW,CAAC,gBAAgB,GAAG,IAAI,CAAC,mBAAmB,CAAC;CACjE,IAAI,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC,KAAK,GAAG,IAAI,KAAK,CAAC,OAAO;CAChF,MAAM,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;CACrD,IAAI,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,uBAAuB;CAC1F,OAAO,OAAO,CAAC;CACf,IAAI,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC;CAClF,IAAI,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,sBAAsB;CACpF,MAAM,IAAI,CAAC,CAAC;CACZ,IAAI,IAAI,CAAC,WAAW,CAAC,gBAAgB,GAAG,IAAI,CAAC;CAC7C,IAAI,IAAI,CAAC,oCAAoC,CAAC,IAAI,CAAC,CAAC;;CAEpD,IAAI,IAAI,CAAC,WAAW,CAAC,UAAU,GAAG,iBAAiB,CAAC;;CAEpD;CACA,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC;CAC3C,IAAI,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,sBAAsB,CAAC,OAAO,CAAC;CAC9E,IAAI,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,gCAAgC;CAClF,MAAM,IAAI,CAAC,CAAC;;CAEZ,IAAI,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;CACrD,IAAI,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;;CAEpD,IAAI,IAAI,IAAI,CAAC,WAAW,GAAG,CAAC,EAAE;CAC9B,MAAM,IAAI,MAAM,GAAG,CAAC,CAAC,GAAG,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,GAAG,EAAE,GAAG,IAAI;CACrE,QAAQ,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;CAC7C,MAAM,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;CAClD,MAAM,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;;CAElD,KAAK;;CAEL;CACA,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,qBAAqB,CAAC;CACpD,IAAI,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,gCAAgC;CACpG,OAAO,OAAO,CAAC;CACf,IAAI,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,KAAK,GAAG,IAAI,KAAK,CAAC,OAAO;CAC5E,MAAM,IAAI,CAAC,gCAAgC,CAAC,KAAK,EAAE,IAAI,CAAC,gCAAgC;CACxF,OAAO,MAAM,CAAC,CAAC;CACf,IAAI,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC;CACzF,IAAI,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC;CACxF,IAAI,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,uBAAuB;CACzE,MAAM,IAAI,CAAC,CAAC;;CAEZ;CACA,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,sBAAsB,CAAC;CACrD,IAAI,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,uBAAuB;CAC7F,OAAO,OAAO,CAAC;CACf,IAAI,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC;CAClF,IAAI,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC;CACpF,IAAI,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,uBAAuB;CACzE,MAAM,IAAI,CAAC,CAAC;CACZ,IAAI,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,uBAAuB;CAC7F,OAAO,OAAO,CAAC;CACf,IAAI,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,KAAK,GAAG,IAAI;CAClE,OAAO,cAAc,CAAC;CACtB,IAAI,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,uBAAuB;CACzE,MAAM,IAAI,CAAC,CAAC;;CAEZ;CACA,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,sBAAsB,CAAC;CACrD,IAAI,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,uBAAuB,CAAC,OAAO,CAAC;CACtG,IAAI,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC;CAClF,IAAI,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,uBAAuB,EAAE,IAAI,CAAC,CAAC;CACjF,IAAI,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,uBAAuB,CAAC,OAAO,CAAC;CACtG,IAAI,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC;CAClF,IAAI,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,uBAAuB,EAAE,IAAI,CAAC,CAAC;;CAEjF;CACA,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC;CAC9C,IAAI,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,sBAAsB;CACpF,OAAO,OAAO,CAAC;CACf,IAAI,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,uBAAuB;CACtF,OAAO,OAAO,CAAC;CACf,IAAI,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,uBAAuB;CACtF,OAAO,OAAO,CAAC;CACf,IAAI,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC;CAChF,IAAI,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC;CAC5E,IAAI,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC;CACpE,IAAI,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,mBAAmB,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,iBAAiB,CAAC;;CAEtF,IAAI,IAAI,UAAU,EAAE,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;;CAE3E,IAAI,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;;CAEhE,IAAI,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;CACnE,IAAI,QAAQ,CAAC,SAAS,GAAG,YAAY,CAAC;;CAEtC,GAAG;;CAEH,EAAE,sBAAsB,GAAG;CAC3B,IAAI,OAAO,IAAI,KAAK,CAAC,cAAc,CAAC;CACpC,MAAM,QAAQ,EAAE;CAChB,QAAQ,cAAc,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE;CACvC,QAAQ,eAAe,EAAE,EAAE,KAAK,EAAE,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE;CAC/D,QAAQ,eAAe,EAAE,EAAE,KAAK,EAAE,IAAI,KAAK,CAAC,OAAO,EAAE,EAAE;CACvD,OAAO;;CAEP,MAAM,YAAY,EAAE;CACpB,QAAQ,4BAA4B;CACpC,QAAQ,yBAAyB;CACjC,QAAQ,6BAA6B;;CAErC,QAAQ,eAAe;;CAEvB,QAAQ,uDAAuD;CAC/D,QAAQ,4DAA4D;CACpE,QAAQ,gDAAgD;CACxD,QAAQ,4EAA4E;;CAEpF,QAAQ,GAAG;CACX,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC;;CAElB,MAAM,cAAc,EAAE;CACtB,QAAQ,oBAAoB;CAC5B,QAAQ,yBAAyB;CACjC,QAAQ,4BAA4B;CACpC,QAAQ,iCAAiC;CACzC,QAAQ,6BAA6B;;CAErC,QAAQ,eAAe;;CAEvB,QAAQ,gFAAgF;CACxF,QAAQ,8EAA8E;CACtF,QAAQ,wDAAwD;CAChE,QAAQ,iDAAiD;;CAEzD,QAAQ,GAAG;CACX,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC;CAClB,KAAK,CAAC,CAAC;CACP,GAAG;;CAEH,EAAE,wBAAwB,GAAG;CAC7B,IAAI,OAAO,IAAI,KAAK,CAAC,cAAc,CAAC;CACpC,MAAM,QAAQ,EAAE;CAChB,QAAQ,aAAa,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE;CACtC,QAAQ,SAAS,EAAE,EAAE,KAAK,EAAE,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE;CACzD,QAAQ,kBAAkB,EAAE,EAAE,KAAK,EAAE,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE;CACvE,QAAQ,iBAAiB,EAAE,EAAE,KAAK,EAAE,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE;CACtE,OAAO;;CAEP,MAAM,YAAY,EAAE,CAAC;;;;KAIhB,CAAC;;CAEN,MAAM,cAAc,EAAE,CAAC;;;;;;;;;;;;;;;;;;;;;KAqBlB,CAAC;CACN,KAAK,CAAC,CAAC;CACP,GAAG;;CAEH,EAAE,wBAAwB,CAAC,SAAS,EAAE;CACtC,IAAI,OAAO,IAAI,KAAK,CAAC,cAAc,CAAC;CACpC,MAAM,OAAO,EAAE;CACf,QAAQ,YAAY,EAAE,SAAS;CAC/B,OAAO;;CAEP,MAAM,QAAQ,EAAE;CAChB,QAAQ,cAAc,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE;CACvC,QAAQ,SAAS,EAAE,EAAE,KAAK,EAAE,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE;CACzD,QAAQ,WAAW,EAAE,EAAE,KAAK,EAAE,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE;CAC3D,QAAQ,cAAc,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE;CACtC,OAAO;;CAEP,MAAM,YAAY,EAAE,CAAC;;;;KAIhB,CAAC;;CAEN,MAAM,cAAc,EAAE,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;KAyBlB,CAAC;CACN,KAAK,CAAC,CAAC;CACP,GAAG;;CAEH,EAAE,kBAAkB,GAAG;CACvB,IAAI,OAAO,IAAI,KAAK,CAAC,cAAc,CAAC;CACpC,MAAM,QAAQ,EAAE;CAChB,QAAQ,aAAa,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE;CACtC,QAAQ,cAAc,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE;CACvC,QAAQ,cAAc,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE;CACvC,QAAQ,gBAAgB,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE;CACzC,QAAQ,cAAc,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE;CACtC,QAAQ,UAAU,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE;CAClC,QAAQ,mBAAmB,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE;CAC3C,OAAO;;CAEP,MAAM,YAAY,EAAE,CAAC;;;;KAIhB,CAAC;;CAEN,MAAM,cAAc,EAAE,CAAC;;;;;;;;;;;;;;;;;;;;KAoBlB,CAAC;CACN,MAAM,QAAQ,EAAE,KAAK,CAAC,gBAAgB;CACtC,MAAM,SAAS,EAAE,KAAK;CACtB,MAAM,UAAU,EAAE,KAAK;CACvB,MAAM,WAAW,EAAE,IAAI;CACvB,KAAK,CAAC,CAAC;CACP,GAAG;CACH,CAAC;;CC3gBD;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;;AAEA,KAAI,UAAU,GAAG;;CAEjB,CAAC,QAAQ,EAAE;;CAEX,EAAE,UAAU,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE;CAC/B,EAAE,YAAY,EAAE,EAAE,KAAK,EAAE,IAAI,KAAK,CAAC,OAAO,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,GAAG,GAAG,EAAE,EAAE;;CAEjE,EAAE;;CAEF,CAAC,YAAY,EAAE;;CAEf,EAAE,mBAAmB;;CAErB,EAAE,eAAe;;CAEjB,GAAG,WAAW;CACd,GAAG,2EAA2E;;CAE9E,EAAE,GAAG;;CAEL,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE;;CAEf,CAAC,cAAc,EAAE;CACjB,QAAQ,wBAAwB;CAChC,QAAQ,EAAE;CACV,QAAQ,6BAA6B;CACrC,QAAQ,EAAE;CACV,QAAQ,0BAA0B;CAClC,QAAQ,EAAE;CACV,QAAQ,mBAAmB;CAC3B,QAAQ,EAAE;CACV,QAAQ,4FAA4F;CACpG,QAAQ,EAAE;CACV,QAAQ,sFAAsF;CAC9F,QAAQ,oEAAoE;CAC5E,QAAQ,uBAAuB;CAC/B,QAAQ,sCAAsC;CAC9C,QAAQ,8CAA8C;CACtD,QAAQ,IAAI;CACZ,QAAQ,sEAAsE;CAC9E,QAAQ,IAAI;CACZ,QAAQ,uEAAuE;CAC/E,QAAQ,uEAAuE;CAC/E,QAAQ,aAAa;CACrB,QAAQ,sEAAsE;CAC9E,QAAQ,qEAAqE;CAC7E,QAAQ,yEAAyE;CACjF,QAAQ,2EAA2E;CACnF,QAAQ,4EAA4E;CACpF,QAAQ,mEAAmE;CAC3E,QAAQ,uEAAuE;CAC/E,QAAQ,qEAAqE;CAC7E,QAAQ,IAAI;CACZ,QAAQ,yEAAyE;CACjF,QAAQ,sEAAsE;CAC9E,QAAQ,uEAAuE;CAC/E,QAAQ,sEAAsE;CAC9E,QAAQ,0EAA0E;CAClF,QAAQ,wEAAwE;CAChF,QAAQ,uEAAuE;CAC/E,QAAQ,wEAAwE;CAChF,QAAQ,iEAAiE;CACzE,QAAQ,0EAA0E;CAClF,QAAQ,yEAAyE;CACjF,QAAQ,IAAI;CACZ,QAAQ,sFAAsF;CAC9F,QAAQ,EAAE;CACV,QAAQ,mBAAmB;CAC3B,QAAQ,yBAAyB;CACjC,QAAQ,gCAAgC;CACxC,QAAQ,EAAE;CACV,QAAQ,8BAA8B;CACtC,QAAQ,EAAE;CACV,QAAQ,gFAAgF;CACxF,QAAQ,yBAAyB;CACjC,QAAQ,QAAQ;CAChB,QAAQ,iDAAiD;CACzD,QAAQ,2DAA2D;CACnE,QAAQ,wEAAwE;CAChF,QAAQ,QAAQ;CAChB,QAAQ,+BAA+B;CACvC,QAAQ,QAAQ;CAChB,QAAQ,gFAAgF;CACxF,QAAQ,uBAAuB;CAC/B,QAAQ,6BAA6B;CACrC,QAAQ,QAAQ;CAChB,QAAQ,gFAAgF;CACxF,QAAQ,uBAAuB;CAC/B,QAAQ,6BAA6B;CACrC,QAAQ,QAAQ;CAChB,QAAQ,gFAAgF;CACxF,QAAQ,qBAAqB;CAC7B,QAAQ,2BAA2B;CACnC,QAAQ,QAAQ;CAChB,QAAQ,gFAAgF;CACxF,QAAQ,qBAAqB;CAC7B,QAAQ,2BAA2B;CACnC,QAAQ,QAAQ;CAChB,QAAQ,gFAAgF;CACxF,QAAQ,qBAAqB;CAC7B,QAAQ,2BAA2B;CACnC,QAAQ,QAAQ;CAChB,QAAQ,gFAAgF;CACxF,QAAQ,4BAA4B;CACpC,QAAQ,QAAQ;CAChB,QAAQ,0CAA0C;CAClD,QAAQ,qEAAqE;CAC7E,QAAQ,kEAAkE;CAC1E,QAAQ,6DAA6D;CACrE,QAAQ,QAAQ;CAChB,QAAQ,4EAA4E;CACpF,QAAQ,0EAA0E;CAClF,QAAQ,QAAQ;CAChB,QAAQ,mDAAmD;CAC3D,QAAQ,uCAAuC;CAC/C,QAAQ,uCAAuC;CAC/C,QAAQ,gEAAgE;CACxE,QAAQ,+CAA+C;CACvD,QAAQ,QAAQ;CAChB,QAAQ,gBAAgB;CACxB,QAAQ,iBAAiB;CACzB,QAAQ,QAAQ;CAChB,QAAQ,kCAAkC;CAC1C,QAAQ,QAAQ;CAChB,QAAQ,gFAAgF;CACxF,QAAQ,yBAAyB;CACjC,QAAQ,QAAQ;CAChB,QAAQ,8CAA8C;CACtD,QAAQ,4DAA4D;CACpE,QAAQ,2EAA2E;CACnF,QAAQ,wEAAwE;CAChF,QAAQ,gCAAgC;CACxC,QAAQ,QAAQ;CAChB,QAAQ,gBAAgB;CACxB,QAAQ,iBAAiB;CACzB,QAAQ,QAAQ;CAChB,QAAQ,+BAA+B;CACvC,QAAQ,QAAQ;CAChB,QAAQ,gFAAgF;CACxF,QAAQ,sBAAsB;CAC9B,QAAQ,QAAQ;CAChB,QAAQ,4CAA4C;CACpD,QAAQ,4DAA4D;CACpE,QAAQ,QAAQ;CAChB,QAAQ,uDAAuD;CAC/D,QAAQ,wEAAwE;CAChF,QAAQ,kEAAkE;CAC1E,QAAQ,QAAQ;CAChB,QAAQ,4BAA4B;CACpC,QAAQ,QAAQ;CAChB,QAAQ,gFAAgF;CACxF,QAAQ,gCAAgC;CACxC,QAAQ,QAAQ;CAChB,QAAQ,gCAAgC;CACxC,QAAQ,QAAQ;CAChB,QAAQ,+CAA+C;CACvD,QAAQ,0CAA0C;CAClD,QAAQ,QAAQ;CAChB,QAAQ,+BAA+B;CACvC,QAAQ,0CAA0C;CAClD,QAAQ,YAAY;CACpB,QAAQ,8BAA8B;CACtC,QAAQ,0CAA0C;CAClD,QAAQ,YAAY;CACpB,QAAQ,+BAA+B;CACvC,QAAQ,0CAA0C;CAClD,QAAQ,YAAY;CACpB,QAAQ,oCAAoC;CAC5C,QAAQ,0CAA0C;CAClD,QAAQ,YAAY;CACpB,QAAQ,QAAQ;CAChB,QAAQ,gFAAgF;CACxF,QAAQ,4BAA4B;CACpC,QAAQ,QAAQ;CAChB,QAAQ,mDAAmD;CAC3D,QAAQ,2DAA2D;CACnE,QAAQ,QAAQ;CAChB,QAAQ,4BAA4B;CACpC,QAAQ,sCAAsC;CAC9C,QAAQ,YAAY;CACpB,QAAQ,+BAA+B;CACvC,QAAQ,sCAAsC;CAC9C,QAAQ,YAAY;CACpB,QAAQ,8BAA8B;CACtC,QAAQ,sCAAsC;CAC9C,QAAQ,YAAY;CACpB,QAAQ,gCAAgC;CACxC,QAAQ,sCAAsC;CAC9C,QAAQ,YAAY;CACpB,QAAQ,QAAQ;CAChB,QAAQ,EAAE;CACV,QAAQ,EAAE;CACV,QAAQ,gFAAgF;CACxF,QAAQ,qDAAqD;CAC7D,QAAQ,gFAAgF;CACxF,QAAQ,oEAAoE;CAC5E,QAAQ,gFAAgF;CACxF,QAAQ,6BAA6B;CACrC,QAAQ,QAAQ;CAChB,QAAQ,mCAAmC;CAC3C,QAAQ,sEAAsE;CAC9E,QAAQ,sDAAsD;CAC9D,QAAQ,kEAAkE;CAC1E,QAAQ,QAAQ;CAChB,QAAQ,gBAAgB;CACxB,QAAQ,gFAAgF;CACxF,QAAQ,0EAA0E;CAClF,QAAQ,gFAAgF;CACxF,QAAQ,6CAA6C;CACrD,QAAQ,QAAQ;CAChB,QAAQ,cAAc;CACtB,QAAQ,gFAAgF;CACxF,QAAQ,6EAA6E;CACrF,QAAQ,6DAA6D;CACrE,QAAQ,+DAA+D;CACvE,QAAQ,iEAAiE;CACzE,QAAQ,4DAA4D;CACpE,QAAQ,QAAQ;CAChB,QAAQ,oCAAoC;CAC5C,QAAQ,QAAQ;CAChB,QAAQ,EAAE;CACV,QAAQ,EAAE;CACV,QAAQ,gFAAgF;CACxF,QAAQ,EAAE;CACV,QAAQ,mDAAmD;CAC3D,QAAQ,EAAE;CACV,QAAQ,gFAAgF;CACxF,QAAQ,EAAE;CACV,QAAQ,gFAAgF;CACxF,QAAQ,2DAA2D;CACnE,QAAQ,gFAAgF;CACxF,QAAQ,iCAAiC;CACzC,QAAQ,+BAA+B;CACvC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,kCAAkC;CAC1C,QAAQ,QAAQ;CAChB,QAAQ,gFAAgF;CACxF,QAAQ,iCAAiC;CACzC,QAAQ,+BAA+B;CACvC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,kCAAkC;CAC1C,QAAQ,QAAQ;CAChB,QAAQ,gFAAgF;CACxF,QAAQ,iCAAiC;CACzC,QAAQ,+BAA+B;CACvC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,kCAAkC;CAC1C,QAAQ,QAAQ;CAChB,QAAQ,gFAAgF;CACxF,QAAQ,iCAAiC;CACzC,QAAQ,+BAA+B;CACvC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,kCAAkC;CAC1C,QAAQ,QAAQ;CAChB,QAAQ,gFAAgF;CACxF,QAAQ,iCAAiC;CACzC,QAAQ,+BAA+B;CACvC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,kCAAkC;CAC1C,QAAQ,QAAQ;CAChB,QAAQ,gFAAgF;CACxF,QAAQ,iCAAiC;CACzC,QAAQ,+BAA+B;CACvC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,kCAAkC;CAC1C,QAAQ,QAAQ;CAChB,QAAQ,EAAE;CACV,QAAQ,gFAAgF;CACxF,QAAQ,wDAAwD;CAChE,QAAQ,gFAAgF;CACxF,QAAQ,iCAAiC;CACzC,QAAQ,+BAA+B;CACvC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,QAAQ;CAChB,QAAQ,gFAAgF;CACxF,QAAQ,iCAAiC;CACzC,QAAQ,+BAA+B;CACvC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,QAAQ;CAChB,QAAQ,gFAAgF;CACxF,QAAQ,iCAAiC;CACzC,QAAQ,+BAA+B;CACvC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,QAAQ;CAChB,QAAQ,gFAAgF;CACxF,QAAQ,iCAAiC;CACzC,QAAQ,+BAA+B;CACvC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,QAAQ;CAChB,QAAQ,gFAAgF;CACxF,QAAQ,iCAAiC;CACzC,QAAQ,+BAA+B;CACvC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,QAAQ;CAChB,QAAQ,gFAAgF;CACxF,QAAQ,iCAAiC;CACzC,QAAQ,+BAA+B;CACvC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,QAAQ;CAChB,QAAQ,gFAAgF;CACxF,QAAQ,iCAAiC;CACzC,QAAQ,+BAA+B;CACvC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,QAAQ;CAChB,QAAQ,gFAAgF;CACxF,QAAQ,iCAAiC;CACzC,QAAQ,gCAAgC;CACxC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,QAAQ;CAChB,QAAQ,gFAAgF;CACxF,QAAQ,iCAAiC;CACzC,QAAQ,gCAAgC;CACxC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,kCAAkC;CAC1C,QAAQ,QAAQ;CAChB,QAAQ,gFAAgF;CACxF,QAAQ,iCAAiC;CACzC,QAAQ,gCAAgC;CACxC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,kCAAkC;CAC1C,QAAQ,kCAAkC;CAC1C,QAAQ,QAAQ;CAChB,QAAQ,EAAE;CACV,QAAQ,gFAAgF;CACxF,QAAQ,qDAAqD;CAC7D,QAAQ,gFAAgF;CACxF,QAAQ,iCAAiC;CACzC,QAAQ,gCAAgC;CACxC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,kCAAkC;CAC1C,QAAQ,kCAAkC;CAC1C,QAAQ,QAAQ;CAChB,QAAQ,EAAE;CACV,QAAQ,EAAE;CACV,QAAQ,EAAE;CACV,QAAQ,gFAAgF;CACxF,QAAQ,EAAE;CACV,QAAQ,6CAA6C;CACrD,QAAQ,EAAE;CACV,QAAQ,gFAAgF;CACxF,QAAQ,0EAA0E;CAClF,QAAQ,2BAA2B;CACnC,QAAQ,iCAAiC;CACzC,QAAQ,6BAA6B;CACrC,QAAQ,6BAA6B;CACrC,QAAQ,6BAA6B;CACrC,QAAQ,6BAA6B;CACrC,QAAQ,4BAA4B;CACpC,QAAQ,4BAA4B;CACpC,QAAQ,4BAA4B;CACpC,QAAQ,4BAA4B;CACpC,QAAQ,4BAA4B;CACpC,QAAQ,2CAA2C;CACnD,QAAQ,+BAA+B;CACvC,QAAQ,OAAO;CACf,QAAQ,2BAA2B;CACnC,QAAQ,kCAAkC;CAC1C,QAAQ,6BAA6B;CACrC,QAAQ,+BAA+B;CACvC,QAAQ,+BAA+B;CACvC,QAAQ,+BAA+B;CACvC,QAAQ,2BAA2B;CACnC,QAAQ,6BAA6B;CACrC,QAAQ,6BAA6B;CACrC,QAAQ,6BAA6B;CACrC,QAAQ,oCAAoC;CAC5C,QAAQ,QAAQ;CAChB,QAAQ,gFAAgF;CACxF,QAAQ,0BAA0B;CAClC,QAAQ,iDAAiD;CACzD,QAAQ,iEAAiE;CACzE,QAAQ,QAAQ;CAChB,QAAQ,gFAAgF;CACxF,QAAQ,0BAA0B;CAClC,QAAQ,kBAAkB;CAC1B,QAAQ,sBAAsB;CAC9B,QAAQ,sBAAsB;CAC9B,QAAQ,gDAAgD;CACxD,QAAQ,4DAA4D;CACpE,QAAQ,sDAAsD;CAC9D,QAAQ,uCAAuC;CAC/C,QAAQ,yEAAyE;CACjF,QAAQ,WAAW;CACnB,QAAQ,0EAA0E;CAClF,QAAQ,YAAY;CACpB,QAAQ,mCAAmC;CAC3C,QAAQ,uDAAuD;CAC/D,QAAQ,4DAA4D;CACpE,QAAQ,2EAA2E;CACnF,QAAQ,4DAA4D;CACpE,QAAQ,2EAA2E;CACnF,QAAQ,YAAY;CACpB,QAAQ,QAAQ;CAChB,QAAQ,gFAAgF;CACxF,QAAQ,0BAA0B;CAClC,QAAQ,4CAA4C;CACpD,QAAQ,oDAAoD;CAC5D,QAAQ,mEAAmE;CAC3E,QAAQ,mCAAmC;CAC3C,QAAQ,uDAAuD;CAC/D,QAAQ,4DAA4D;CACpE,QAAQ,2EAA2E;CACnF,QAAQ,4DAA4D;CACpE,QAAQ,2EAA2E;CACnF,QAAQ,YAAY;CACpB,QAAQ,QAAQ;CAChB,QAAQ,gFAAgF;CACxF,QAAQ,wBAAwB;CAChC,QAAQ,6BAA6B;CACrC,QAAQ,+BAA+B;CACvC,QAAQ,+DAA+D;CACvE,QAAQ,2EAA2E;CACnF,QAAQ,QAAQ;CAChB,QAAQ,gFAAgF;CACxF,QAAQ,wBAAwB;CAChC,QAAQ,2BAA2B;CACnC,QAAQ,2DAA2D;CACnE,QAAQ,gEAAgE;CACxE,QAAQ,yEAAyE;CACjF,QAAQ,QAAQ;CAChB,QAAQ,gFAAgF;CACxF,QAAQ,wBAAwB;CAChC,QAAQ,2BAA2B;CACnC,QAAQ,2DAA2D;CACnE,QAAQ,gEAAgE;CACxE,QAAQ,yEAAyE;CACjF,QAAQ,8DAA8D;CACtE,QAAQ,uEAAuE;CAC/E,QAAQ,8DAA8D;CACtE,QAAQ,uEAAuE;CAC/E,QAAQ,QAAQ;CAChB,QAAQ,EAAE;CACV,QAAQ,EAAE;CACV,QAAQ,gFAAgF;CACxF,QAAQ,0DAA0D;CAClE,QAAQ,gFAAgF;CACxF,QAAQ,+BAA+B;CACvC,QAAQ,4DAA4D;CACpE,QAAQ,OAAO;CACf,QAAQ,4DAA4D;CACpE,QAAQ,QAAQ;CAChB,QAAQ,EAAE;CACV,QAAQ,EAAE;CACV,QAAQ,EAAE;CACV,QAAQ,EAAE;CACV,QAAQ,gFAAgF;CACxF,QAAQ,EAAE;CACV,QAAQ,iDAAiD;CACzD,QAAQ,EAAE;CACV,QAAQ,gFAAgF;CACxF,QAAQ,oBAAoB;CAC5B,QAAQ,gFAAgF;CACxF,QAAQ,6BAA6B;CACrC,QAAQ,QAAQ;CAChB,QAAQ,mFAAmF;CAC3F,QAAQ,+BAA+B;CACvC,QAAQ,qBAAqB;CAC7B,QAAQ,QAAQ;CAChB,QAAQ,qEAAqE;CAC7E,QAAQ,mFAAmF;CAC3F,QAAQ,oCAAoC;CAC5C,QAAQ,qCAAqC;CAC7C,QAAQ,mCAAmC;CAC3C,QAAQ,QAAQ;CAChB,QAAQ,6BAA6B;CACrC,QAAQ,2DAA2D;CACnE,QAAQ,qCAAqC;CAC7C,QAAQ,gEAAgE;CACxE,QAAQ,kBAAkB;CAC1B,QAAQ,QAAQ;CAChB,QAAQ,gEAAgE;CACxE,QAAQ,6EAA6E;CACrF,QAAQ,8DAA8D;CACtE,QAAQ,2DAA2D;CACnE,QAAQ,6CAA6C;CACrD,QAAQ,QAAQ;CAChB,QAAQ,gEAAgE;CACxE,QAAQ,6EAA6E;CACrF,QAAQ,8DAA8D;CACtE,QAAQ,2DAA2D;CACnE,QAAQ,6CAA6C;CACrD,QAAQ,QAAQ;CAChB,QAAQ,mCAAmC;CAC3C,QAAQ,8CAA8C;CACtD,QAAQ,uCAAuC;CAC/C,QAAQ,wCAAwC;CAChD,QAAQ,qCAAqC;CAC7C,QAAQ,QAAQ;CAChB,QAAQ,mCAAmC;CAC3C,QAAQ,8CAA8C;CACtD,QAAQ,mEAAmE;CAC3E,QAAQ,kCAAkC;CAC1C,QAAQ,+BAA+B;CACvC,QAAQ,+BAA+B;CACvC,QAAQ,uCAAuC;CAC/C,QAAQ,wCAAwC;CAChD,QAAQ,uCAAuC;CAC/C,QAAQ,wCAAwC;CAChD,QAAQ,wCAAwC;CAChD,QAAQ,QAAQ;CAChB,QAAQ,mCAAmC;CAC3C,QAAQ,iDAAiD;CACzD,QAAQ,8CAA8C;CACtD,QAAQ,yCAAyC;CACjD,QAAQ,0CAA0C;CAClD,QAAQ,yCAAyC;CACjD,QAAQ,0CAA0C;CAClD,QAAQ,yCAAyC;CACjD,QAAQ,QAAQ;CAChB,QAAQ,mCAAmC;CAC3C,QAAQ,8DAA8D;CACtE,QAAQ,8CAA8C;CACtD,QAAQ,yCAAyC;CACjD,QAAQ,0CAA0C;CAClD,QAAQ,yCAAyC;CACjD,QAAQ,0CAA0C;CAClD,QAAQ,4CAA4C;CACpD,QAAQ,QAAQ;CAChB,QAAQ,mCAAmC;CAC3C,QAAQ,wDAAwD;CAChE,QAAQ,+CAA+C;CACvD,QAAQ,yDAAyD;CACjE,QAAQ,mCAAmC;CAC3C,QAAQ,sCAAsC;CAC9C,QAAQ,6CAA6C;CACrD,QAAQ,wEAAwE;CAChF,QAAQ,4BAA4B;CACpC,QAAQ,gCAAgC;CACxC,QAAQ,kCAAkC;CAC1C,QAAQ,QAAQ;CAChB,QAAQ,mCAAmC;CAC3C,QAAQ,gEAAgE;CACxE,QAAQ,+CAA+C;CACvD,QAAQ,0EAA0E;CAClF,QAAQ,sCAAsC;CAC9C,QAAQ,8BAA8B;CACtC,QAAQ,0BAA0B;CAClC,QAAQ,+BAA+B;CACvC,QAAQ,oCAAoC;CAC5C,QAAQ,yCAAyC;CACjD,QAAQ,QAAQ;CAChB,QAAQ,mCAAmC;CAC3C,QAAQ,oEAAoE;CAC5E,QAAQ,+CAA+C;CACvD,QAAQ,mDAAmD;CAC3D,QAAQ,gFAAgF;CACxF,QAAQ,yCAAyC;CACjD,QAAQ,0CAA0C;CAClD,QAAQ,qDAAqD;CAC7D,QAAQ,2CAA2C;CACnD,QAAQ,8CAA8C;CACtD,QAAQ,sDAAsD;CAC9D,QAAQ,uDAAuD;CAC/D,QAAQ,uEAAuE;CAC/E,QAAQ,4CAA4C;CACpD,QAAQ,QAAQ;CAChB,QAAQ,mCAAmC;CAC3C,QAAQ,gEAAgE;CACxE,QAAQ,+CAA+C;CACvD,QAAQ,mEAAmE;CAC3E,QAAQ,uDAAuD;CAC/D,QAAQ,0CAA0C;CAClD,QAAQ,gEAAgE;CACxE,QAAQ,wEAAwE;CAChF,QAAQ,2DAA2D;CACnE,QAAQ,sCAAsC;CAC9C,QAAQ,wBAAwB;CAChC,QAAQ,oEAAoE;CAC5E,QAAQ,yCAAyC;CACjD,QAAQ,QAAQ;CAChB,QAAQ,mCAAmC;CAC3C,QAAQ,gEAAgE;CACxE,QAAQ,+CAA+C;CACvD,QAAQ,mEAAmE;CAC3E,QAAQ,uDAAuD;CAC/D,QAAQ,0CAA0C;CAClD,QAAQ,4DAA4D;CACpE,QAAQ,wEAAwE;CAChF,QAAQ,8EAA8E;CACtF,QAAQ,8CAA8C;CACtD,QAAQ,iEAAiE;CACzE,QAAQ,oDAAoD;CAC5D,QAAQ,yCAAyC;CACjD,QAAQ,QAAQ;CAChB,QAAQ,mCAAmC;CAC3C,QAAQ,oEAAoE;CAC5E,QAAQ,+CAA+C;CACvD,QAAQ,mDAAmD;CAC3D,QAAQ,8EAA8E;CACtF,QAAQ,qDAAqD;CAC7D,QAAQ,oCAAoC;CAC5C,QAAQ,8DAA8D;CACtE,QAAQ,mDAAmD;CAC3D,QAAQ,yBAAyB;CACjC,QAAQ,mDAAmD;CAC3D,QAAQ,qDAAqD;CAC7D,QAAQ,2CAA2C;CACnD,QAAQ,8CAA8C;CACtD,QAAQ,sDAAsD;CAC9D,QAAQ,uDAAuD;CAC/D,QAAQ,uEAAuE;CAC/E,QAAQ,4CAA4C;CACpD,QAAQ,QAAQ;CAChB,QAAQ,mDAAmD;CAC3D,QAAQ,wDAAwD;CAChE,QAAQ,wEAAwE;CAChF,QAAQ,yDAAyD;CACjE,QAAQ,gDAAgD;CACxD,QAAQ,uCAAuC;CAC/C,QAAQ,KAAK;CACb,QAAQ,gFAAgF;CACxF,QAAQ,sBAAsB;CAC9B,QAAQ,qBAAqB;CAC7B,QAAQ,qBAAqB;CAC7B,QAAQ,mCAAmC;CAC3C,QAAQ,iCAAiC;CACzC,QAAQ,uDAAuD;CAC/D,QAAQ,2CAA2C;CACnD,QAAQ,uCAAuC;CAC/C,QAAQ,mBAAmB;CAC3B,QAAQ,uCAAuC;CAC/C,QAAQ,oBAAoB;CAC5B,QAAQ,gBAAgB;CACxB,QAAQ,uCAAuC;CAC/C,QAAQ,2DAA2D;CACnE,QAAQ,gFAAgF;CACxF,QAAQ,eAAe;CACvB,QAAQ,2DAA2D;CACnE,QAAQ,gFAAgF;CACxF,QAAQ,gBAAgB;CACxB,QAAQ,iCAAiC;CACzC,QAAQ,oCAAoC;CAC5C,QAAQ,gBAAgB;CACxB,QAAQ,gCAAgC;CACxC,QAAQ,gCAAgC;CACxC,QAAQ,iCAAiC;CACzC,QAAQ,iCAAiC;CACzC,QAAQ,gCAAgC;CACxC,QAAQ,gCAAgC;CACxC,QAAQ,WAAW;CACnB,QAAQ,mDAAmD;CAC3D,QAAQ,uCAAuC;CAC/C,QAAQ,mCAAmC;CAC3C,QAAQ,eAAe;CACvB,QAAQ,mCAAmC;CAC3C,QAAQ,gBAAgB;CACxB,QAAQ,kCAAkC;CAC1C,QAAQ,6GAA6G;CACrH,QAAQ,6GAA6G;CACrH,QAAQ,6GAA6G;CACrH,QAAQ,6GAA6G;CACrH,QAAQ,eAAe;CACvB,QAAQ,uGAAuG;CAC/G,QAAQ,uGAAuG;CAC/G,QAAQ,uGAAuG;CAC/G,QAAQ,uGAAuG;CAC/G,QAAQ,gBAAgB;CACxB,QAAQ,YAAY;CACpB,QAAQ,gFAAgF;CACxF,QAAQ,0CAA0C;CAClD,QAAQ,0CAA0C;CAClD,QAAQ,2CAA2C;CACnD,QAAQ,2CAA2C;CACnD,QAAQ,0CAA0C;CAClD,QAAQ,0CAA0C;CAClD,QAAQ,8CAA8C;CACtD,QAAQ,8CAA8C;CACtD,QAAQ,qEAAqE;CAC7E,QAAQ,4CAA4C;CACpD,QAAQ,mFAAmF;CAC3F,QAAQ,mDAAmD;CAC3D,QAAQ,gFAAgF;CACxF,QAAQ,mBAAmB;CAC3B,QAAQ,iCAAiC;CACzC,QAAQ,0BAA0B;CAClC,QAAQ,eAAe;CACvB,QAAQ,2BAA2B;CACnC,QAAQ,gBAAgB;CACxB,QAAQ,gFAAgF;CACxF,QAAQ,mCAAmC;CAC3C,QAAQ,kCAAkC;CAC1C,QAAQ,8GAA8G;CACtH,QAAQ,8GAA8G;CACtH,QAAQ,8GAA8G;CACtH,QAAQ,8GAA8G;CACtH,QAAQ,eAAe;CACvB,QAAQ,wGAAwG;CAChH,QAAQ,wGAAwG;CAChH,QAAQ,wGAAwG;CAChH,QAAQ,wGAAwG;CAChH,QAAQ,gBAAgB;CACxB,QAAQ,WAAW;CACnB,QAAQ,sGAAsG;CAC9G,QAAQ,sGAAsG;CAC9G,QAAQ,YAAY;CACpB,QAAQ,gFAAgF;CACxF,QAAQ,uCAAuC;CAC/C,QAAQ,uCAAuC;CAC/C,QAAQ,2CAA2C;CACnD,QAAQ,6CAA6C;CACrD,QAAQ,oDAAoD;CAC5D,QAAQ,oDAAoD;CAC5D,QAAQ,gFAAgF;CACxF,QAAQ,2CAA2C;CACnD,QAAQ,2CAA2C;CACnD,QAAQ,sDAAsD;CAC9D,QAAQ,sDAAsD;CAC9D,QAAQ,gFAAgF;CACxF,QAAQ,2CAA2C;CACnD,QAAQ,2CAA2C;CACnD,QAAQ,oEAAoE;CAC5E,QAAQ,oEAAoE;CAC5E,QAAQ,sDAAsD;CAC9D,QAAQ,sDAAsD;CAC9D,QAAQ,sDAAsD;CAC9D,QAAQ,sDAAsD;CAC9D,QAAQ,gFAAgF;CACxF,QAAQ,qDAAqD;CAC7D,QAAQ,mDAAmD;CAC3D,QAAQ,+CAA+C;CACvD,QAAQ,4DAA4D;CACpE,QAAQ,gFAAgF;CACxF,QAAQ,kCAAkC;CAC1C,QAAQ,kCAAkC;CAC1C,QAAQ,sDAAsD;CAC9D,QAAQ,yDAAyD;CACjE,QAAQ,gFAAgF;CACxF,QAAQ,0CAA0C;CAClD,QAAQ,0CAA0C;CAClD,QAAQ,uCAAuC;CAC/C,QAAQ,uCAAuC;CAC/C,QAAQ,wDAAwD;CAChE,QAAQ,+DAA+D;CACvE,QAAQ,yCAAyC;CACjD,QAAQ,iEAAiE;CACzE,QAAQ,gFAAgF;CACxF,QAAQ,sBAAsB;CAC9B,QAAQ,sBAAsB;CAC9B,QAAQ,sBAAsB;CAC9B,QAAQ,uBAAuB;CAC/B,QAAQ,0DAA0D;CAClE,QAAQ,0DAA0D;CAClE,QAAQ,+CAA+C;CACvD,QAAQ,+CAA+C;CACvD,QAAQ,gFAAgF;CACxF,QAAQ,sBAAsB;CAC9B,QAAQ,kDAAkD;CAC1D,QAAQ,kDAAkD;CAC1D,QAAQ,sBAAsB;CAC9B,QAAQ,kDAAkD;CAC1D,QAAQ,kDAAkD;CAC1D,QAAQ,iDAAiD;CACzD,QAAQ,2DAA2D;CACnE,QAAQ,4CAA4C;CACpD,QAAQ,2DAA2D;CACnE,QAAQ,gFAAgF;CACxF,QAAQ,iCAAiC;CACzC,QAAQ,oDAAoD;CAC5D,QAAQ,8CAA8C;CACtD,QAAQ,4CAA4C;CACpD,QAAQ,0CAA0C;CAClD,QAAQ,gFAAgF;CACxF,QAAQ,+BAA+B;CACvC,QAAQ,+BAA+B;CACvC,QAAQ,uDAAuD;CAC/D,QAAQ,uDAAuD;CAC/D,QAAQ,qDAAqD;CAC7D,QAAQ,qDAAqD;CAC7D,QAAQ,6CAA6C;CACrD,QAAQ,qDAAqD;CAC7D,QAAQ,qDAAqD;CAC7D,QAAQ,gFAAgF;CACxF,QAAQ,kBAAkB;CAC1B,QAAQ,mEAAmE;CAC3E,QAAQ,mEAAmE;CAC3E,QAAQ,wDAAwD;CAChE,QAAQ,wDAAwD;CAChE,QAAQ,kDAAkD;CAC1D,QAAQ,kDAAkD;CAC1D,QAAQ,yDAAyD;CACjE,QAAQ,yDAAyD;CACjE,QAAQ,wCAAwC;CAChD,QAAQ,yDAAyD;CACjE,QAAQ,yDAAyD;CACjE,QAAQ,gFAAgF;CACxF,QAAQ,mCAAmC;CAC3C,QAAQ,sBAAsB;CAC9B,QAAQ,uEAAuE;CAC/E,QAAQ,uEAAuE;CAC/E,QAAQ,4DAA4D;CACpE,QAAQ,4DAA4D;CACpE,QAAQ,sDAAsD;CAC9D,QAAQ,sDAAsD;CAC9D,QAAQ,6DAA6D;CACrE,QAAQ,6DAA6D;CACrE,QAAQ,4CAA4C;CACpD,QAAQ,6DAA6D;CACrE,QAAQ,6DAA6D;CACrE,QAAQ,gFAAgF;CACxF,QAAQ,uCAAuC;CAC/C,QAAQ,0BAA0B;CAClC,QAAQ,2EAA2E;CACnF,QAAQ,2EAA2E;CACnF,QAAQ,gEAAgE;CACxE,QAAQ,gEAAgE;CACxE,QAAQ,0DAA0D;CAClE,QAAQ,0DAA0D;CAClE,QAAQ,iEAAiE;CACzE,QAAQ,iEAAiE;CACzE,QAAQ,gDAAgD;CACxD,QAAQ,iEAAiE;CACzE,QAAQ,iEAAiE;CACzE,QAAQ,gFAAgF;CACxF,QAAQ,2CAA2C;CACnD,QAAQ,8BAA8B;CACtC,QAAQ,+EAA+E;CACvF,QAAQ,+EAA+E;CACvF,QAAQ,oEAAoE;CAC5E,QAAQ,oEAAoE;CAC5E,QAAQ,8DAA8D;CACtE,QAAQ,8DAA8D;CACtE,QAAQ,qEAAqE;CAC7E,QAAQ,qEAAqE;CAC7E,QAAQ,oDAAoD;CAC5D,QAAQ,qEAAqE;CAC7E,QAAQ,qEAAqE;CAC7E,QAAQ,gFAAgF;CACxF,QAAQ,+CAA+C;CACvD,QAAQ,kCAAkC;CAC1C,QAAQ,mFAAmF;CAC3F,QAAQ,mFAAmF;CAC3F,QAAQ,wEAAwE;CAChF,QAAQ,wEAAwE;CAChF,QAAQ,kEAAkE;CAC1E,QAAQ,kEAAkE;CAC1E,QAAQ,yEAAyE;CACjF,QAAQ,yEAAyE;CACjF,QAAQ,wDAAwD;CAChE,QAAQ,yEAAyE;CACjF,QAAQ,yEAAyE;CACjF,QAAQ,gFAAgF;CACxF,QAAQ,mDAAmD;CAC3D,QAAQ,sCAAsC;CAC9C,QAAQ,uFAAuF;CAC/F,QAAQ,uFAAuF;CAC/F,QAAQ,4EAA4E;CACpF,QAAQ,4EAA4E;CACpF,QAAQ,sEAAsE;CAC9E,QAAQ,sEAAsE;CAC9E,QAAQ,6EAA6E;CACrF,QAAQ,6EAA6E;CACrF,QAAQ,4DAA4D;CACpE,QAAQ,6EAA6E;CACrF,QAAQ,6EAA6E;CACrF,QAAQ,gFAAgF;CACxF,QAAQ,+BAA+B;CACvC,QAAQ,kBAAkB;CAC1B,QAAQ,mEAAmE;CAC3E,QAAQ,mEAAmE;CAC3E,QAAQ,wDAAwD;CAChE,QAAQ,wDAAwD;CAChE,QAAQ,kDAAkD;CAC1D,QAAQ,kDAAkD;CAC1D,QAAQ,yDAAyD;CACjE,QAAQ,yDAAyD;CACjE,QAAQ,wCAAwC;CAChD,QAAQ,yDAAyD;CACjE,QAAQ,yDAAyD;CACjE,QAAQ,gFAAgF;CACxF,QAAQ,mCAAmC;CAC3C,QAAQ,sBAAsB;CAC9B,QAAQ,uEAAuE;CAC/E,QAAQ,uEAAuE;CAC/E,QAAQ,4DAA4D;CACpE,QAAQ,4DAA4D;CACpE,QAAQ,sDAAsD;CAC9D,QAAQ,sDAAsD;CAC9D,QAAQ,6DAA6D;CACrE,QAAQ,6DAA6D;CACrE,QAAQ,4CAA4C;CACpD,QAAQ,6DAA6D;CACrE,QAAQ,6DAA6D;CACrE,QAAQ,gFAAgF;CACxF,QAAQ,wCAAwC;CAChD,QAAQ,0BAA0B;CAClC,QAAQ,2EAA2E;CACnF,QAAQ,2EAA2E;CACnF,QAAQ,gEAAgE;CACxE,QAAQ,gEAAgE;CACxE,QAAQ,0DAA0D;CAClE,QAAQ,0DAA0D;CAClE,QAAQ,kEAAkE;CAC1E,QAAQ,kEAAkE;CAC1E,QAAQ,gDAAgD;CACxD,QAAQ,kEAAkE;CAC1E,QAAQ,kEAAkE;CAC1E,QAAQ,gFAAgF;CACxF,QAAQ,4CAA4C;CACpD,QAAQ,8BAA8B;CACtC,QAAQ,+EAA+E;CACvF,QAAQ,+EAA+E;CACvF,QAAQ,oEAAoE;CAC5E,QAAQ,oEAAoE;CAC5E,QAAQ,8DAA8D;CACtE,QAAQ,8DAA8D;CACtE,QAAQ,sEAAsE;CAC9E,QAAQ,sEAAsE;CAC9E,QAAQ,oDAAoD;CAC5D,QAAQ,sEAAsE;CAC9E,QAAQ,sEAAsE;CAC9E,QAAQ,gFAAgF;CACxF,QAAQ,gDAAgD;CACxD,QAAQ,kCAAkC;CAC1C,QAAQ,mFAAmF;CAC3F,QAAQ,mFAAmF;CAC3F,QAAQ,wEAAwE;CAChF,QAAQ,wEAAwE;CAChF,QAAQ,kEAAkE;CAC1E,QAAQ,kEAAkE;CAC1E,QAAQ,0EAA0E;CAClF,QAAQ,0EAA0E;CAClF,QAAQ,wDAAwD;CAChE,QAAQ,0EAA0E;CAClF,QAAQ,0EAA0E;CAClF,QAAQ,gFAAgF;CACxF,QAAQ,uBAAuB;CAC/B,QAAQ,4BAA4B;CACpC,QAAQ,gFAAgF;CACxF,QAAQ,mBAAmB;CAC3B,QAAQ,wBAAwB;CAChC,QAAQ,gFAAgF;CACxF,QAAQ,eAAe;CACvB,QAAQ,oBAAoB;CAC5B,QAAQ,gFAAgF;CACxF,QAAQ,WAAW;CACnB,QAAQ,gBAAgB;CACxB,QAAQ,gFAAgF;CACxF,QAAQ,OAAO;CACf,QAAQ,YAAY;CACpB,QAAQ,gFAAgF;CACxF,QAAQ,2BAA2B;CACnC,QAAQ,gCAAgC;CACxC,QAAQ,gFAAgF;CACxF,QAAQ,uBAAuB;CAC/B,QAAQ,4BAA4B;CACpC,QAAQ,gFAAgF;CACxF,QAAQ,mBAAmB;CAC3B,QAAQ,wBAAwB;CAChC,QAAQ,gFAAgF;CACxF,QAAQ,eAAe;CACvB,QAAQ,oBAAoB;CAC5B,QAAQ,gFAAgF;CACxF,QAAQ,WAAW;CACnB,QAAQ,gBAAgB;CACxB,QAAQ,gFAAgF;CACxF,QAAQ,OAAO;CACf,QAAQ,gFAAgF;CACxF,QAAQ,uCAAuC;CAC/C,QAAQ,uCAAuC;CAC/C,QAAQ,2CAA2C;CACnD,QAAQ,2CAA2C;CACnD,QAAQ,gFAAgF;CACxF,QAAQ,2DAA2D;CACnE,QAAQ,2CAA2C;CACnD,QAAQ,2DAA2D;CACnE,QAAQ,+CAA+C;CACvD,QAAQ,gFAAgF;CACxF,QAAQ,wCAAwC;CAChD,QAAQ,sCAAsC;CAC9C,QAAQ,6DAA6D;CACrE,QAAQ,4CAA4C;CACpD,QAAQ,6DAA6D;CACrE,QAAQ,sDAAsD;CAC9D,QAAQ,gFAAgF;CACxF,QAAQ,+DAA+D;CACvE,QAAQ,kEAAkE;CAC1E,QAAQ,6DAA6D;CACrE,QAAQ,6DAA6D;CACrE,QAAQ,6BAA6B;CACrC,QAAQ,uCAAuC;CAC/C,QAAQ,WAAW;CACnB,QAAQ,8DAA8D;CACtE,QAAQ,YAAY;CACpB,QAAQ,GAAG;CACX,QAAQ,gFAAgF;CACxF,QAAQ,QAAQ;CAChB,QAAQ,EAAE;CACV,QAAQ,eAAe;CACvB,QAAQ,mCAAmC;CAC3C,QAAQ,UAAU;CAClB,QAAQ,gBAAgB;CACxB,QAAQ,eAAe;CACvB,QAAQ,eAAe;CACvB,QAAQ,eAAe;CACvB,QAAQ,iBAAiB;CACzB,QAAQ,gBAAgB;CACxB,QAAQ,gBAAgB;CACxB,QAAQ,gBAAgB;CACxB,QAAQ,WAAW;CACnB,QAAQ,YAAY;CACpB,QAAQ,aAAa;CACrB,QAAQ,UAAU;CAClB,QAAQ,UAAU;CAClB,QAAQ,UAAU;CAClB,QAAQ,eAAe;CACvB,QAAQ,MAAM;CACd,QAAQ,EAAE;CACV,QAAQ,uDAAuD;CAC/D,QAAQ,gDAAgD;CACxD,QAAQ,GAAG;CACX,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC;;CAEb,CAAC;;AC1lCD,KAAI,QAAQ,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,MAAM;CACrC,EAAE,IAAI,GAAG,GAAG,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC;;CAEtC,EAAE,SAAS,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,GAAG;CACrC,IAAI,IAAI,QAAQ,GAAG,IAAI,CAAC;CACxB,IAAI,IAAI,IAAI,KAAK,KAAK,GAAG;CACzB,MAAM,QAAQ,GAAG,KAAK,CAAC;CACvB,KAAK;CACL,IAAI,IAAI,GAAG,YAAY,KAAK,GAAG;CAC/B,MAAM,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE;CACpD,QAAQ,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,QAAQ,EAAE,CAAC;CAC3C,KAAK;CACL,IAAI,KAAK,IAAI,CAAC,IAAI,GAAG,GAAG;CACxB,MAAM,IAAI,QAAQ,IAAI,GAAG,CAAC,IAAI,GAAG,EAAE,GAAG;CACtC,QAAQ,GAAG,EAAE,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC;CAC5B,OAAO;CACP,KAAK;CACL,IAAI,OAAO,GAAG,CAAC;CACf,GAAG;CACH,EAAE,KAAK,IAAI,CAAC,IAAI,GAAG,GAAG;CACtB,IAAI,OAAO,GAAG,EAAE,CAAC,EAAE,CAAC;CACpB,GAAG;CACH,EAAE,OAAO,GAAG,CAAC;CACb,CAAC;;ACvBD,KAAI,MAAM,GAAG,EAAE,GAAG,MAAM;CACxB,EAAE,OAAO,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,EAAE,CAAC;CAC3C,CAAC;;ACFD,KAAI,SAAS,GAAG,CAAC,GAAG,KAAK;CACzB,EAAE,IAAI,GAAG,IAAI,CAAC,EAAE;CAChB,IAAI,OAAO,EAAE,CAAC;CACd,GAAG;CACH,EAAE,GAAG,GAAG,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;CACtB,EAAE,IAAI,MAAM;CACZ,IAAI,gEAAgE,CAAC;CACrE,EAAE,IAAI,MAAM,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;CACjC,EAAE,IAAI,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,MAAM,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;CACrE,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;CAChC,IAAI,GAAG,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC;CAC7D,GAAG;CACH,EAAE,OAAO,GAAG,CAAC;CACb,CAAC;;ACbD,KAAI,cAAc,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,MAAM,GAAG,CAAC,KAAK;CACvD,EAAE,GAAG,IAAI,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC;CACvB,EAAE,GAAG,IAAI,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC;CACvB,EAAE,OAAO,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC;CAClE,IAAI,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC;CAC1B,IAAI,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC;CAC1C,GAAG,CAAC;CACJ,CAAC;;ACFD,KAAI,IAAI,GAAG;CACX,UAAEC,QAAM;CACR,EAAE,MAAM;CACR,EAAE,SAAS;CACX,EAAE,cAAc;CAChB,CAAC;;CCVD;AACA,AAsCsC;;CAEtC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}