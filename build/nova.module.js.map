{"version":3,"file":"nova.module.js","sources":["../src/core/settings/DefaultSettings.js","../src/error/NotFunctionError.js","../src/core/LoopManager.js","../src/events/EventManager.js","../src/core/World.js","../src/constant.js","../src/core/VR.js","../src/core/App.js","../src/core/Bind.js","../src/core/Monitor.js","../src/core/Transitioner.js","../src/core/View.js","../src/events/Signal.js","../src/events/Events.js","../src/gui/GUI.js","../src/loader/LoaderFactory.js","../src/postprocessing/shader/CopyShader.js","../src/postprocessing/Pass.js","../src/postprocessing/ShaderPass.js","../src/postprocessing/RenderPass.js","../src/postprocessing/EffectComposer.js","../src/postprocessing/shader/DotScreenShader.js","../src/postprocessing/DotScreenPass.js","../src/postprocessing/shader/GlitchShader.js","../src/postprocessing/GlitchPass.js","../src/postprocessing/OutlinePass.js","../src/postprocessing/shader/FXAAShader.js","../src/util/extends.js","../src/util/rndInt.js","../src/util/rndString.js","../src/util/Util.js","../src/Nova.js"],"sourcesContent":["//适合大部分WebGL的APP设置\r\nlet DefaultSettings = {\r\n  parent: document.body, //APP所在DOM容器\r\n  setCommonCSS: true, //设置默认CSS样式，无法滚动，超出区域不显示，取消所有内外边距\r\n  autoStart: true, //自动执行渲染循环和逻辑循环\r\n  autoResize: true, //自动拉伸自适应不同屏幕分辨率\r\n  VRSupport: false, //是否加载VR支持模块\r\n  renderer: {\r\n    clearColor: 0x000000, //渲染器的默认清除颜色\r\n    clearAlpha: 1, //渲染器的默认清除颜色的透明度\r\n    pixelRatio: window.devicePixelRatio || 1, //用于移动平台的清晰度\r\n    precision: 'highp', // 渲染精细度，默认为高\r\n    antialias: true, //是否开启抗锯齿\r\n    alpha: false, // 渲染器是否保存alpha缓冲\r\n  },\r\n  normalEventList: ['click', 'mousedown', 'mouseup', 'touchstart',\r\n    'touchend', 'touchmove', 'mousemove'\r\n  ], //默认开启的原生事件监听，不建议将所有的事件监听都写在里面，每一个事件监听都会增加一次射线法碰撞检测，如果不必要的事件过多会降低性能\r\n  hammerEventList: 'press tap pressup pan swipe', //默认hammer手势事件的监听，同normalEventList一样，用到什么加入什么，不要一大堆东西全塞进去\r\n}\r\n\r\nexport {\r\n  DefaultSettings\r\n};","let NotFunctionError = class extends Error {\r\n  constructor( message ) {\r\n    super( message );\r\n    this.name = 'NotFunctionError';\r\n    this.message = message || 'The object is not a function.';\r\n  }\r\n};\r\n\r\nexport {\r\n  NotFunctionError\r\n};","import { NotFunctionError } from './../error/NotFunctionError.js';\r\n\r\nclass LoopManager {\r\n  constructor(cycleLevel = 1) {\r\n    //当它是true，不执行该循环\r\n    this.disable = false;\r\n    //记录循环次数\r\n    this.times = 0;\r\n    //每隔多少循环执行一次update，用于调整fps。数字越大，fps越低\r\n    this.cycleLevel = cycleLevel <= 0 ? 1 : cycleLevel;\r\n    this.functionMap = new Map();\r\n  }\r\n\r\n  update(time) {\r\n    if (this.disable || this.times % this.cycleLevel !== 0) {\r\n      return;\r\n    }\r\n    this.functionMap.forEach((value) => {\r\n      value();\r\n    });\r\n  }\r\n\r\n  add(func, key) {\r\n    if (typeof func !== 'function') {\r\n      throw new NotFunctionError();\r\n    } else {\r\n      if (key) {\r\n        this.functionMap.set(key, func);\r\n      } else {\r\n        key = Symbol();\r\n        this.functionMap.set(key, func);\r\n        return key;\r\n      }\r\n    }\r\n  }\r\n\r\n  removeAll() {\r\n    this.functionMap.clear();\r\n  }\r\n\r\n  remove(funcOrKey) {\r\n    if (typeof funcOrKey === 'function') {\r\n      this.functionMap.forEach((value, key) => {\r\n        if (value === funcOrKey) {\r\n          return this.functionMap.delete(key);\r\n        }\r\n      });\r\n      return false;\r\n    } else {\r\n      return this.functionMap.delete(funcOrKey);\r\n    }\r\n  }\r\n}\r\n\r\nexport {\r\n  LoopManager\r\n};","class EventManager {\r\n  constructor(world) {\r\n    world.eventManager = this;\r\n    this.world = world;\r\n    this.disable = false;\r\n    this.isDeep = true;\r\n    this.receivers = world.receivers;\r\n    this.raycaster = new THREE.Raycaster();\r\n    this.centerRaycaster = new THREE.Raycaster();\r\n    this.selectedObj = null;\r\n    this.centerSelectedObj = null;\r\n    this.isDetectingEnter = true;\r\n    let normalEventList = world.app.options.normalEventList;\r\n\r\n    for (let eventItem of normalEventList) {\r\n      world.app.parent.addEventListener(eventItem, (event) => {\r\n        if (this.disable) return;\r\n        this.raycastCheck(this.toNovaEvent(event));\r\n      });\r\n    }\r\n\r\n    try {\r\n      if (Hammer === undefined) {\r\n        return;\r\n      }\r\n    } catch (e) {\r\n      console.warn('Hammer没有引入，手势事件无法使用，只能使用基础的交互事件。');\r\n      return;\r\n    }\r\n    this.hammer = new Hammer(world.app.renderer.domElement);\r\n    console.log(world.app.options.hammerEventList)\r\n    this.hammer.on(world.app.options.hammerEventList, (event) => {\r\n      if (this.disable) return;\r\n      this.raycastCheck(event);\r\n    });\r\n  }\r\n\r\n  toNovaEvent(event) {\r\n    return {\r\n      changedPointers: [event],\r\n      center: {\r\n        x: event.clientX,\r\n        y: event.clientY,\r\n      },\r\n      type: event.type,\r\n      target: event.target\r\n    };\r\n  }\r\n\r\n  raycastCheck(event) {\r\n    let vec2 = new THREE.Vector2(event.center.x / this.world.app.getWorldWidth() *\r\n      2 - 1, 1 - event.center.y / this.world.app.getWorldHeight() * 2);\r\n    this.raycaster.setFromCamera(vec2, this.world.camera);\r\n    let intersects = this.raycaster.intersectObjects(this.world.receivers,\r\n      this.isDeep);\r\n    let intersect;\r\n    for (let i = 0; i < intersects.length; i++) {\r\n      if (intersects[i].object.isPenetrated) {\r\n        continue;\r\n      } else {\r\n        intersect = intersects[i];\r\n        break;\r\n      }\r\n    }\r\n    if (intersect && intersect.object.events && intersect.object.events[event\r\n        .type]) {\r\n      intersect.object.events[event.type].run(event, intersect);\r\n    }\r\n    return intersect;\r\n  }\r\n}\r\n\r\nexport {\r\n  EventManager\r\n};","import { LoopManager } from './LoopManager.js';\r\nimport { EventManager } from './../events/EventManager';\r\n\r\nclass World {\r\n  constructor(app, camera, clearColor) {\r\n    this.app = app;\r\n    this.scene = new THREE.Scene();\r\n    this.logicLoop = new LoopManager();\r\n    this.renderLoop = new LoopManager();\r\n    this.camera = camera || new THREE.PerspectiveCamera(45, app.getWorldWidth() /\r\n      app.getWorldHeight(), 0.01, 5000);\r\n    this.receivers = this.scene.children;\r\n    this.eventManager = new EventManager(this);\r\n    this.renderTargetParameters = {\r\n      minFilter: THREE.LinearFilter,\r\n      magFilter: THREE.LinearFilter,\r\n      format: THREE.RGBFormat,\r\n      stencilBuffer: false\r\n    };\r\n    this.isRTT = false;\r\n    this.clearColor = clearColor || 0;\r\n    this.fbo = new THREE.WebGLRenderTarget(this.app.getWorldWidth(),\r\n      this.app.getWorldHeight(), this.renderTargetParameters);\r\n    this.defaultRenderID = Symbol();\r\n    this.renderLoop.add(() => {\r\n      this.app.renderer.render(this.scene, this.camera);\r\n    }, this.defaultRenderID);\r\n  }\r\n\r\n  update(time) {\r\n    this.logicLoop.update(time);\r\n    this.renderLoop.update(time);\r\n  }\r\n\r\n  resize(width, height) {\r\n    if (this.camera.type === 'PerspectiveCamera') {\r\n      this.camera.aspect = width / height;\r\n      this.camera.updateProjectionMatrix();\r\n    } else {\r\n      this.camera.left = -width / 2;\r\n      this.camera.right = width / 2;\r\n      this.camera.top = height / 2;\r\n      this.camera.bottom = -height / 2;\r\n      this.camera.updateProjectionMatrix();\r\n    }\r\n  }\r\n}\r\n\r\nexport {\r\n  World\r\n};","const APP_STOP = 0;\r\nconst APP_RUNNING = 1;\r\nconst APP_PAUSE = 2;\r\nconst WORLD_RUNNING = 1;\r\nconst WORLD_PAUSE = 2;\r\nconst VERSION = '0.0.1';\r\n\r\nconsole.log(\"Nova framework for Three.js, version: %c \" + VERSION, \"color:blue\");\r\n\r\nexport {\r\n  APP_STOP,\r\n  APP_RUNNING,\r\n  APP_PAUSE,\r\n  WORLD_RUNNING,\r\n  WORLD_PAUSE\r\n};","class VR {\r\n  constructor(app) {\r\n    this.app = app;\r\n    this.display = undefined;\r\n    this.polyfill = undefined;\r\n    this.isOpenVR = false;\r\n    this.vrEffect = undefined;\r\n    this.getVRDisplay();\r\n    this.createVREffect();\r\n  }\r\n\r\n  createVREffect() {\r\n    if (this.vrEffect) {\r\n      return;\r\n    }\r\n    if (!THREE.VREffect) {\r\n      console.warn(\"未引入VREffect.js，无法创建VR模式。\");\r\n      return;\r\n    }\r\n    this.vrEffect = new THREE.VREffect(this.app.renderer);\r\n    this.vrEffect.setSize(this.app.renderer.domElement.clientWidth,\r\n      this.app.renderer.domElement.clientHeight, false);\r\n    this.vrEffect.isOpened = false;\r\n    this.vrEffect.updateId = Symbol();\r\n  }\r\n\r\n  setPolyfill() {\r\n    if (this.polyfill) {\r\n      return;\r\n    }\r\n    if (!window.WebVRPolyfill) {\r\n      console.warn(\"未引入WebVRPolyfill.js，无法创建VR兼容模式。\");\r\n      return;\r\n    }\r\n    let config = (function() {\r\n      let config = {};\r\n      let q = window.location.search.substring(1);\r\n      if (q === '') {\r\n        return config;\r\n      }\r\n      let params = q.split('&');\r\n      let param, name, value;\r\n      for (let i = 0; i < params.length; i++) {\r\n        param = params[i].split('=');\r\n        name = param[0];\r\n        value = param[1];\r\n\r\n        // All config values are either boolean or float\r\n        config[name] = value === 'true' ? true :\r\n          value === 'false' ? false :\r\n          parseFloat(value);\r\n      }\r\n      return config;\r\n    })();\r\n    this.polyfill = new WebVRPolyfill(config);\r\n  }\r\n\r\n  getVRDisplay() {\r\n    if (!navigator.getVRDisplays) {\r\n      this.setPolyfill();\r\n    }\r\n    if(!navigator.getVRDisplays){\r\n    \treturn;\r\n    }\r\n    return navigator.getVRDisplays()\r\n      .then((vrDisplays) => {\r\n        if (vrDisplays.length) {\r\n          this.display = vrDisplays[0];\r\n          return this.display;\r\n        }\r\n        return \"no\";\r\n      }, (vrDisplays) => {\r\n        return \"no\";\r\n      });\r\n  }\r\n\r\n  open() {\r\n    if (!this.display || !this.vrEffect) {\r\n      console.warn(\"未发现VR设备或浏览器不兼容，无法进入VR模式。\");\r\n      return;\r\n    }\r\n    this.app.renderLoop.add(() => {\r\n      this.vrEffect.render(this.app.world.scene, this.app.world.camera);\r\n    }, this.vrEffect.updateId);\r\n    this.display.requestPresent([{ source: this.app.renderer.domElement }]);\r\n  }\r\n\r\n  close() {\r\n    this.app.renderLoop.remove(this.vrEffect.updateId);\r\n  }\r\n}\r\n\r\nexport {\r\n  VR\r\n};","import { World } from './World.js';\r\nimport { APP_RUNNING, APP_STOP, APP_PAUSE } from './../constant.js';\r\nimport { LoopManager } from './LoopManager.js';\r\nimport { VR } from './VR.js';\r\nimport { DefaultSettings } from './settings/DefaultSettings.js';\r\n\r\nclass App {\r\n  constructor(settings = {}) {\r\n    this.options = _.defaultsDeep(settings, DefaultSettings);\r\n    if (this.options.setCommonCSS) {\r\n      this.setCommonCSS();\r\n    }\r\n    this.parent = this.options.parent;\r\n    this.renderer = new THREE.WebGLRenderer({\r\n      antialias: this.options.renderer.antialias,\r\n      precision: this.options.renderer.precision,\r\n      alpha: this.options.renderer.alpha,\r\n    });\r\n    this.renderer.setClearColor(this.options.renderer.clearColor,\r\n      this.options.renderer.clearAlpha);\r\n    this.world = new World(this);\r\n    this.animationFrame;\r\n    this.state = APP_STOP;\r\n    this.logicLoop = new LoopManager();\r\n    this.renderLoop = new LoopManager();\r\n    window.addEventListener('resize', () => {\r\n      this.resize();\r\n    });\r\n    if (this.options.autoStart) {\r\n      this.start();\r\n    }\r\n    if (this.options.VRSupport) {\r\n      this.VR = new VR(this);\r\n    }\r\n  }\r\n\r\n  resize() {\r\n    let width = this.getWorldWidth();\r\n    let height = this.getWorldHeight();\r\n    this.world.resize(width, height);\r\n    this.renderer.setSize(width, height);\r\n    this.renderer.setPixelRatio(this.options.renderer.pixelRatio);\r\n  }\r\n\r\n  update(time) {\r\n    if (this.state === APP_RUNNING) {\r\n      this.logicLoop.update(time);\r\n      this.world.update(time);\r\n      this.renderLoop.update(time);\r\n    }\r\n    this.animationFrame = requestAnimationFrame(() => {\r\n      this.update();\r\n    });\r\n  }\r\n\r\n  setCommonCSS() {\r\n    document.write(\r\n      '<style>*{margin:0;padding:0} body{overflow:hidden}</style>');\r\n  }\r\n\r\n  getWorldWidth() {\r\n    return this.parent === document.body ? window.innerWidth :\r\n      this.parent.offsetWidth;\r\n  }\r\n\r\n  getWorldHeight() {\r\n    return this.parent === document.body ? window.innerHeight :\r\n      this.parent.offsetHeight;\r\n  }\r\n\r\n  start() {\r\n    if (this.state === APP_STOP) {\r\n      this.state = APP_RUNNING;\r\n      this.parent.appendChild(this.renderer.domElement);\r\n      this.resize();\r\n      this.update();\r\n    }\r\n  }\r\n\r\n  resume() {\r\n    if (this.state === APP_PAUSE) {\r\n      this.state = APP_RUNNING;\r\n    }\r\n  }\r\n\r\n  pause() {\r\n    if (this.state === APP_RUNNING) {\r\n      this.state = APP_PAUSE;\r\n    }\r\n  }\r\n\r\n  destroy() {\r\n    this.world.destroy();\r\n  }\r\n\r\n  openFullScreen() {\r\n    let container = this.parent;\r\n    this.isFullScreen = true;\r\n    if (container.requestFullscreen) {\r\n      container.requestFullscreen();\r\n    } else if (container.msRequestFullscreen) {\r\n      container.msRequestFullscreen();\r\n    } else if (container.mozRequestFullScreen) {\r\n      container.mozRequestFullScreen();\r\n    } else if (container.webkitRequestFullscreen) {\r\n      container.webkitRequestFullscreen();\r\n    } else {\r\n      this.isFullScreen = false;\r\n    }\r\n    return this.isFullScreen;\r\n  }\r\n\r\n  closeFullScreen() {\r\n    let container = document;\r\n    this.isFullScreen = false;\r\n    if (container.exitFullscreen) {\r\n      container.exitFullscreen();\r\n    } else if (container.mozCancelFullScreen) {\r\n      container.mozCancelFullScreen();\r\n    } else if (container.webkitExitFullScreen) {\r\n      container.webkitExitFullScreen();\r\n    } else if (container.msExitFullscreen) {\r\n      container.msExitFullscreen();\r\n    } else if (container.webkitCancelFullScreen) {\r\n      container.webkitCancelFullScreen();\r\n    } else if (container.webkitExitFullScreen) {\r\n      container.webkitCancelFullScreen();\r\n    }\r\n    return this.isFullScreen;\r\n  }\r\n\r\n  toggleFullScreen() {\r\n    if (this.isFullScreen) {\r\n      this.closeFullScreen();\r\n    } else {\r\n      this.openFullScreen();\r\n    }\r\n\r\n  }\r\n\r\n  screenshot() {\r\n    let w = window.open('', '');\r\n    w.document.title = \"Nova Screenshot\";\r\n    let img = new Image();\r\n    this.renderer.render(this.world.scene, this.world.camera);\r\n    img.src = app.renderer.domElement.toDataURL();\r\n    w.document.body.appendChild(img);\r\n  }\r\n}\r\n\r\nexport {\r\n  App\r\n};","class Bind {\r\n  constructor(obj) {\r\n    for (let i in obj) {\r\n      this[i] = obj[i];\r\n      this.bindMap = new Map();\r\n      this.defineReactive(this, i, this[i]);\r\n    }\r\n  }\r\n\r\n  add(obj, funcs = {}) {\r\n    this.bindMap.set(obj, funcs);\r\n  }\r\n\r\n  remove(obj) {\r\n    this.bindMap.delete(obj);\r\n  }\r\n\r\n  defineReactive(data, key, val) {\r\n    Object.defineProperty(data, key, {\r\n      enumerable: true,\r\n      configurable: false,\r\n      get: function() {\r\n        return val;\r\n      },\r\n      set: function(newVal) {\r\n        val = newVal;\r\n        let bindMap = data.bindMap;\r\n        for (let [obj, funcs] of bindMap) {\r\n          if (obj[key] !== undefined) {\r\n            obj[key] = funcs[key] ? funcs[key](val) : val;\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n}\r\nexport {\r\n  Bind\r\n};","class Monitor {\r\n  constructor(world, option) {\r\n    this.option = option;\r\n    this.fullWidth = world.app.getWorldWidth();\r\n    this.fullHeight = world.app.getWorldHeight();\r\n    this.renderer = new THREE.WebGLRenderer();\r\n    this.world = world;\r\n    this.canvas = this.renderer.domElement;\r\n    this.renderer.setSize(this.fullWidth * option.width, this.fullHeight *\r\n      option.height);\r\n    this.renderer.setPixelRatio(window.devicePixelRatio);\r\n  }\r\n\r\n  setViewOffset() {\r\n    let viewX = this.fullWidth * this.option.left;\r\n    let viewY = this.fullHeight * this.option.top;\r\n    let viewWidth = this.fullWidth * this.option.width;\r\n    let viewHeight = this.fullHeight * this.option.height;\r\n    this.world.camera.setViewOffset(this.fullWidth, this.fullHeight, viewX,\r\n      viewY, viewWidth, viewHeight);\r\n  }\r\n\r\n  render() {\r\n    this.setViewOffset();\r\n    this.renderer.render(this.world.scene, this.world.camera);\r\n  }\r\n}\r\n\r\nexport {\r\n  Monitor\r\n};","import { World } from './World';\r\n\r\nclass Transitioner {\r\n  constructor(app, world, texture, options = {}) {\r\n    this.options = _.defaults(options, {\r\n      'useTexture': true,\r\n      'transition': 0,\r\n      'speed': 10,\r\n      'texture': 5,\r\n      'loopTexture': true,\r\n      'isAnimate': true,\r\n      'threshold': 0.3\r\n    });\r\n    this.app = app;\r\n    this.targetWorld = world;\r\n    this.maskTexture = texture;\r\n    this.material = new THREE.ShaderMaterial({\r\n      uniforms: {\r\n        tDiffuse1: {\r\n          value: null\r\n        },\r\n        tDiffuse2: {\r\n          value: null\r\n        },\r\n        mixRatio: {\r\n          value: 0.0\r\n        },\r\n        threshold: {\r\n          value: 0.1\r\n        },\r\n        useTexture: {\r\n          value: 1\r\n        },\r\n        tMixTexture: {\r\n          value: this.maskTexture\r\n        }\r\n      },\r\n      vertexShader: `varying vec2 vUv;\r\n        void main() {\r\n        vUv = vec2( uv.x, uv.y );\r\n        gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\r\n        }`,\r\n      fragmentShader: `uniform float mixRatio;\r\n        uniform sampler2D tDiffuse1;\r\n        uniform sampler2D tDiffuse2;\r\n        uniform sampler2D tMixTexture;\r\n        uniform int useTexture;\r\n        uniform float threshold;\r\n        varying vec2 vUv;\r\n        \r\n        void main() {\r\n\r\n        vec4 texel1 = texture2D( tDiffuse1, vUv );\r\n        vec4 texel2 = texture2D( tDiffuse2, vUv );\r\n\r\n        if (useTexture==1) {\r\n\r\n        vec4 transitionTexel = texture2D( tMixTexture, vUv );\r\n        float r = mixRatio * (1.0 + threshold * 2.0) - threshold;\r\n        float mixf=clamp((transitionTexel.r - r)*(1.0/threshold), 0.0, 1.0);\r\n\r\n        gl_FragColor = mix( texel1, texel2, mixf );\r\n        } else {\r\n\r\n        gl_FragColor = mix( texel2, texel1, mixRatio );\r\n\r\n        }\r\n        }`\r\n    });\r\n    let halfWidth = app.getWorldWidth() / 2;\r\n    let halfHeight = app.getWorldHeight() / 2;\r\n    this.world = new World(app, new THREE.OrthographicCamera(-halfWidth,\r\n      halfWidth, halfHeight, -halfHeight, -10, 10));\r\n\r\n    let geometry = new THREE.PlaneBufferGeometry(halfWidth * 2,\r\n      halfHeight * 2);\r\n\r\n    let quad = new THREE.Mesh(geometry, this.material);\r\n    this.world.scene.add(quad);\r\n\r\n    this.sceneA = world;\r\n    this.sceneB = app.world;\r\n\r\n    this.material.uniforms.tDiffuse1.value = this.sceneA.fbo.texture;\r\n    this.material.uniforms.tDiffuse2.value = this.sceneB.fbo.texture;\r\n\r\n    this.needChange = false;\r\n  }\r\n\r\n  setThreshold(value) {\r\n    this.material.uniforms.threshold.value = value;\r\n  }\r\n\r\n  useTexture(value) {\r\n    this.material.uniforms.useTexture.value = value ? 1 : 0;\r\n  }\r\n\r\n  setTexture(i) {\r\n    this.material.uniforms.tMixTexture.value = this.texture;\r\n  }\r\n\r\n  update() {\r\n    let value = Math.min(this.options.transition, 1);\r\n    value = Math.max(value, 0);\r\n    this.material.uniforms.mixRatio.value = value;\r\n    this.app.renderer.setClearColor(this.sceneB.clearColor || 0);\r\n    this.sceneB.update();\r\n    this.app.renderer.render(this.sceneB.scene, this.sceneB.camera, this.sceneB\r\n      .fbo, true);\r\n    this.app.renderer.setClearColor(this.sceneA.clearColor || 0);\r\n    this.sceneA.update();\r\n    this.app.renderer.render(this.sceneA.scene, this.sceneA.camera, this.sceneA\r\n      .fbo, true);\r\n    this.app.renderer.render(this.world.scene, this.world.camera, null, true);\r\n  }\r\n}\r\n\r\nexport {\r\n  Transitioner\r\n};","import { LoopManager } from './LoopManager.js';\r\nimport { EventManager } from './../events/EventManager';\r\n\r\nclass View {\r\n  constructor(world, camera, {\r\n    clearColor = 0x000000,\r\n    top = 0,\r\n    left = 0,\r\n    width = 1,\r\n    height = 1\r\n  }) {\r\n    this.world = world;\r\n    this.scene = world.scene;\r\n    this.worldWidth = world.app.getWorldWidth();\r\n    this.worldHeight = world.app.getWorldHeight();\r\n    this.renderer = world.app.renderer;\r\n    this.camera = camera || new THREE.PerspectiveCamera(45, this.worldWidth /\r\n      this.worldHeight, 0.01, 1000);\r\n    this.renderTargetParameters = {\r\n      minFilter: THREE.LinearFilter,\r\n      magFilter: THREE.LinearFilter,\r\n      format: THREE.RGBFormat,\r\n      stencilBuffer: false\r\n    };\r\n    this.isRTT = false;\r\n    this.clearColor = clearColor;\r\n    this.left = left;\r\n    this.top = top;\r\n    this.width = width;\r\n    this.height = height;\r\n\r\n    this.fbo = new THREE.WebGLRenderTarget(\r\n      this.worldWidth * this.width,\r\n      this.worldHeight * this.height, this.renderTargetParameters\r\n    );\r\n\r\n    this.resize();\r\n  }\r\n\r\n  render() {\r\n    var left = Math.floor(this.worldWidth * this.left);\r\n    var top = Math.floor(this.worldHeight * this.top);\r\n    var width = Math.floor(this.worldWidth * this.width);\r\n    var height = Math.floor(this.worldHeight * this.height);\r\n    this.renderer.setViewport(left, top, width, height);\r\n    this.renderer.setScissor(left, top, width, height);\r\n    this.renderer.setScissorTest(true);\r\n    this.renderer.setClearColor(this.clearColor);\r\n    this.renderer.render(this.scene, this.camera);\r\n  }\r\n\r\n  resize() {\r\n    this.worldWidth = this.world.app.getWorldWidth();\r\n    this.worldHeight = this.world.app.getWorldHeight();\r\n    let width = Math.floor(this.worldWidth * this.width);\r\n    let height = Math.floor(this.worldHeight * this.height);\r\n    if (this.camera.type === 'PerspectiveCamera') {\r\n      this.camera.aspect = width / height;\r\n      this.camera.updateProjectionMatrix();\r\n    } else {\r\n      this.camera.left = -width / 2;\r\n      this.camera.right = width / 2;\r\n      this.camera.top = height / 2;\r\n      this.camera.bottom = -height / 2;\r\n      this.camera.updateProjectionMatrix();\r\n    }\r\n  }\r\n}\r\n\r\nexport {\r\n  View\r\n};","/**\r\n * 用于事件处理\r\n * \r\n * */\r\nclass Signal {\r\n  constructor(type) {\r\n    this.type = type;\r\n    this.functionArr = [];\r\n  }\r\n\r\n  add(func) {\r\n    if (typeof func !== 'function') {\r\n      throw new NotFunctionError();\r\n    } else {\r\n      this.functionArr.push(func);\r\n    }\r\n  }\r\n\r\n  remove(func) {\r\n    return _.remove(this.functionArr, function(n) {\r\n      return n === func;\r\n    });\r\n  }\r\n\r\n  run(event, intersect) {\r\n    this.functionArr.forEach(\r\n      (func) => {\r\n        func(event, intersect);\r\n      });\r\n  }\r\n}\r\n\r\nexport {\r\n  Signal\r\n};","import { Signal } from './Signal';\r\n\r\n/**\r\n * 由于事件处理\r\n * \r\n * */\r\nclass Events {\r\n  constructor(list) {\r\n    list = list || ['press', 'tap', 'pressup', 'pan', 'swipe', 'click',\r\n      'mousedown', 'mouseup', 'touchstart', 'touchend', 'touchmove',\r\n      'mousemove'\r\n    ];\r\n    for (let eventItem of list) {\r\n      this[eventItem] = new Signal(eventItem);\r\n    }\r\n  }\r\n}\r\n\r\nexport {\r\n  Events\r\n};","class GUI extends THREE.Group {\r\n  constructor() {\r\n    super();\r\n    this.css = {\r\n      backgroundColor: \"rgba(0,0,0,0)\",\r\n      opacity: 1,\r\n      width: 1,\r\n      height: 1\r\n    };\r\n  }\r\n}\r\n\r\nclass Body extends GUI {\r\n  constructor(world, css) {\r\n    super();\r\n    this.world = world;\r\n    this.distanceFromCamera = 50;\r\n    this.css = _.defaults(css || {}, this.css);\r\n    this.canvas = document.createElement(\"canvas\");\r\n    var spriteMaterial = new THREE.SpriteMaterial({\r\n      map: this.canvas,\r\n      color: 0xffffff\r\n    });\r\n    this.element = new THREE.Sprite(spriteMaterial);\r\n    this.vector = new THREE.Vector3();\r\n    this.update();\r\n    this.add(this.element);\r\n  }\r\n\r\n  lockToScreen() {\r\n    var c = this.world.camera;\r\n    c.getWorldDirection(this.vector);\r\n    this.rotation.set(c.rotation.x, c.rotation.y, c.rotation.z);\r\n    this.position.set(c.position.x + this.vector.x * this.distanceFromCamera,\r\n      c.position.y +\r\n      this.vector.y * this.distanceFromCamera, c.position.z + this.vector.z *\r\n      this.distanceFromCamera\r\n    );\r\n  }\r\n\r\n  update() {\r\n    this.canvas.width = this.css.width;\r\n    this.canvas.height = this.css.height;\r\n    let ctx = this.canvas.getContext(\"2d\");\r\n    ctx.fillStyle = this.css.backgroundColor;\r\n    ctx.fillRect(0, 0, this.css.width, this.css.height);\r\n    var texture = new THREE.CanvasTexture(this.canvas);\r\n    texture.generateMipmaps = false;\r\n    texture.minFilter = THREE.LinearFilter;\r\n    texture.magFilter = THREE.LinearFilter;\r\n    var spriteMaterial = new THREE.SpriteMaterial({\r\n      map: texture,\r\n      color: 0xffffff\r\n    });\r\n    this.element.material.dispose();\r\n    this.element.material = spriteMaterial;\r\n    this.element.scale.set(this.css.width / 4, this.css.height / 4, 1);\r\n  }\r\n}\r\n\r\nclass Div extends GUI {\r\n  constructor(world, css) {\r\n    super();\r\n    this.world = world;\r\n    this.css = _.defaults(css || {}, this.css);\r\n    this.canvas = document.createElement(\"canvas\");\r\n    var spriteMaterial = new THREE.SpriteMaterial({\r\n      map: canvas,\r\n      color: 0xffffff\r\n    });\r\n    this.element = new THREE.Sprite(spriteMaterial);\r\n    this.vector = new THREE.Vector3();\r\n    this.update();\r\n    this.add(this.element);\r\n  }\r\n\r\n  update() {\r\n    this.canvas.width = this.css.width;\r\n    this.canvas.height = this.css.height;\r\n    let ctx = this.canvas.getContext(\"2d\");\r\n    ctx.fillStyle = this.css.backgroundColor;\r\n    ctx.fillRect(0, 0, this.css.width, this.css.height);\r\n    var texture = new THREE.CanvasTexture(this.canvas);\r\n    texture.generateMipmaps = false;\r\n    texture.minFilter = THREE.LinearFilter;\r\n    texture.magFilter = THREE.LinearFilter;\r\n    var spriteMaterial = new THREE.SpriteMaterial({\r\n      map: texture,\r\n      color: 0xffffff\r\n    });\r\n    this.element.material.dispose();\r\n    this.element.material = spriteMaterial;\r\n    this.element.scale.set(this.css.width / 4, this.css.height / 4, 1);\r\n  }\r\n}\r\n\r\nclass Txt extends THREE.Mesh {\r\n  constructor(text, css) {\r\n    css = _.defaults(css || {}, {\r\n      fontStyle: \"normal\",\r\n      fontVariant: \"normal\",\r\n      fontSize: 12,\r\n      fontWeight: \"normal\",\r\n      fontFamily: \"微软雅黑\",\r\n      color: \"#ffffff\",\r\n      textAlign: \"center\",\r\n      backgroundColor: \"rgba(0,0,0,0)\",\r\n      opacity: 1,\r\n      width: 1,\r\n      height: 1,\r\n      scale: {\r\n        x: 0.25,\r\n        y: 0.25,\r\n        z: 1,\r\n      }\r\n    });\r\n    let canvas = document.createElement(\"canvas\");\r\n    var material = new THREE.MeshBasicMaterial({\r\n      transparent: true,\r\n      needsUpdate: false,\r\n      color: 0xffffff\r\n    });\r\n    super(new THREE.PlaneBufferGeometry(css.width / 8, css.height / 8),\r\n      material);\r\n    this.text = text;\r\n    this.canvas = canvas;\r\n    this.css = css;\r\n    this.update();\r\n  }\r\n\r\n  update() {\r\n    this.canvas.width = this.css.width;\r\n    this.canvas.height = this.css.height;\r\n    let ctx = this.canvas.getContext(\"2d\");\r\n    ctx.fillStyle = this.css.backgroundColor;\r\n    ctx.fillRect(0, 0, this.css.width, this.css.height);\r\n    ctx.textAlign = this.css.textAlign;\r\n    ctx.font = this.css.fontStyle + \" \" + this.css.fontVariant + \" \" + this\r\n      .css.fontWeight +\r\n      \" \" + this.css.fontSize + \"px \" + this.css.fontFamily;\r\n    ctx.fillStyle = this.css.color;\r\n    let width = ctx.measureText(this.text)\r\n      .width;\r\n    ctx.fillText(this.text, this.css.width / 2, this.css.height / 2 + this.css\r\n      .fontSize / 4);\r\n    var texture = new THREE.CanvasTexture(this.canvas);\r\n    texture.generateMipmaps = false;\r\n    texture.minFilter = THREE.LinearFilter;\r\n    texture.magFilter = THREE.LinearFilter;\r\n    this.material.map = texture;\r\n    this.scale.set(this.css.scale.x, this.css.scale.y, this.css.scale.z);\r\n    this.material.opacity = this.css.opacity;\r\n  }\r\n}\r\n\r\n//$$.Img = function(url, css, callback) {\r\n//$$.DOM.call(this);\r\n//var that = this;\r\n//if ($$.Loader.RESOURCE.textures[url]) {\r\n//  var spriteMaterial = new THREE.SpriteMaterial({\r\n//    map: $$.Loader.RESOURCE.textures[url],\r\n//    color: 0xffffff\r\n//  });\r\n//  var sprite = new THREE.Sprite(spriteMaterial);\r\n//  that.element = sprite;\r\n//  that.add(that.element);\r\n//  this.css = $$.extends({}, [this.css, {\r\n//    width: $$.Loader.RESOURCE.textures[url].image.naturalWidth,\r\n//    height: $$.Loader.RESOURCE.textures[url].image.naturalHeight\r\n//  }, css]);\r\n//  sprite.scale.set(this.css.width / 4, this.css.height / 4, 1);\r\n//  sprite.material.opacity = that.css.opacity;\r\n//  if (callback) {\r\n//    callback();\r\n//  }\r\n//} else {\r\n//  that.element = {};\r\n//  $$.Loader.loadTexture([url], function(texture) {\r\n//    texture.generateMipmaps = false;\r\n//    texture.minFilter = THREE.LinearFilter;\r\n//    texture.magFilter = THREE.LinearFilter;\r\n//    var tmpProperty = that.element;\r\n//    var spriteMaterial = new THREE.SpriteMaterial({\r\n//      map: texture,\r\n//      color: 0xffffff\r\n//    });\r\n//    var sprite = new THREE.Sprite(spriteMaterial);\r\n//    that.element = sprite;\r\n//    that.add(that.element);\r\n//    this.css = $$.extends({}, [this.css, {\r\n//      width: texture.image.naturalWidth,\r\n//      height: texture.image.naturalHeight\r\n//    }, css]);\r\n//    if (css.opacity != null) {\r\n//      that.css.opacity = css.opacity;\r\n//    }\r\n//    sprite.scale.set(this.css.width / 4, this.css.height / 4, 1);\r\n//\r\n//    for (var i in tmpProperty) {\r\n//      that.element[i] = tmpProperty[i];\r\n//    }\r\n//    sprite.material.opacity = that.css.opacity;\r\n//    if (callback) {\r\n//      callback();\r\n//    }\r\n//  });\r\n//}\r\n//};\r\n//(function() {\r\n//var Super = function() {};\r\n//Super.prototype = $$.DOM.prototype;\r\n//$$.Img.prototype = new Super();\r\n//})();\r\n//\r\n//$$.Video = function(url, css) {\r\n//$$.DOM.call(this);\r\n//var that = this;\r\n//this.video = document.createElement(\"video\");\r\n//this.video.src = url;\r\n//var texture = new THREE.VideoTexture(this.video);\r\n//texture.generateMipmaps = false;\r\n//texture.minFilter = THREE.LinearFilter;\r\n//texture.magFilter = THREE.LinearFilter;\r\n//var spriteMaterial = new THREE.SpriteMaterial({\r\n//  map: texture,\r\n//  color: 0xffffff\r\n//});\r\n//var sprite = new THREE.Sprite(spriteMaterial);\r\n//that.element = sprite;\r\n//that.add(that.element);\r\n//this.css = $$.extends({}, [this.css, {\r\n//  width: texture.image.naturalWidth,\r\n//  height: texture.image.naturalHeight,\r\n//}, css]);\r\n//sprite.scale.set(this.css.width / 4, this.css.height / 4, 1);\r\n//};\r\n//(function() {\r\n//var Super = function() {};\r\n//Super.prototype = $$.DOM.prototype;\r\n//$$.Video.prototype = new Super();\r\n//})();\r\n\r\nexport {\r\n  GUI,\r\n  Body,\r\n  Txt,\r\n  Div\r\n};","class LoaderFactory {\r\n  constructor() {\r\n    let manager = new THREE.LoadingManager();\r\n    this.Resource = {\r\n      images: {},\r\n      materials: {},\r\n      textures: {},\r\n      models: {},\r\n      sounds: {},\r\n      fonts: {},\r\n      unloaded: {\r\n        textures: [],\r\n        models: [],\r\n        sounds: [],\r\n        fonts: [],\r\n        images: []\r\n      }\r\n    };\r\n\r\n    manager.onStart = (url, itemsLoaded, itemsTotal) => {\r\n      if (this.onStart && typeof this.onStart === 'function') {\r\n        this.onStart(url, itemsLoaded, itemsTotal);\r\n      }\r\n    };\r\n\r\n    manager.onLoad = () => {\r\n      if (this.onLoad && typeof this.onLoad === 'function') {\r\n        this.onLoad();\r\n      }\r\n    };\r\n\r\n    manager.onProgress = (url, itemsLoaded, itemsTotal) => {\r\n      if (this.onProgress && typeof this.onProgress === 'function') {\r\n        this.onProgress(url, itemsLoaded, itemsTotal);\r\n      }\r\n    };\r\n\r\n    manager.onError = (url) => {\r\n      if (this.onError && typeof this.onError === 'function') {\r\n        this.onError(url);\r\n      }\r\n    };\r\n\r\n    this.imageLoader = new THREE.ImageLoader(manager);\r\n    this.textureLoader = new THREE.TextureLoader(manager);\r\n    this.audioListener = new THREE.AudioListener(manager);\r\n  }\r\n\r\n  loadImage(key, src, sucFunc, errFunc) {\r\n    return this.imageLoader.load(src,\r\n      (data) => {\r\n        this.Resource.images[key] = data;\r\n        if (sucFunc) sucFunc(data);\r\n      }, undefined, (err) => {\r\n        this.Resource.unloaded.images.push(src);\r\n        if (errFunc) errFunc(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  loadTexture(key, src, sucFunc, errFunc) {\r\n    return this.textureLoader.load(src,\r\n      (data) => {\r\n        this.Resource.textures[key] = data;\r\n        if (sucFunc) sucFunc(data);\r\n      }, undefined, (err) => {\r\n        this.Resource.unloaded.textures.push(src);\r\n        if (errFunc) errFunc(err);\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\nexport {\r\n  LoaderFactory\r\n};","let CopyShader = {\r\n  uniforms: {\r\n    'tDiffuse': { value: null },\r\n    'opacity': { value: 1.0 }\r\n  },\r\n\r\n  vertexShader: `\r\n    varying vec2 vUv;\r\n    void main() {\r\n      vUv = uv;\r\n      gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\r\n    }`,\r\n\r\n  fragmentShader: `\r\n    uniform float opacity;\r\n    uniform sampler2D tDiffuse;\r\n    varying vec2 vUv;\r\n    void main() {\r\n      vec4 texel = texture2D( tDiffuse, vUv );\r\n      gl_FragColor = opacity * texel;\r\n    }`\r\n};\r\n\r\nexport {\r\n  CopyShader\r\n};","class Pass {\r\n  constructor(effectComposer, renderToScreen = false) {\r\n    // if set to true, the pass is processed by the composer\r\n    this.enabled = true;\r\n    // if set to true, the pass indicates to swap read and write buffer after rendering\r\n    this.needsSwap = true;\r\n    // if set to true, the pass clears its buffer before rendering\r\n    this.clear = false;\r\n    // if set to true, the result of the pass is rendered to screen\r\n    this.renderToScreen = renderToScreen;\r\n    if (effectComposer) {\r\n      effectComposer.addPass(this);\r\n    }\r\n  }\r\n  setSize(width, height) {}\r\n  render(renderer, writeBuffer, readBuffer, delta, maskActive) {}\r\n}\r\n\r\nexport {\r\n  Pass\r\n};","import { Pass } from './Pass.js';\r\n\r\nclass ShaderPass extends Pass {\r\n  constructor(shader, effectComposer, renderToScreen = false,\r\n    textureID = \"tDiffuse\") {\r\n    super(effectComposer, renderToScreen);\r\n    this.textureID = textureID;\r\n\r\n    if (shader instanceof THREE.ShaderMaterial) {\r\n      this.uniforms = shader.uniforms;\r\n      this.material = shader;\r\n    } else if (shader) {\r\n      this.uniforms = THREE.UniformsUtils.clone(shader.uniforms);\r\n      this.material = new THREE.ShaderMaterial({\r\n        defines: shader.defines || {},\r\n        uniforms: this.uniforms,\r\n        vertexShader: shader.vertexShader,\r\n        fragmentShader: shader.fragmentShader\r\n      });\r\n    }\r\n\r\n    this.camera = new THREE.OrthographicCamera(-1, 1, 1, -1, 0, 1);\r\n    this.scene = new THREE.Scene();\r\n    this.quad = new THREE.Mesh(new THREE.PlaneBufferGeometry(2, 2), null);\r\n    this.quad.frustumCulled = false;\r\n    this.scene.add(this.quad);\r\n  }\r\n\r\n  render(renderer, writeBuffer, readBuffer) {\r\n    if (this.uniforms[this.textureID]) {\r\n      this.uniforms[this.textureID].value = readBuffer.texture;\r\n    }\r\n\r\n    this.quad.material = this.material;\r\n    if (this.renderToScreen) {\r\n      renderer.render(this.scene, this.camera);\r\n    } else {\r\n      renderer.render(this.scene, this.camera, writeBuffer, this.clear);\r\n    }\r\n  }\r\n}\r\n\r\nexport {\r\n  ShaderPass\r\n};","import { Pass } from './Pass.js';\r\n\r\nclass RenderPass extends Pass {\r\n  constructor(scene, camera, overrideMaterial, clearColor, clearAlpha = 0) {\r\n    super();\r\n    this.scene = scene;\r\n    this.camera = camera;\r\n    this.overrideMaterial = overrideMaterial;\r\n    this.clearColor = clearColor;\r\n    this.clearAlpha = clearAlpha;\r\n    this.clear = true;\r\n    this.clearDepth = false;\r\n    this.needsSwap = false;\r\n  }\r\n\r\n  render(renderer, writeBuffer, readBuffer, delta, maskActive) {\r\n    let oldAutoClear = renderer.autoClear;\r\n    renderer.autoClear = false;\r\n    this.scene.overrideMaterial = this.overrideMaterial;\r\n    let oldClearColor, oldClearAlpha;\r\n    if (this.clearColor) {\r\n      oldClearColor = renderer.getClearColor()\r\n        .getHex();\r\n      oldClearAlpha = renderer.getClearAlpha();\r\n      renderer.setClearColor(this.clearColor, this.clearAlpha);\r\n    }\r\n    if (this.clearDepth) {\r\n      renderer.clearDepth();\r\n    }\r\n    renderer.render(this.scene, this.camera, this.renderToScreen ? undefined :\r\n      readBuffer, this.clear);\r\n    if (this.clearColor) {\r\n      renderer.setClearColor(oldClearColor, oldClearAlpha);\r\n    }\r\n    this.scene.overrideMaterial = undefined;\r\n    renderer.autoClear = oldAutoClear;\r\n  }\r\n}\r\n\r\nexport {\r\n  RenderPass\r\n};","import { CopyShader } from './shader/CopyShader.js';\r\nimport { ShaderPass } from './ShaderPass.js';\r\nimport { RenderPass } from './RenderPass.js';\r\n\r\nclass EffectComposer {\r\n  constructor(world, options = {}, renderTarget) {\r\n    options = _.defaults(options, {\r\n      renderer: undefined,\r\n      camera: undefined,\r\n      scene: undefined,\r\n      overrideMaterial: undefined,\r\n      clearColor: undefined,\r\n      clearAlpha: 0\r\n    });\r\n    this.renderer = options.renderer || world.app.renderer;\r\n    if (renderTarget === undefined) {\r\n      let parameters = {\r\n        minFilter: THREE.LinearFilter,\r\n        magFilter: THREE.LinearFilter,\r\n        format: THREE.RGBAFormat,\r\n        stencilBuffer: false\r\n      };\r\n      let size = this.renderer.getDrawingBufferSize();\r\n      renderTarget = new THREE.WebGLRenderTarget(size.width, size.height,\r\n        parameters);\r\n      renderTarget.texture.name = 'EffectComposer.rt1';\r\n    }\r\n\r\n    this.renderTarget1 = renderTarget;\r\n    this.renderTarget2 = renderTarget.clone();\r\n    this.renderTarget2.texture.name = 'EffectComposer.rt2';\r\n    this.writeBuffer = this.renderTarget1;\r\n    this.readBuffer = this.renderTarget2;\r\n\r\n    this.passes = [];\r\n    this.copyPass = new ShaderPass(CopyShader);\r\n\r\n    this.addPass(new RenderPass(options.scene || world.scene,\r\n      options.scene || world.camera));\r\n  }\r\n\r\n  swapBuffers() {\r\n    let tmp = this.readBuffer;\r\n    this.readBuffer = this.writeBuffer;\r\n    this.writeBuffer = tmp;\r\n  }\r\n\r\n  addPass(pass) {\r\n    this.passes.push(pass);\r\n    let size = this.renderer.getDrawingBufferSize();\r\n    pass.setSize(size.width, size.height);\r\n  }\r\n\r\n  insertPass(pass, index) {\r\n    this.passes.splice(index, 0, pass);\r\n  }\r\n\r\n  render(delta) {\r\n    let maskActive = false;\r\n    let pass, i, il = this.passes.length;\r\n    for (i = 0; i < il; i++) {\r\n      pass = this.passes[i];\r\n      if (pass.enabled === false) continue;\r\n      pass.render(this.renderer, this.writeBuffer, this.readBuffer, delta,\r\n        maskActive);\r\n\r\n      if (pass.needsSwap) {\r\n        if (maskActive) {\r\n          let context = this.renderer.context;\r\n          context.stencilFunc(context.NOTEQUAL, 1, 0xffffffff);\r\n          this.copyPass.render(this.renderer, this.writeBuffer, this.readBuffer,\r\n            delta);\r\n          context.stencilFunc(context.EQUAL, 1, 0xffffffff);\r\n        }\r\n        this.swapBuffers();\r\n      }\r\n\r\n      if (THREE.MaskPass !== undefined) {\r\n        if (pass instanceof THREE.MaskPass) {\r\n          maskActive = true;\r\n        } else if (pass instanceof THREE.ClearMaskPass) {\r\n          maskActive = false;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  reset(renderTarget) {\r\n    if (renderTarget === undefined) {\r\n      let size = this.renderer.getDrawingBufferSize();\r\n      renderTarget = this.renderTarget1.clone();\r\n      renderTarget.setSize(size.width, size.height);\r\n    }\r\n    this.renderTarget1.dispose();\r\n    this.renderTarget2.dispose();\r\n    this.renderTarget1 = renderTarget;\r\n    this.renderTarget2 = renderTarget.clone();\r\n    this.writeBuffer = this.renderTarget1;\r\n    this.readBuffer = this.renderTarget2;\r\n  }\r\n\r\n  setSize(width, height) {\r\n    this.renderTarget1.setSize(width, height);\r\n    this.renderTarget2.setSize(width, height);\r\n    for (let i = 0; i < this.passes.length; i++) {\r\n      this.passes[i].setSize(width, height);\r\n    }\r\n  }\r\n}\r\n\r\nexport {\r\n  EffectComposer\r\n};","let DotScreenShader = {\r\n  uniforms: {\r\n    \"tDiffuse\": { value: null },\r\n    \"tSize\": { value: new THREE.Vector2(256, 256) },\r\n    \"center\": { value: new THREE.Vector2(0.5, 0.5) },\r\n    \"angle\": { value: 1.57 },\r\n    \"scale\": { value: 1.0 }\r\n  },\r\n\r\n  vertexShader: [\r\n    \"varying vec2 vUv;\",\r\n    \"void main() {\",\r\n    \"vUv = uv;\",\r\n    \"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\r\n    \"}\"\r\n  ].join(\"\\n\"),\r\n\r\n  fragmentShader: [\r\n    \"uniform vec2 center;\",\r\n    \"uniform float angle;\",\r\n    \"uniform float scale;\",\r\n    \"uniform vec2 tSize;\",\r\n    \"uniform sampler2D tDiffuse;\",\r\n    \"varying vec2 vUv;\",\r\n    \"float pattern() {\",\r\n    \"float s = sin( angle ), c = cos( angle );\",\r\n    \"vec2 tex = vUv * tSize - center;\",\r\n    \"vec2 point = vec2( c * tex.x - s * tex.y, s * tex.x + c * tex.y ) * scale;\",\r\n    \"return ( sin( point.x ) * sin( point.y ) ) * 4.0;\",\r\n    \"}\",\r\n\r\n    \"void main() {\",\r\n    \"vec4 color = texture2D( tDiffuse, vUv );\",\r\n    \"float average = ( color.r + color.g + color.b ) / 3.0;\",\r\n    \"gl_FragColor = vec4( vec3( average * 10.0 - 5.0 + pattern() ), color.a );\",\r\n    \"}\"\r\n  ].join(\"\\n\")\r\n};\r\n\r\nexport {\r\n  DotScreenShader\r\n};","import { Pass } from './Pass.js';\r\nimport { DotScreenShader } from './shader/DotScreenShader.js';\r\n\r\nclass DotScreenPass extends Pass {\r\n  constructor(center, angle, scale, effectComposer, renderToScreen = false) {\r\n    super(effectComposer, renderToScreen);\r\n    this.uniforms = THREE.UniformsUtils.clone(DotScreenShader.uniforms);\r\n    if (center !== undefined) this.uniforms[\"center\"].value.copy(center);\r\n    if (angle !== undefined) this.uniforms[\"angle\"].value = angle;\r\n    if (scale !== undefined) this.uniforms[\"scale\"].value = scale;\r\n\r\n    this.material = new THREE.ShaderMaterial({\r\n      uniforms: this.uniforms,\r\n      vertexShader: DotScreenShader.vertexShader,\r\n      fragmentShader: DotScreenShader.fragmentShader\r\n    });\r\n\r\n    this.camera = new THREE.OrthographicCamera(-1, 1, 1, -1, 0, 1);\r\n    this.scene = new THREE.Scene();\r\n    this.quad = new THREE.Mesh(new THREE.PlaneBufferGeometry(2, 2), null);\r\n    this.quad.frustumCulled = false; // Avoid getting clipped\r\n    this.scene.add(this.quad);\r\n  }\r\n\r\n  render(renderer, writeBuffer, readBuffer, delta, maskActive) {\r\n    this.uniforms[\"tDiffuse\"].value = readBuffer.texture;\r\n    this.uniforms[\"tSize\"].value.set(readBuffer.width, readBuffer.height);\r\n\r\n    this.quad.material = this.material;\r\n\r\n    if (this.renderToScreen) {\r\n      renderer.render(this.scene, this.camera);\r\n    } else {\r\n      renderer.render(this.scene, this.camera, writeBuffer, this.clear);\r\n    }\r\n  }\r\n}\r\n\r\nexport {\r\n  DotScreenPass\r\n};","let GlitchShader = {\r\n  uniforms: {\r\n    \"tDiffuse\": { value: null }, //diffuse texture\r\n    \"tDisp\": { value: null }, //displacement texture for digital glitch squares\r\n    \"byp\": { value: 0 }, //apply the glitch ?\r\n    \"amount\": { value: 0.08 },\r\n    \"angle\": { value: 0.02 },\r\n    \"seed\": { value: 0.02 },\r\n    \"seed_x\": { value: 0.02 }, //-1,1\r\n    \"seed_y\": { value: 0.02 }, //-1,1\r\n    \"distortion_x\": { value: 0.5 },\r\n    \"distortion_y\": { value: 0.6 },\r\n    \"col_s\": { value: 0.05 }\r\n  },\r\n\r\n  vertexShader: [\r\n    \"varying vec2 vUv;\",\r\n    \"void main() {\",\r\n    \"vUv = uv;\",\r\n    \"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\r\n    \"}\"\r\n  ].join(\"\\n\"),\r\n\r\n  fragmentShader: [\r\n    \"uniform int byp;\", //should we apply the glitch ?\r\n    \"uniform sampler2D tDiffuse;\",\r\n    \"uniform sampler2D tDisp;\",\r\n\r\n    \"uniform float amount;\",\r\n    \"uniform float angle;\",\r\n    \"uniform float seed;\",\r\n    \"uniform float seed_x;\",\r\n    \"uniform float seed_y;\",\r\n    \"uniform float distortion_x;\",\r\n    \"uniform float distortion_y;\",\r\n    \"uniform float col_s;\",\r\n\r\n    \"varying vec2 vUv;\",\r\n\r\n    \"float rand(vec2 co){\",\r\n    \"return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\",\r\n    \"}\",\r\n\r\n    \"void main() {\",\r\n    \"if(byp<1) {\",\r\n    \"vec2 p = vUv;\",\r\n    \"float xs = floor(gl_FragCoord.x / 0.5);\",\r\n    \"float ys = floor(gl_FragCoord.y / 0.5);\",\r\n    //based on staffantans glitch shader for unity https://github.com/staffantan/unityglitch\r\n    \"vec4 normal = texture2D (tDisp, p*seed*seed);\",\r\n    \"if(p.y<distortion_x+col_s && p.y>distortion_x-col_s*seed) {\",\r\n    \"if(seed_x>0.){\",\r\n    \"p.y = 1. - (p.y + distortion_y);\",\r\n    \"}\",\r\n    \"else {\",\r\n    \"p.y = distortion_y;\",\r\n    \"}\",\r\n    \"}\",\r\n    \"if(p.x<distortion_y+col_s && p.x>distortion_y-col_s*seed) {\",\r\n    \"if(seed_y>0.){\",\r\n    \"p.x=distortion_x;\",\r\n    \"}\",\r\n    \"else {\",\r\n    \"p.x = 1. - (p.x + distortion_x);\",\r\n    \"}\",\r\n    \"}\",\r\n    \"p.x+=normal.x*seed_x*(seed/5.);\",\r\n    \"p.y+=normal.y*seed_y*(seed/5.);\",\r\n    //base from RGB shift shader\r\n    \"vec2 offset = amount * vec2( cos(angle), sin(angle));\",\r\n    \"vec4 cr = texture2D(tDiffuse, p + offset);\",\r\n    \"vec4 cga = texture2D(tDiffuse, p);\",\r\n    \"vec4 cb = texture2D(tDiffuse, p - offset);\",\r\n    \"gl_FragColor = vec4(cr.r, cga.g, cb.b, cga.a);\",\r\n    //add noise\r\n    \"vec4 snow = 200.*amount*vec4(rand(vec2(xs * seed,ys * seed*50.))*0.2);\",\r\n    \"gl_FragColor = gl_FragColor+ snow;\",\r\n    \"}\",\r\n    \"else {\",\r\n    \"gl_FragColor=texture2D (tDiffuse, vUv);\",\r\n    \"}\",\r\n    \"}\"\r\n  ].join(\"\\n\")\r\n};\r\n\r\nexport {\r\n  GlitchShader\r\n};","import { Pass } from './Pass.js';\r\nimport { GlitchShader } from './shader/GlitchShader.js';\r\n\r\nclass GlitchPass extends Pass {\r\n  constructor(size = 64, goWild = false, effectComposer, renderToScreen = false) {\r\n    super(effectComposer, renderToScreen);\r\n    this.uniforms = THREE.UniformsUtils.clone(GlitchShader.uniforms);\r\n    this.uniforms[\"tDisp\"].value = this.generateHeightmap(size);\r\n\r\n    this.material = new THREE.ShaderMaterial({\r\n      uniforms: this.uniforms,\r\n      vertexShader: GlitchShader.vertexShader,\r\n      fragmentShader: GlitchShader.fragmentShader\r\n    });\r\n\r\n    this.camera = new THREE.OrthographicCamera(-1, 1, 1, -1, 0, 1);\r\n    this.scene = new THREE.Scene();\r\n\r\n    this.quad = new THREE.Mesh(new THREE.PlaneBufferGeometry(2, 2), null);\r\n    this.quad.frustumCulled = false;\r\n    this.scene.add(this.quad);\r\n\r\n    this.goWild = false;\r\n    this.curF = 0;\r\n    this.generateTrigger();\r\n  }\r\n\r\n  render(renderer, writeBuffer, readBuffer, delta, maskActive) {\r\n    this.uniforms[\"tDiffuse\"].value = readBuffer.texture;\r\n    this.uniforms['seed'].value = Math.random();\r\n    this.uniforms['byp'].value = 0;\r\n\r\n    if (this.curF % this.randX == 0 || this.goWild == true) {\r\n      this.uniforms['amount'].value = Math.random() / 30;\r\n      this.uniforms['angle'].value = THREE.Math.randFloat(-Math.PI, Math.PI);\r\n      this.uniforms['seed_x'].value = THREE.Math.randFloat(-1, 1);\r\n      this.uniforms['seed_y'].value = THREE.Math.randFloat(-1, 1);\r\n      this.uniforms['distortion_x'].value = THREE.Math.randFloat(0, 1);\r\n      this.uniforms['distortion_y'].value = THREE.Math.randFloat(0, 1);\r\n      this.curF = 0;\r\n      this.generateTrigger();\r\n    } else if (this.curF % this.randX < this.randX / 5) {\r\n      this.uniforms['amount'].value = Math.random() / 90;\r\n      this.uniforms['angle'].value = THREE.Math.randFloat(-Math.PI, Math.PI);\r\n      this.uniforms['distortion_x'].value = THREE.Math.randFloat(0, 1);\r\n      this.uniforms['distortion_y'].value = THREE.Math.randFloat(0, 1);\r\n      this.uniforms['seed_x'].value = THREE.Math.randFloat(-0.3, 0.3);\r\n      this.uniforms['seed_y'].value = THREE.Math.randFloat(-0.3, 0.3);\r\n    } else if (this.goWild == false) {\r\n      this.uniforms['byp'].value = 1;\r\n    }\r\n\r\n    this.curF++;\r\n    this.quad.material = this.material;\r\n\r\n    if (this.renderToScreen) {\r\n      renderer.render(this.scene, this.camera);\r\n    } else {\r\n      renderer.render(this.scene, this.camera, writeBuffer, this.clear);\r\n    }\r\n  }\r\n\r\n  generateTrigger() {\r\n    this.randX = THREE.Math.randInt(120, 240);\r\n  }\r\n\r\n  generateHeightmap(size) {\r\n    let dataArr = new Float32Array(size * size * 3);\r\n    let length = size * size;\r\n\r\n    for (let i = 0; i < length; i++) {\r\n      let val = THREE.Math.randFloat(0, 1);\r\n      dataArr[i * 3 + 0] = val;\r\n      dataArr[i * 3 + 1] = val;\r\n      dataArr[i * 3 + 2] = val;\r\n    }\r\n\r\n    let texture = new THREE.DataTexture(dataArr, size, size,\r\n      THREE.RGBFormat, THREE.FloatType);\r\n    texture.needsUpdate = true;\r\n    return texture;\r\n  }\r\n}\r\n\r\nexport {\r\n  GlitchPass\r\n};","import { Pass } from './Pass.js';\r\nimport { CopyShader } from './shader/CopyShader.js';\r\n\r\nclass OutlinePass extends Pass {\r\n  constructor(resolution, world, selectedObjects = [], effectComposer) {\r\n    super(undefined, false);\r\n    this.BlurDirectionX = new THREE.Vector2(1.0, 0.0);\r\n    this.BlurDirectionY = new THREE.Vector2(0.0, 1.0);\r\n    this.renderScene = world.scene;\r\n    this.renderCamera = world.camera;\r\n    this.selectedObjects = selectedObjects;\r\n    this.visibleEdgeColor = new THREE.Color(1, 1, 1);\r\n    this.hiddenEdgeColor = new THREE.Color(0.1, 0.04, 0.02);\r\n    this.edgeGlow = 0.0;\r\n    this.usePatternTexture = false;\r\n    this.edgeThickness = 1.0;\r\n    this.edgeStrength = 3.0;\r\n    this.downSampleRatio = 2;\r\n    this.pulsePeriod = 0;\r\n\r\n    this.resolution = (resolution !== undefined) ? new THREE.Vector2(\r\n      resolution.x, resolution.y) : new THREE.Vector2(256, 256);\r\n\r\n    let pars = {\r\n      minFilter: THREE.LinearFilter,\r\n      magFilter: THREE.LinearFilter,\r\n      format: THREE.RGBAFormat\r\n    };\r\n\r\n    let resx = Math.round(this.resolution.x / this.downSampleRatio);\r\n    let resy = Math.round(this.resolution.y / this.downSampleRatio);\r\n\r\n    this.maskBufferMaterial = new THREE.MeshBasicMaterial({ color: 0xffffff });\r\n    this.maskBufferMaterial.side = THREE.DoubleSide;\r\n    this.renderTargetMaskBuffer = new THREE.WebGLRenderTarget(\r\n    \tthis.resolution.x, this.resolution.y, pars);\r\n    this.renderTargetMaskBuffer.texture.name = \"OutlinePass.mask\";\r\n    this.renderTargetMaskBuffer.texture.generateMipmaps = false;\r\n\r\n    this.depthMaterial = new THREE.MeshDepthMaterial();\r\n    this.depthMaterial.side = THREE.DoubleSide;\r\n    this.depthMaterial.depthPacking = THREE.RGBADepthPacking;\r\n    this.depthMaterial.blending = THREE.NoBlending;\r\n\r\n    this.prepareMaskMaterial = this.getPrepareMaskMaterial();\r\n    this.prepareMaskMaterial.side = THREE.DoubleSide;\r\n    this.prepareMaskMaterial.fragmentShader = replaceDepthToViewZ(this.prepareMaskMaterial\r\n      .fragmentShader, this.renderCamera);\r\n\r\n    this.renderTargetDepthBuffer = new THREE.WebGLRenderTarget(this.resolution\r\n      .x,\r\n      this.resolution.y, pars);\r\n    this.renderTargetDepthBuffer.texture.name = \"OutlinePass.depth\";\r\n    this.renderTargetDepthBuffer.texture.generateMipmaps = false;\r\n\r\n    this.renderTargetMaskDownSampleBuffer = new THREE.WebGLRenderTarget(resx,\r\n      resy, pars);\r\n    this.renderTargetMaskDownSampleBuffer.texture.name =\r\n      \"OutlinePass.depthDownSample\";\r\n    this.renderTargetMaskDownSampleBuffer.texture.generateMipmaps = false;\r\n\r\n    this.renderTargetBlurBuffer1 = new THREE.WebGLRenderTarget(resx, resy,\r\n      pars);\r\n    this.renderTargetBlurBuffer1.texture.name = \"OutlinePass.blur1\";\r\n    this.renderTargetBlurBuffer1.texture.generateMipmaps = false;\r\n    this.renderTargetBlurBuffer2 = new THREE.WebGLRenderTarget(Math.round(\r\n      resx /\r\n      2), Math.round(resy / 2), pars);\r\n    this.renderTargetBlurBuffer2.texture.name = \"OutlinePass.blur2\";\r\n    this.renderTargetBlurBuffer2.texture.generateMipmaps = false;\r\n\r\n    this.edgeDetectionMaterial = this.getEdgeDetectionMaterial();\r\n    this.renderTargetEdgeBuffer1 = new THREE.WebGLRenderTarget(resx, resy,\r\n      pars);\r\n    this.renderTargetEdgeBuffer1.texture.name = \"OutlinePass.edge1\";\r\n    this.renderTargetEdgeBuffer1.texture.generateMipmaps = false;\r\n    this.renderTargetEdgeBuffer2 = new THREE.WebGLRenderTarget(Math.round(\r\n      resx /\r\n      2), Math.round(resy / 2), pars);\r\n    this.renderTargetEdgeBuffer2.texture.name = \"OutlinePass.edge2\";\r\n    this.renderTargetEdgeBuffer2.texture.generateMipmaps = false;\r\n\r\n    let MAX_EDGE_THICKNESS = 4;\r\n    let MAX_EDGE_GLOW = 4;\r\n\r\n    this.separableBlurMaterial1 = this.getSeperableBlurMaterial(\r\n      MAX_EDGE_THICKNESS);\r\n    this.separableBlurMaterial1.uniforms[\"texSize\"].value = new THREE.Vector2(\r\n      resx, resy);\r\n    this.separableBlurMaterial1.uniforms[\"kernelRadius\"].value = 1;\r\n    this.separableBlurMaterial2 = this.getSeperableBlurMaterial(MAX_EDGE_GLOW);\r\n    this.separableBlurMaterial2.uniforms[\"texSize\"].value = new THREE.Vector2(\r\n      Math.round(resx / 2), Math.round(resy / 2));\r\n    this.separableBlurMaterial2.uniforms[\"kernelRadius\"].value =\r\n      MAX_EDGE_GLOW;\r\n\r\n    // Overlay material\r\n    this.overlayMaterial = this.getOverlayMaterial();\r\n\r\n    this.copyUniforms = THREE.UniformsUtils.clone(CopyShader.uniforms);\r\n    this.copyUniforms[\"opacity\"].value = 1.0;\r\n\r\n    this.materialCopy = new THREE.ShaderMaterial({\r\n      uniforms: this.copyUniforms,\r\n      vertexShader: CopyShader.vertexShader,\r\n      fragmentShader: CopyShader.fragmentShader,\r\n      blending: THREE.NoBlending,\r\n      depthTest: false,\r\n      depthWrite: false,\r\n      transparent: true\r\n    });\r\n\r\n    this.enabled = true;\r\n    this.needsSwap = false;\r\n\r\n    this.oldClearColor = new THREE.Color();\r\n    this.oldClearAlpha = 1;\r\n\r\n    this.camera = new THREE.OrthographicCamera(-1, 1, 1, -1, 0, 1);\r\n    this.scene = new THREE.Scene();\r\n\r\n    this.quad = new THREE.Mesh(new THREE.PlaneBufferGeometry(2, 2), null);\r\n    this.quad.frustumCulled = false; // Avoid getting clipped\r\n    this.scene.add(this.quad);\r\n\r\n    this.tempPulseColor1 = new THREE.Color();\r\n    this.tempPulseColor2 = new THREE.Color();\r\n    this.textureMatrix = new THREE.Matrix4();\r\n\r\n    function replaceDepthToViewZ(string, camera) {\r\n      let type = camera.isPerspectiveCamera ? 'perspective' : 'orthographic';\r\n      return string.replace(/DEPTH_TO_VIEW_Z/g, type + 'DepthToViewZ');\r\n    }\r\n\r\n    if (effectComposer) {\r\n      effectComposer.addPass(this);\r\n    }\r\n  }\r\n\r\n  dispose() {\r\n    this.renderTargetMaskBuffer.dispose();\r\n    this.renderTargetDepthBuffer.dispose();\r\n    this.renderTargetMaskDownSampleBuffer.dispose();\r\n    this.renderTargetBlurBuffer1.dispose();\r\n    this.renderTargetBlurBuffer2.dispose();\r\n    this.renderTargetEdgeBuffer1.dispose();\r\n    this.renderTargetEdgeBuffer2.dispose();\r\n  }\r\n\r\n  setSize(width, height) {\r\n    this.renderTargetMaskBuffer.setSize(width, height);\r\n\r\n    let resx = Math.round(width / this.downSampleRatio);\r\n    let resy = Math.round(height / this.downSampleRatio);\r\n    this.renderTargetMaskDownSampleBuffer.setSize(resx, resy);\r\n    this.renderTargetBlurBuffer1.setSize(resx, resy);\r\n    this.renderTargetEdgeBuffer1.setSize(resx, resy);\r\n    this.separableBlurMaterial1.uniforms[\"texSize\"].value = new THREE.Vector2(\r\n      resx, resy);\r\n\r\n    resx = Math.round(resx / 2);\r\n    resy = Math.round(resy / 2);\r\n\r\n    this.renderTargetBlurBuffer2.setSize(resx, resy);\r\n    this.renderTargetEdgeBuffer2.setSize(resx, resy);\r\n\r\n    this.separableBlurMaterial2.uniforms[\"texSize\"].value = new THREE.Vector2(\r\n      resx, resy);\r\n  }\r\n\r\n  changeVisibilityOfSelectedObjects(bVisible) {\r\n    function gatherSelectedMeshesCallBack(object) {\r\n      if (object instanceof THREE.Mesh) object.visible = bVisible;\r\n    }\r\n\r\n    for (let i = 0; i < this.selectedObjects.length; i++) {\r\n      let selectedObject = this.selectedObjects[i];\r\n      selectedObject.traverse(gatherSelectedMeshesCallBack);\r\n    }\r\n  }\r\n\r\n  changeVisibilityOfNonSelectedObjects(bVisible) {\r\n    let selectedMeshes = [];\r\n\r\n    function gatherSelectedMeshesCallBack(object) {\r\n      if (object instanceof THREE.Mesh) selectedMeshes.push(object);\r\n    }\r\n\r\n    for (let i = 0; i < this.selectedObjects.length; i++) {\r\n      let selectedObject = this.selectedObjects[i];\r\n      selectedObject.traverse(gatherSelectedMeshesCallBack);\r\n    }\r\n\r\n    function VisibilityChangeCallBack(object) {\r\n      if (object instanceof THREE.Mesh || object instanceof THREE.Line ||\r\n        object instanceof THREE.Sprite) {\r\n\r\n        let bFound = false;\r\n\r\n        for (let i = 0; i < selectedMeshes.length; i++) {\r\n          let selectedObjectId = selectedMeshes[i].id;\r\n          if (selectedObjectId === object.id) {\r\n            bFound = true;\r\n            break;\r\n          }\r\n        }\r\n\r\n        if (!bFound) {\r\n          let visibility = object.visible;\r\n          if (!bVisible || object.bVisible) object.visible = bVisible;\r\n          object.bVisible = visibility;\r\n        }\r\n      }\r\n    }\r\n\r\n    this.renderScene.traverse(VisibilityChangeCallBack);\r\n  }\r\n\r\n  updateTextureMatrix() {\r\n    this.textureMatrix.set(0.5, 0.0, 0.0, 0.5,\r\n      0.0, 0.5, 0.0, 0.5,\r\n      0.0, 0.0, 0.5, 0.5,\r\n      0.0, 0.0, 0.0, 1.0);\r\n    this.textureMatrix.multiply(this.renderCamera.projectionMatrix);\r\n    this.textureMatrix.multiply(this.renderCamera.matrixWorldInverse);\r\n  }\r\n\r\n  render(renderer, writeBuffer, readBuffer, delta, maskActive) {\r\n\r\n    if (this.selectedObjects.length === 0) return;\r\n\r\n    this.oldClearColor.copy(renderer.getClearColor());\r\n    this.oldClearAlpha = renderer.getClearAlpha();\r\n    let oldAutoClear = renderer.autoClear;\r\n\r\n    renderer.autoClear = false;\r\n\r\n    if (maskActive) renderer.context.disable(renderer.context.STENCIL_TEST);\r\n\r\n    renderer.setClearColor(0xffffff, 1);\r\n\r\n    // Make selected objects invisible\r\n    this.changeVisibilityOfSelectedObjects(false);\r\n\r\n    let currentBackground = this.renderScene.background;\r\n    this.renderScene.background = null;\r\n\r\n    // 1. Draw Non Selected objects in the depth buffer\r\n    this.renderScene.overrideMaterial = this.depthMaterial;\r\n    renderer.render(this.renderScene, this.renderCamera, this.renderTargetDepthBuffer,\r\n      true);\r\n\r\n    // Make selected objects visible\r\n    this.changeVisibilityOfSelectedObjects(true);\r\n\r\n    // Update Texture Matrix for Depth compare\r\n    this.updateTextureMatrix();\r\n\r\n    // Make non selected objects invisible, and draw only the selected objects, by comparing the depth buffer of non selected objects\r\n    this.changeVisibilityOfNonSelectedObjects(false);\r\n    this.renderScene.overrideMaterial = this.prepareMaskMaterial;\r\n    this.prepareMaskMaterial.uniforms[\"cameraNearFar\"].value = new THREE.Vector2(\r\n      this.renderCamera.near, this.renderCamera.far);\r\n    this.prepareMaskMaterial.uniforms[\"depthTexture\"].value = this.renderTargetDepthBuffer\r\n      .texture;\r\n    this.prepareMaskMaterial.uniforms[\"textureMatrix\"].value = this.textureMatrix;\r\n    renderer.render(this.renderScene, this.renderCamera, this.renderTargetMaskBuffer,\r\n      true);\r\n    this.renderScene.overrideMaterial = null;\r\n    this.changeVisibilityOfNonSelectedObjects(true);\r\n\r\n    this.renderScene.background = currentBackground;\r\n\r\n    // 2. Downsample to Half resolution\r\n    this.quad.material = this.materialCopy;\r\n    this.copyUniforms[\"tDiffuse\"].value = this.renderTargetMaskBuffer.texture;\r\n    renderer.render(this.scene, this.camera, this.renderTargetMaskDownSampleBuffer,\r\n      true);\r\n\r\n    this.tempPulseColor1.copy(this.visibleEdgeColor);\r\n    this.tempPulseColor2.copy(this.hiddenEdgeColor);\r\n\r\n    if (this.pulsePeriod > 0) {\r\n      let scalar = (1 + 0.25) / 2 + Math.cos(performance.now() * 0.01 /\r\n        this.pulsePeriod) * (1.0 - 0.25) / 2;\r\n      this.tempPulseColor1.multiplyScalar(scalar);\r\n      this.tempPulseColor2.multiplyScalar(scalar);\r\n\r\n    }\r\n\r\n    // 3. Apply Edge Detection Pass\r\n    this.quad.material = this.edgeDetectionMaterial;\r\n    this.edgeDetectionMaterial.uniforms[\"maskTexture\"].value = this.renderTargetMaskDownSampleBuffer\r\n      .texture;\r\n    this.edgeDetectionMaterial.uniforms[\"texSize\"].value = new THREE.Vector2(\r\n      this.renderTargetMaskDownSampleBuffer.width, this.renderTargetMaskDownSampleBuffer\r\n      .height);\r\n    this.edgeDetectionMaterial.uniforms[\"visibleEdgeColor\"].value = this.tempPulseColor1;\r\n    this.edgeDetectionMaterial.uniforms[\"hiddenEdgeColor\"].value = this.tempPulseColor2;\r\n    renderer.render(this.scene, this.camera, this.renderTargetEdgeBuffer1,\r\n      true);\r\n\r\n    // 4. Apply Blur on Half res\r\n    this.quad.material = this.separableBlurMaterial1;\r\n    this.separableBlurMaterial1.uniforms[\"colorTexture\"].value = this.renderTargetEdgeBuffer1\r\n      .texture;\r\n    this.separableBlurMaterial1.uniforms[\"direction\"].value = this.BlurDirectionX;\r\n    this.separableBlurMaterial1.uniforms[\"kernelRadius\"].value = this.edgeThickness;\r\n    renderer.render(this.scene, this.camera, this.renderTargetBlurBuffer1,\r\n      true);\r\n    this.separableBlurMaterial1.uniforms[\"colorTexture\"].value = this.renderTargetBlurBuffer1\r\n      .texture;\r\n    this.separableBlurMaterial1.uniforms[\"direction\"].value = this\r\n      .BlurDirectionY;\r\n    renderer.render(this.scene, this.camera, this.renderTargetEdgeBuffer1,\r\n      true);\r\n\r\n    // Apply Blur on quarter res\r\n    this.quad.material = this.separableBlurMaterial2;\r\n    this.separableBlurMaterial2.uniforms[\"colorTexture\"].value = this.renderTargetEdgeBuffer1.texture;\r\n    this.separableBlurMaterial2.uniforms[\"direction\"].value = this.BlurDirectionX;\r\n    renderer.render(this.scene, this.camera, this.renderTargetBlurBuffer2, true);\r\n    this.separableBlurMaterial2.uniforms[\"colorTexture\"].value = this.renderTargetBlurBuffer2.texture;\r\n    this.separableBlurMaterial2.uniforms[\"direction\"].value = this.BlurDirectionY;\r\n    renderer.render(this.scene, this.camera, this.renderTargetEdgeBuffer2, true);\r\n\r\n    // Blend it additively over the input texture\r\n    this.quad.material = this.overlayMaterial;\r\n    this.overlayMaterial.uniforms[\"maskTexture\"].value = this.renderTargetMaskBuffer\r\n      .texture;\r\n    this.overlayMaterial.uniforms[\"edgeTexture1\"].value = this.renderTargetEdgeBuffer1\r\n      .texture;\r\n    this.overlayMaterial.uniforms[\"edgeTexture2\"].value = this.renderTargetEdgeBuffer2\r\n      .texture;\r\n    this.overlayMaterial.uniforms[\"patternTexture\"].value = this.patternTexture;\r\n    this.overlayMaterial.uniforms[\"edgeStrength\"].value = this.edgeStrength;\r\n    this.overlayMaterial.uniforms[\"edgeGlow\"].value = this.edgeGlow;\r\n    this.overlayMaterial.uniforms[\"usePatternTexture\"].value = this.usePatternTexture;\r\n\r\n    if (maskActive) renderer.context.enable(renderer.context.STENCIL_TEST);\r\n\r\n    renderer.render(this.scene, this.camera, readBuffer, false);\r\n\r\n    renderer.setClearColor(this.oldClearColor, this.oldClearAlpha);\r\n    renderer.autoClear = oldAutoClear;\r\n\r\n  }\r\n\r\n  getPrepareMaskMaterial() {\r\n    return new THREE.ShaderMaterial({\r\n      uniforms: {\r\n        \"depthTexture\": { value: null },\r\n        \"cameraNearFar\": { value: new THREE.Vector2(0.5, 0.5) },\r\n        \"textureMatrix\": { value: new THREE.Matrix4() }\r\n      },\r\n\r\n      vertexShader: [\r\n        'varying vec4 projTexCoord;',\r\n        'varying vec4 vPosition;',\r\n        'uniform mat4 textureMatrix;',\r\n\r\n        'void main() {',\r\n\r\n        '\tvPosition = modelViewMatrix * vec4( position, 1.0 );',\r\n        '\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );',\r\n        '\tprojTexCoord = textureMatrix * worldPosition;',\r\n        '\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\r\n\r\n        '}'\r\n      ].join('\\n'),\r\n\r\n      fragmentShader: [\r\n        '#include <packing>',\r\n        'varying vec4 vPosition;',\r\n        'varying vec4 projTexCoord;',\r\n        'uniform sampler2D depthTexture;',\r\n        'uniform vec2 cameraNearFar;',\r\n\r\n        'void main() {',\r\n\r\n        '\tfloat depth = unpackRGBAToDepth(texture2DProj( depthTexture, projTexCoord ));',\r\n        '\tfloat viewZ = - DEPTH_TO_VIEW_Z( depth, cameraNearFar.x, cameraNearFar.y );',\r\n        '\tfloat depthTest = (-vPosition.z > viewZ) ? 1.0 : 0.0;',\r\n        '\tgl_FragColor = vec4(0.0, depthTest, 1.0, 1.0);',\r\n\r\n        '}'\r\n      ].join('\\n')\r\n    });\r\n  }\r\n\r\n  getEdgeDetectionMaterial() {\r\n    return new THREE.ShaderMaterial({\r\n      uniforms: {\r\n        \"maskTexture\": { value: null },\r\n        \"texSize\": { value: new THREE.Vector2(0.5, 0.5) },\r\n        \"visibleEdgeColor\": { value: new THREE.Vector3(1.0, 1.0, 1.0) },\r\n        \"hiddenEdgeColor\": { value: new THREE.Vector3(1.0, 1.0, 1.0) },\r\n      },\r\n\r\n      vertexShader: `varying vec2 vUv;\r\n\t\t\t\tvoid main() {\r\n\t\t\t\t\tvUv = uv;\r\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\r\n\t\t\t\t}`,\r\n\r\n      fragmentShader: `varying vec2 vUv;\r\n\t\t\t\tuniform sampler2D maskTexture;\r\n\t\t\t\tuniform vec2 texSize;\r\n\t\t\t\tuniform vec3 visibleEdgeColor;\r\n\t\t\t\tuniform vec3 hiddenEdgeColor;\r\n\r\n\t\t\t\tvoid main() {\r\n\t\t\t\t\tvec2 invSize = 1.0 / texSize;\r\n\t\t\t\t\tvec4 uvOffset = vec4(1.0, 0.0, 0.0, 1.0) * vec4(invSize, invSize);\r\n\t\t\t\t\tvec4 c1 = texture2D( maskTexture, vUv + uvOffset.xy);\r\n\t\t\t\t\tvec4 c2 = texture2D( maskTexture, vUv - uvOffset.xy);\r\n\t\t\t\t\tvec4 c3 = texture2D( maskTexture, vUv + uvOffset.yw);\r\n\t\t\t\t\tvec4 c4 = texture2D( maskTexture, vUv - uvOffset.yw);\r\n\t\t\t\t\tfloat diff1 = (c1.r - c2.r)*0.5;\r\n\t\t\t\t\tfloat diff2 = (c3.r - c4.r)*0.5;\r\n\t\t\t\t\tfloat d = length( vec2(diff1, diff2) );\r\n\t\t\t\t\tfloat a1 = min(c1.g, c2.g);\r\n\t\t\t\t\tfloat a2 = min(c3.g, c4.g);\r\n\t\t\t\t\tfloat visibilityFactor = min(a1, a2);\r\n\t\t\t\t\tvec3 edgeColor = 1.0 - visibilityFactor > 0.001 ? visibleEdgeColor : hiddenEdgeColor;\r\n\t\t\t\t\tgl_FragColor = vec4(edgeColor, 1.0) * vec4(d);\r\n\t\t\t\t}`\r\n    });\r\n  }\r\n\r\n  getSeperableBlurMaterial(maxRadius) {\r\n    return new THREE.ShaderMaterial({\r\n      defines: {\r\n        \"MAX_RADIUS\": maxRadius,\r\n      },\r\n\r\n      uniforms: {\r\n        \"colorTexture\": { value: null },\r\n        \"texSize\": { value: new THREE.Vector2(0.5, 0.5) },\r\n        \"direction\": { value: new THREE.Vector2(0.5, 0.5) },\r\n        \"kernelRadius\": { value: 1.0 }\r\n      },\r\n\r\n      vertexShader: `varying vec2 vUv;\r\n\t\t\t\tvoid main() {\r\n\t\t\t\t\tvUv = uv;\r\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\r\n\t\t\t\t}`,\r\n\r\n      fragmentShader: `#include <common>\r\n\t\t\t\tvarying vec2 vUv;\r\n\t\t\t\tuniform sampler2D colorTexture;\r\n\t\t\t\tuniform vec2 texSize;\r\n\t\t\t\tuniform vec2 direction;\r\n\t\t\t\tuniform float kernelRadius;\r\n\r\n\t\t\t\tfloat gaussianPdf(in float x, in float sigma) {\r\n\t\t\t\t\treturn 0.39894 * exp( -0.5 * x * x/( sigma * sigma))/sigma;\r\n\t\t\t\t}\r\n\t\t\t\tvoid main() {\r\n\t\t\t\t\tvec2 invSize = 1.0 / texSize;\r\n\t\t\t\t\tfloat weightSum = gaussianPdf(0.0, kernelRadius);\r\n\t\t\t\t\tvec3 diffuseSum = texture2D( colorTexture, vUv).rgb * weightSum;\r\n\t\t\t\t\tvec2 delta = direction * invSize * kernelRadius/float(MAX_RADIUS);\r\n\t\t\t\t\tvec2 uvOffset = delta;\r\n\t\t\t\t\tfor( int i = 1; i <= MAX_RADIUS; i ++ ) {\r\n\t\t\t\t\t\tfloat w = gaussianPdf(uvOffset.x, kernelRadius);\r\n\t\t\t\t\t\tvec3 sample1 = texture2D( colorTexture, vUv + uvOffset).rgb;\r\n\t\t\t\t\t\tvec3 sample2 = texture2D( colorTexture, vUv - uvOffset).rgb;\r\n\t\t\t\t\t\tdiffuseSum += ((sample1 + sample2) * w);\r\n\t\t\t\t\t\tweightSum += (2.0 * w);\r\n\t\t\t\t\t\tuvOffset += delta;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tgl_FragColor = vec4(diffuseSum/weightSum, 1.0);\r\n\t\t\t\t}`\r\n    });\r\n  }\r\n\r\n  getOverlayMaterial() {\r\n    return new THREE.ShaderMaterial({\r\n      uniforms: {\r\n        \"maskTexture\": { value: null },\r\n        \"edgeTexture1\": { value: null },\r\n        \"edgeTexture2\": { value: null },\r\n        \"patternTexture\": { value: null },\r\n        \"edgeStrength\": { value: 1.0 },\r\n        \"edgeGlow\": { value: 1.0 },\r\n        \"usePatternTexture\": { value: 0.0 }\r\n      },\r\n\r\n      vertexShader: `varying vec2 vUv;\r\n\t\t\t\tvoid main() {\r\n\t\t\t\t\tvUv = uv;\r\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\r\n\t\t\t\t}`,\r\n\r\n      fragmentShader: `varying vec2 vUv;\r\n\t\t\t\tuniform sampler2D maskTexture;\r\n\t\t\t\tuniform sampler2D edgeTexture1;\r\n\t\t\t\tuniform sampler2D edgeTexture2;\r\n\t\t\t\tuniform sampler2D patternTexture;\r\n\t\t\t\tuniform float edgeStrength;\r\n\t\t\t\tuniform float edgeGlow;\r\n\t\t\t\tuniform bool usePatternTexture;\r\n\r\n\t\t\t\tvoid main() {\r\n\t\t\t\t\tvec4 edgeValue1 = texture2D(edgeTexture1, vUv);\r\n\t\t\t\t\tvec4 edgeValue2 = texture2D(edgeTexture2, vUv);\r\n\t\t\t\t\tvec4 maskColor = texture2D(maskTexture, vUv);\r\n\t\t\t\t\tvec4 patternColor = texture2D(patternTexture, 6.0 * vUv);\r\n\t\t\t\t\tfloat visibilityFactor = 1.0 - maskColor.g > 0.0 ? 1.0 : 0.5;\r\n\t\t\t\t\tvec4 edgeValue = edgeValue1 + edgeValue2 * edgeGlow;\r\n\t\t\t\t\tvec4 finalColor = edgeStrength * maskColor.r * edgeValue;\r\n\t\t\t\t\tif(usePatternTexture)\r\n\t\t\t\t\t\tfinalColor += + visibilityFactor * (1.0 - maskColor.r) * (1.0 - patternColor.r);\r\n\t\t\t\t\tgl_FragColor = finalColor;\r\n\t\t\t\t}`,\r\n      blending: THREE.AdditiveBlending,\r\n      depthTest: false,\r\n      depthWrite: false,\r\n      transparent: true\r\n    });\r\n  }\r\n}\r\n\r\nexport {\r\n  OutlinePass\r\n};","/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author davidedc / http://www.sketchpatch.net/\r\n *\r\n * NVIDIA FXAA by Timothy Lottes\r\n * http://timothylottes.blogspot.com/2011/06/fxaa3-source-released.html\r\n * - WebGL port by @supereggbert\r\n * http://www.glge.org/demos/fxaa/\r\n */\r\n\r\nlet FXAAShader = {\r\n\r\n\tuniforms: {\r\n\r\n\t\t\"tDiffuse\":   { value: null },\r\n\t\t\"resolution\": { value: new THREE.Vector2( 1 / 1024, 1 / 512 ) }\r\n\r\n\t},\r\n\r\n\tvertexShader: [\r\n\r\n\t\t\"varying vec2 vUv;\",\r\n\r\n\t\t\"void main() {\",\r\n\r\n\t\t\t\"vUv = uv;\",\r\n\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\r\n\r\n\t\t\"}\"\r\n\r\n\t].join( \"\\n\" ),\r\n\r\n\tfragmentShader: [\r\n        \"precision highp float;\",\r\n        \"\",\r\n        \"uniform sampler2D tDiffuse;\",\r\n        \"\",\r\n        \"uniform vec2 resolution;\",\r\n        \"\",\r\n        \"varying vec2 vUv;\",\r\n        \"\",\r\n        \"// FXAA 3.11 implementation by NVIDIA, ported to WebGL by Agost Biro (biro@archilogic.com)\",\r\n        \"\",\r\n        \"//----------------------------------------------------------------------------------\",\r\n        \"// File:        es3-kepler\\FXAA\\assets\\shaders/FXAA_DefaultES.frag\",\r\n        \"// SDK Version: v3.00\",\r\n        \"// Email:       gameworks@nvidia.com\",\r\n        \"// Site:        http://developer.nvidia.com/\",\r\n        \"//\",\r\n        \"// Copyright (c) 2014-2015, NVIDIA CORPORATION. All rights reserved.\",\r\n        \"//\",\r\n        \"// Redistribution and use in source and binary forms, with or without\",\r\n        \"// modification, are permitted provided that the following conditions\",\r\n        \"// are met:\",\r\n        \"//  * Redistributions of source code must retain the above copyright\",\r\n        \"//    notice, this list of conditions and the following disclaimer.\",\r\n        \"//  * Redistributions in binary form must reproduce the above copyright\",\r\n        \"//    notice, this list of conditions and the following disclaimer in the\",\r\n        \"//    documentation and/or other materials provided with the distribution.\",\r\n        \"//  * Neither the name of NVIDIA CORPORATION nor the names of its\",\r\n        \"//    contributors may be used to endorse or promote products derived\",\r\n        \"//    from this software without specific prior written permission.\",\r\n        \"//\",\r\n        \"// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS ``AS IS'' AND ANY\",\r\n        \"// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\",\r\n        \"// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\",\r\n        \"// PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR\",\r\n        \"// CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\",\r\n        \"// EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\",\r\n        \"// PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\",\r\n        \"// PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\",\r\n        \"// OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\",\r\n        \"// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\",\r\n        \"// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\",\r\n        \"//\",\r\n        \"//----------------------------------------------------------------------------------\",\r\n        \"\",\r\n        \"#define FXAA_PC 1\",\r\n        \"#define FXAA_GLSL_100 1\",\r\n        \"#define FXAA_QUALITY_PRESET 12\",\r\n        \"\",\r\n        \"#define FXAA_GREEN_AS_LUMA 1\",\r\n        \"\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"#ifndef FXAA_PC_CONSOLE\",\r\n        \"    //\",\r\n        \"    // The console algorithm for PC is included\",\r\n        \"    // for developers targeting really low spec machines.\",\r\n        \"    // Likely better to just run FXAA_PC, and use a really low preset.\",\r\n        \"    //\",\r\n        \"    #define FXAA_PC_CONSOLE 0\",\r\n        \"#endif\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"#ifndef FXAA_GLSL_120\",\r\n        \"    #define FXAA_GLSL_120 0\",\r\n        \"#endif\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"#ifndef FXAA_GLSL_130\",\r\n        \"    #define FXAA_GLSL_130 0\",\r\n        \"#endif\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"#ifndef FXAA_HLSL_3\",\r\n        \"    #define FXAA_HLSL_3 0\",\r\n        \"#endif\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"#ifndef FXAA_HLSL_4\",\r\n        \"    #define FXAA_HLSL_4 0\",\r\n        \"#endif\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"#ifndef FXAA_HLSL_5\",\r\n        \"    #define FXAA_HLSL_5 0\",\r\n        \"#endif\",\r\n        \"/*==========================================================================*/\",\r\n        \"#ifndef FXAA_GREEN_AS_LUMA\",\r\n        \"    //\",\r\n        \"    // For those using non-linear color,\",\r\n        \"    // and either not able to get luma in alpha, or not wanting to,\",\r\n        \"    // this enables FXAA to run using green as a proxy for luma.\",\r\n        \"    // So with this enabled, no need to pack luma in alpha.\",\r\n        \"    //\",\r\n        \"    // This will turn off AA on anything which lacks some amount of green.\",\r\n        \"    // Pure red and blue or combination of only R and B, will get no AA.\",\r\n        \"    //\",\r\n        \"    // Might want to lower the settings for both,\",\r\n        \"    //    fxaaConsoleEdgeThresholdMin\",\r\n        \"    //    fxaaQualityEdgeThresholdMin\",\r\n        \"    // In order to insure AA does not get turned off on colors\",\r\n        \"    // which contain a minor amount of green.\",\r\n        \"    //\",\r\n        \"    // 1 = On.\",\r\n        \"    // 0 = Off.\",\r\n        \"    //\",\r\n        \"    #define FXAA_GREEN_AS_LUMA 0\",\r\n        \"#endif\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"#ifndef FXAA_EARLY_EXIT\",\r\n        \"    //\",\r\n        \"    // Controls algorithm's early exit path.\",\r\n        \"    // On PS3 turning this ON adds 2 cycles to the shader.\",\r\n        \"    // On 360 turning this OFF adds 10ths of a millisecond to the shader.\",\r\n        \"    // Turning this off on console will result in a more blurry image.\",\r\n        \"    // So this defaults to on.\",\r\n        \"    //\",\r\n        \"    // 1 = On.\",\r\n        \"    // 0 = Off.\",\r\n        \"    //\",\r\n        \"    #define FXAA_EARLY_EXIT 1\",\r\n        \"#endif\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"#ifndef FXAA_DISCARD\",\r\n        \"    //\",\r\n        \"    // Only valid for PC OpenGL currently.\",\r\n        \"    // Probably will not work when FXAA_GREEN_AS_LUMA = 1.\",\r\n        \"    //\",\r\n        \"    // 1 = Use discard on pixels which don't need AA.\",\r\n        \"    //     For APIs which enable concurrent TEX+ROP from same surface.\",\r\n        \"    // 0 = Return unchanged color on pixels which don't need AA.\",\r\n        \"    //\",\r\n        \"    #define FXAA_DISCARD 0\",\r\n        \"#endif\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"#ifndef FXAA_FAST_PIXEL_OFFSET\",\r\n        \"    //\",\r\n        \"    // Used for GLSL 120 only.\",\r\n        \"    //\",\r\n        \"    // 1 = GL API supports fast pixel offsets\",\r\n        \"    // 0 = do not use fast pixel offsets\",\r\n        \"    //\",\r\n        \"    #ifdef GL_EXT_gpu_shader4\",\r\n        \"        #define FXAA_FAST_PIXEL_OFFSET 1\",\r\n        \"    #endif\",\r\n        \"    #ifdef GL_NV_gpu_shader5\",\r\n        \"        #define FXAA_FAST_PIXEL_OFFSET 1\",\r\n        \"    #endif\",\r\n        \"    #ifdef GL_ARB_gpu_shader5\",\r\n        \"        #define FXAA_FAST_PIXEL_OFFSET 1\",\r\n        \"    #endif\",\r\n        \"    #ifndef FXAA_FAST_PIXEL_OFFSET\",\r\n        \"        #define FXAA_FAST_PIXEL_OFFSET 0\",\r\n        \"    #endif\",\r\n        \"#endif\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"#ifndef FXAA_GATHER4_ALPHA\",\r\n        \"    //\",\r\n        \"    // 1 = API supports gather4 on alpha channel.\",\r\n        \"    // 0 = API does not support gather4 on alpha channel.\",\r\n        \"    //\",\r\n        \"    #if (FXAA_HLSL_5 == 1)\",\r\n        \"        #define FXAA_GATHER4_ALPHA 1\",\r\n        \"    #endif\",\r\n        \"    #ifdef GL_ARB_gpu_shader5\",\r\n        \"        #define FXAA_GATHER4_ALPHA 1\",\r\n        \"    #endif\",\r\n        \"    #ifdef GL_NV_gpu_shader5\",\r\n        \"        #define FXAA_GATHER4_ALPHA 1\",\r\n        \"    #endif\",\r\n        \"    #ifndef FXAA_GATHER4_ALPHA\",\r\n        \"        #define FXAA_GATHER4_ALPHA 0\",\r\n        \"    #endif\",\r\n        \"#endif\",\r\n        \"\",\r\n        \"\",\r\n        \"/*============================================================================\",\r\n        \"                        FXAA QUALITY - TUNING KNOBS\",\r\n        \"------------------------------------------------------------------------------\",\r\n        \"NOTE the other tuning knobs are now in the shader function inputs!\",\r\n        \"============================================================================*/\",\r\n        \"#ifndef FXAA_QUALITY_PRESET\",\r\n        \"    //\",\r\n        \"    // Choose the quality preset.\",\r\n        \"    // This needs to be compiled into the shader as it effects code.\",\r\n        \"    // Best option to include multiple presets is to\",\r\n        \"    // in each shader define the preset, then include this file.\",\r\n        \"    //\",\r\n        \"    // OPTIONS\",\r\n        \"    // -----------------------------------------------------------------------\",\r\n        \"    // 10 to 15 - default medium dither (10=fastest, 15=highest quality)\",\r\n        \"    // 20 to 29 - less dither, more expensive (20=fastest, 29=highest quality)\",\r\n        \"    // 39       - no dither, very expensive\",\r\n        \"    //\",\r\n        \"    // NOTES\",\r\n        \"    // -----------------------------------------------------------------------\",\r\n        \"    // 12 = slightly faster then FXAA 3.9 and higher edge quality (default)\",\r\n        \"    // 13 = about same speed as FXAA 3.9 and better than 12\",\r\n        \"    // 23 = closest to FXAA 3.9 visually and performance wise\",\r\n        \"    //  _ = the lowest digit is directly related to performance\",\r\n        \"    // _  = the highest digit is directly related to style\",\r\n        \"    //\",\r\n        \"    #define FXAA_QUALITY_PRESET 12\",\r\n        \"#endif\",\r\n        \"\",\r\n        \"\",\r\n        \"/*============================================================================\",\r\n        \"\",\r\n        \"                           FXAA QUALITY - PRESETS\",\r\n        \"\",\r\n        \"============================================================================*/\",\r\n        \"\",\r\n        \"/*============================================================================\",\r\n        \"                     FXAA QUALITY - MEDIUM DITHER PRESETS\",\r\n        \"============================================================================*/\",\r\n        \"#if (FXAA_QUALITY_PRESET == 10)\",\r\n        \"    #define FXAA_QUALITY_PS 3\",\r\n        \"    #define FXAA_QUALITY_P0 1.5\",\r\n        \"    #define FXAA_QUALITY_P1 3.0\",\r\n        \"    #define FXAA_QUALITY_P2 12.0\",\r\n        \"#endif\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"#if (FXAA_QUALITY_PRESET == 11)\",\r\n        \"    #define FXAA_QUALITY_PS 4\",\r\n        \"    #define FXAA_QUALITY_P0 1.0\",\r\n        \"    #define FXAA_QUALITY_P1 1.5\",\r\n        \"    #define FXAA_QUALITY_P2 3.0\",\r\n        \"    #define FXAA_QUALITY_P3 12.0\",\r\n        \"#endif\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"#if (FXAA_QUALITY_PRESET == 12)\",\r\n        \"    #define FXAA_QUALITY_PS 5\",\r\n        \"    #define FXAA_QUALITY_P0 1.0\",\r\n        \"    #define FXAA_QUALITY_P1 1.5\",\r\n        \"    #define FXAA_QUALITY_P2 2.0\",\r\n        \"    #define FXAA_QUALITY_P3 4.0\",\r\n        \"    #define FXAA_QUALITY_P4 12.0\",\r\n        \"#endif\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"#if (FXAA_QUALITY_PRESET == 13)\",\r\n        \"    #define FXAA_QUALITY_PS 6\",\r\n        \"    #define FXAA_QUALITY_P0 1.0\",\r\n        \"    #define FXAA_QUALITY_P1 1.5\",\r\n        \"    #define FXAA_QUALITY_P2 2.0\",\r\n        \"    #define FXAA_QUALITY_P3 2.0\",\r\n        \"    #define FXAA_QUALITY_P4 4.0\",\r\n        \"    #define FXAA_QUALITY_P5 12.0\",\r\n        \"#endif\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"#if (FXAA_QUALITY_PRESET == 14)\",\r\n        \"    #define FXAA_QUALITY_PS 7\",\r\n        \"    #define FXAA_QUALITY_P0 1.0\",\r\n        \"    #define FXAA_QUALITY_P1 1.5\",\r\n        \"    #define FXAA_QUALITY_P2 2.0\",\r\n        \"    #define FXAA_QUALITY_P3 2.0\",\r\n        \"    #define FXAA_QUALITY_P4 2.0\",\r\n        \"    #define FXAA_QUALITY_P5 4.0\",\r\n        \"    #define FXAA_QUALITY_P6 12.0\",\r\n        \"#endif\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"#if (FXAA_QUALITY_PRESET == 15)\",\r\n        \"    #define FXAA_QUALITY_PS 8\",\r\n        \"    #define FXAA_QUALITY_P0 1.0\",\r\n        \"    #define FXAA_QUALITY_P1 1.5\",\r\n        \"    #define FXAA_QUALITY_P2 2.0\",\r\n        \"    #define FXAA_QUALITY_P3 2.0\",\r\n        \"    #define FXAA_QUALITY_P4 2.0\",\r\n        \"    #define FXAA_QUALITY_P5 2.0\",\r\n        \"    #define FXAA_QUALITY_P6 4.0\",\r\n        \"    #define FXAA_QUALITY_P7 12.0\",\r\n        \"#endif\",\r\n        \"\",\r\n        \"/*============================================================================\",\r\n        \"                     FXAA QUALITY - LOW DITHER PRESETS\",\r\n        \"============================================================================*/\",\r\n        \"#if (FXAA_QUALITY_PRESET == 20)\",\r\n        \"    #define FXAA_QUALITY_PS 3\",\r\n        \"    #define FXAA_QUALITY_P0 1.5\",\r\n        \"    #define FXAA_QUALITY_P1 2.0\",\r\n        \"    #define FXAA_QUALITY_P2 8.0\",\r\n        \"#endif\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"#if (FXAA_QUALITY_PRESET == 21)\",\r\n        \"    #define FXAA_QUALITY_PS 4\",\r\n        \"    #define FXAA_QUALITY_P0 1.0\",\r\n        \"    #define FXAA_QUALITY_P1 1.5\",\r\n        \"    #define FXAA_QUALITY_P2 2.0\",\r\n        \"    #define FXAA_QUALITY_P3 8.0\",\r\n        \"#endif\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"#if (FXAA_QUALITY_PRESET == 22)\",\r\n        \"    #define FXAA_QUALITY_PS 5\",\r\n        \"    #define FXAA_QUALITY_P0 1.0\",\r\n        \"    #define FXAA_QUALITY_P1 1.5\",\r\n        \"    #define FXAA_QUALITY_P2 2.0\",\r\n        \"    #define FXAA_QUALITY_P3 2.0\",\r\n        \"    #define FXAA_QUALITY_P4 8.0\",\r\n        \"#endif\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"#if (FXAA_QUALITY_PRESET == 23)\",\r\n        \"    #define FXAA_QUALITY_PS 6\",\r\n        \"    #define FXAA_QUALITY_P0 1.0\",\r\n        \"    #define FXAA_QUALITY_P1 1.5\",\r\n        \"    #define FXAA_QUALITY_P2 2.0\",\r\n        \"    #define FXAA_QUALITY_P3 2.0\",\r\n        \"    #define FXAA_QUALITY_P4 2.0\",\r\n        \"    #define FXAA_QUALITY_P5 8.0\",\r\n        \"#endif\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"#if (FXAA_QUALITY_PRESET == 24)\",\r\n        \"    #define FXAA_QUALITY_PS 7\",\r\n        \"    #define FXAA_QUALITY_P0 1.0\",\r\n        \"    #define FXAA_QUALITY_P1 1.5\",\r\n        \"    #define FXAA_QUALITY_P2 2.0\",\r\n        \"    #define FXAA_QUALITY_P3 2.0\",\r\n        \"    #define FXAA_QUALITY_P4 2.0\",\r\n        \"    #define FXAA_QUALITY_P5 3.0\",\r\n        \"    #define FXAA_QUALITY_P6 8.0\",\r\n        \"#endif\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"#if (FXAA_QUALITY_PRESET == 25)\",\r\n        \"    #define FXAA_QUALITY_PS 8\",\r\n        \"    #define FXAA_QUALITY_P0 1.0\",\r\n        \"    #define FXAA_QUALITY_P1 1.5\",\r\n        \"    #define FXAA_QUALITY_P2 2.0\",\r\n        \"    #define FXAA_QUALITY_P3 2.0\",\r\n        \"    #define FXAA_QUALITY_P4 2.0\",\r\n        \"    #define FXAA_QUALITY_P5 2.0\",\r\n        \"    #define FXAA_QUALITY_P6 4.0\",\r\n        \"    #define FXAA_QUALITY_P7 8.0\",\r\n        \"#endif\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"#if (FXAA_QUALITY_PRESET == 26)\",\r\n        \"    #define FXAA_QUALITY_PS 9\",\r\n        \"    #define FXAA_QUALITY_P0 1.0\",\r\n        \"    #define FXAA_QUALITY_P1 1.5\",\r\n        \"    #define FXAA_QUALITY_P2 2.0\",\r\n        \"    #define FXAA_QUALITY_P3 2.0\",\r\n        \"    #define FXAA_QUALITY_P4 2.0\",\r\n        \"    #define FXAA_QUALITY_P5 2.0\",\r\n        \"    #define FXAA_QUALITY_P6 2.0\",\r\n        \"    #define FXAA_QUALITY_P7 4.0\",\r\n        \"    #define FXAA_QUALITY_P8 8.0\",\r\n        \"#endif\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"#if (FXAA_QUALITY_PRESET == 27)\",\r\n        \"    #define FXAA_QUALITY_PS 10\",\r\n        \"    #define FXAA_QUALITY_P0 1.0\",\r\n        \"    #define FXAA_QUALITY_P1 1.5\",\r\n        \"    #define FXAA_QUALITY_P2 2.0\",\r\n        \"    #define FXAA_QUALITY_P3 2.0\",\r\n        \"    #define FXAA_QUALITY_P4 2.0\",\r\n        \"    #define FXAA_QUALITY_P5 2.0\",\r\n        \"    #define FXAA_QUALITY_P6 2.0\",\r\n        \"    #define FXAA_QUALITY_P7 2.0\",\r\n        \"    #define FXAA_QUALITY_P8 4.0\",\r\n        \"    #define FXAA_QUALITY_P9 8.0\",\r\n        \"#endif\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"#if (FXAA_QUALITY_PRESET == 28)\",\r\n        \"    #define FXAA_QUALITY_PS 11\",\r\n        \"    #define FXAA_QUALITY_P0 1.0\",\r\n        \"    #define FXAA_QUALITY_P1 1.5\",\r\n        \"    #define FXAA_QUALITY_P2 2.0\",\r\n        \"    #define FXAA_QUALITY_P3 2.0\",\r\n        \"    #define FXAA_QUALITY_P4 2.0\",\r\n        \"    #define FXAA_QUALITY_P5 2.0\",\r\n        \"    #define FXAA_QUALITY_P6 2.0\",\r\n        \"    #define FXAA_QUALITY_P7 2.0\",\r\n        \"    #define FXAA_QUALITY_P8 2.0\",\r\n        \"    #define FXAA_QUALITY_P9 4.0\",\r\n        \"    #define FXAA_QUALITY_P10 8.0\",\r\n        \"#endif\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"#if (FXAA_QUALITY_PRESET == 29)\",\r\n        \"    #define FXAA_QUALITY_PS 12\",\r\n        \"    #define FXAA_QUALITY_P0 1.0\",\r\n        \"    #define FXAA_QUALITY_P1 1.5\",\r\n        \"    #define FXAA_QUALITY_P2 2.0\",\r\n        \"    #define FXAA_QUALITY_P3 2.0\",\r\n        \"    #define FXAA_QUALITY_P4 2.0\",\r\n        \"    #define FXAA_QUALITY_P5 2.0\",\r\n        \"    #define FXAA_QUALITY_P6 2.0\",\r\n        \"    #define FXAA_QUALITY_P7 2.0\",\r\n        \"    #define FXAA_QUALITY_P8 2.0\",\r\n        \"    #define FXAA_QUALITY_P9 2.0\",\r\n        \"    #define FXAA_QUALITY_P10 4.0\",\r\n        \"    #define FXAA_QUALITY_P11 8.0\",\r\n        \"#endif\",\r\n        \"\",\r\n        \"/*============================================================================\",\r\n        \"                     FXAA QUALITY - EXTREME QUALITY\",\r\n        \"============================================================================*/\",\r\n        \"#if (FXAA_QUALITY_PRESET == 39)\",\r\n        \"    #define FXAA_QUALITY_PS 12\",\r\n        \"    #define FXAA_QUALITY_P0 1.0\",\r\n        \"    #define FXAA_QUALITY_P1 1.0\",\r\n        \"    #define FXAA_QUALITY_P2 1.0\",\r\n        \"    #define FXAA_QUALITY_P3 1.0\",\r\n        \"    #define FXAA_QUALITY_P4 1.0\",\r\n        \"    #define FXAA_QUALITY_P5 1.5\",\r\n        \"    #define FXAA_QUALITY_P6 2.0\",\r\n        \"    #define FXAA_QUALITY_P7 2.0\",\r\n        \"    #define FXAA_QUALITY_P8 2.0\",\r\n        \"    #define FXAA_QUALITY_P9 2.0\",\r\n        \"    #define FXAA_QUALITY_P10 4.0\",\r\n        \"    #define FXAA_QUALITY_P11 8.0\",\r\n        \"#endif\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"/*============================================================================\",\r\n        \"\",\r\n        \"                                API PORTING\",\r\n        \"\",\r\n        \"============================================================================*/\",\r\n        \"#if (FXAA_GLSL_100 == 1) || (FXAA_GLSL_120 == 1) || (FXAA_GLSL_130 == 1)\",\r\n        \"    #define FxaaBool bool\",\r\n        \"    #define FxaaDiscard discard\",\r\n        \"    #define FxaaFloat float\",\r\n        \"    #define FxaaFloat2 vec2\",\r\n        \"    #define FxaaFloat3 vec3\",\r\n        \"    #define FxaaFloat4 vec4\",\r\n        \"    #define FxaaHalf float\",\r\n        \"    #define FxaaHalf2 vec2\",\r\n        \"    #define FxaaHalf3 vec3\",\r\n        \"    #define FxaaHalf4 vec4\",\r\n        \"    #define FxaaInt2 ivec2\",\r\n        \"    #define FxaaSat(x) clamp(x, 0.0, 1.0)\",\r\n        \"    #define FxaaTex sampler2D\",\r\n        \"#else\",\r\n        \"    #define FxaaBool bool\",\r\n        \"    #define FxaaDiscard clip(-1)\",\r\n        \"    #define FxaaFloat float\",\r\n        \"    #define FxaaFloat2 float2\",\r\n        \"    #define FxaaFloat3 float3\",\r\n        \"    #define FxaaFloat4 float4\",\r\n        \"    #define FxaaHalf half\",\r\n        \"    #define FxaaHalf2 half2\",\r\n        \"    #define FxaaHalf3 half3\",\r\n        \"    #define FxaaHalf4 half4\",\r\n        \"    #define FxaaSat(x) saturate(x)\",\r\n        \"#endif\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"#if (FXAA_GLSL_100 == 1)\",\r\n        \"  #define FxaaTexTop(t, p) texture2D(t, p, 0.0)\",\r\n        \"  #define FxaaTexOff(t, p, o, r) texture2D(t, p + (o * r), 0.0)\",\r\n        \"#endif\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"#if (FXAA_GLSL_120 == 1)\",\r\n        \"    // Requires,\",\r\n        \"    //  #version 120\",\r\n        \"    // And at least,\",\r\n        \"    //  #extension GL_EXT_gpu_shader4 : enable\",\r\n        \"    //  (or set FXAA_FAST_PIXEL_OFFSET 1 to work like DX9)\",\r\n        \"    #define FxaaTexTop(t, p) texture2DLod(t, p, 0.0)\",\r\n        \"    #if (FXAA_FAST_PIXEL_OFFSET == 1)\",\r\n        \"        #define FxaaTexOff(t, p, o, r) texture2DLodOffset(t, p, 0.0, o)\",\r\n        \"    #else\",\r\n        \"        #define FxaaTexOff(t, p, o, r) texture2DLod(t, p + (o * r), 0.0)\",\r\n        \"    #endif\",\r\n        \"    #if (FXAA_GATHER4_ALPHA == 1)\",\r\n        \"        // use #extension GL_ARB_gpu_shader5 : enable\",\r\n        \"        #define FxaaTexAlpha4(t, p) textureGather(t, p, 3)\",\r\n        \"        #define FxaaTexOffAlpha4(t, p, o) textureGatherOffset(t, p, o, 3)\",\r\n        \"        #define FxaaTexGreen4(t, p) textureGather(t, p, 1)\",\r\n        \"        #define FxaaTexOffGreen4(t, p, o) textureGatherOffset(t, p, o, 1)\",\r\n        \"    #endif\",\r\n        \"#endif\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"#if (FXAA_GLSL_130 == 1)\",\r\n        \"    // Requires \\\"#version 130\\\" or better\",\r\n        \"    #define FxaaTexTop(t, p) textureLod(t, p, 0.0)\",\r\n        \"    #define FxaaTexOff(t, p, o, r) textureLodOffset(t, p, 0.0, o)\",\r\n        \"    #if (FXAA_GATHER4_ALPHA == 1)\",\r\n        \"        // use #extension GL_ARB_gpu_shader5 : enable\",\r\n        \"        #define FxaaTexAlpha4(t, p) textureGather(t, p, 3)\",\r\n        \"        #define FxaaTexOffAlpha4(t, p, o) textureGatherOffset(t, p, o, 3)\",\r\n        \"        #define FxaaTexGreen4(t, p) textureGather(t, p, 1)\",\r\n        \"        #define FxaaTexOffGreen4(t, p, o) textureGatherOffset(t, p, o, 1)\",\r\n        \"    #endif\",\r\n        \"#endif\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"#if (FXAA_HLSL_3 == 1)\",\r\n        \"    #define FxaaInt2 float2\",\r\n        \"    #define FxaaTex sampler2D\",\r\n        \"    #define FxaaTexTop(t, p) tex2Dlod(t, float4(p, 0.0, 0.0))\",\r\n        \"    #define FxaaTexOff(t, p, o, r) tex2Dlod(t, float4(p + (o * r), 0, 0))\",\r\n        \"#endif\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"#if (FXAA_HLSL_4 == 1)\",\r\n        \"    #define FxaaInt2 int2\",\r\n        \"    struct FxaaTex { SamplerState smpl; Texture2D tex; };\",\r\n        \"    #define FxaaTexTop(t, p) t.tex.SampleLevel(t.smpl, p, 0.0)\",\r\n        \"    #define FxaaTexOff(t, p, o, r) t.tex.SampleLevel(t.smpl, p, 0.0, o)\",\r\n        \"#endif\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"#if (FXAA_HLSL_5 == 1)\",\r\n        \"    #define FxaaInt2 int2\",\r\n        \"    struct FxaaTex { SamplerState smpl; Texture2D tex; };\",\r\n        \"    #define FxaaTexTop(t, p) t.tex.SampleLevel(t.smpl, p, 0.0)\",\r\n        \"    #define FxaaTexOff(t, p, o, r) t.tex.SampleLevel(t.smpl, p, 0.0, o)\",\r\n        \"    #define FxaaTexAlpha4(t, p) t.tex.GatherAlpha(t.smpl, p)\",\r\n        \"    #define FxaaTexOffAlpha4(t, p, o) t.tex.GatherAlpha(t.smpl, p, o)\",\r\n        \"    #define FxaaTexGreen4(t, p) t.tex.GatherGreen(t.smpl, p)\",\r\n        \"    #define FxaaTexOffGreen4(t, p, o) t.tex.GatherGreen(t.smpl, p, o)\",\r\n        \"#endif\",\r\n        \"\",\r\n        \"\",\r\n        \"/*============================================================================\",\r\n        \"                   GREEN AS LUMA OPTION SUPPORT FUNCTION\",\r\n        \"============================================================================*/\",\r\n        \"#if (FXAA_GREEN_AS_LUMA == 0)\",\r\n        \"    FxaaFloat FxaaLuma(FxaaFloat4 rgba) { return rgba.w; }\",\r\n        \"#else\",\r\n        \"    FxaaFloat FxaaLuma(FxaaFloat4 rgba) { return rgba.y; }\",\r\n        \"#endif\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"/*============================================================================\",\r\n        \"\",\r\n        \"                             FXAA3 QUALITY - PC\",\r\n        \"\",\r\n        \"============================================================================*/\",\r\n        \"#if (FXAA_PC == 1)\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"FxaaFloat4 FxaaPixelShader(\",\r\n        \"    //\",\r\n        \"    // Use noperspective interpolation here (turn off perspective interpolation).\",\r\n        \"    // {xy} = center of pixel\",\r\n        \"    FxaaFloat2 pos,\",\r\n        \"    //\",\r\n        \"    // Used only for FXAA Console, and not used on the 360 version.\",\r\n        \"    // Use noperspective interpolation here (turn off perspective interpolation).\",\r\n        \"    // {xy_} = upper left of pixel\",\r\n        \"    // {_zw} = lower right of pixel\",\r\n        \"    FxaaFloat4 fxaaConsolePosPos,\",\r\n        \"    //\",\r\n        \"    // Input color texture.\",\r\n        \"    // {rgb_} = color in linear or perceptual color space\",\r\n        \"    // if (FXAA_GREEN_AS_LUMA == 0)\",\r\n        \"    //     {__a} = luma in perceptual color space (not linear)\",\r\n        \"    FxaaTex tex,\",\r\n        \"    //\",\r\n        \"    // Only used on the optimized 360 version of FXAA Console.\",\r\n        \"    // For everything but 360, just use the same input here as for \\\"tex\\\".\",\r\n        \"    // For 360, same texture, just alias with a 2nd sampler.\",\r\n        \"    // This sampler needs to have an exponent bias of -1.\",\r\n        \"    FxaaTex fxaaConsole360TexExpBiasNegOne,\",\r\n        \"    //\",\r\n        \"    // Only used on the optimized 360 version of FXAA Console.\",\r\n        \"    // For everything but 360, just use the same input here as for \\\"tex\\\".\",\r\n        \"    // For 360, same texture, just alias with a 3nd sampler.\",\r\n        \"    // This sampler needs to have an exponent bias of -2.\",\r\n        \"    FxaaTex fxaaConsole360TexExpBiasNegTwo,\",\r\n        \"    //\",\r\n        \"    // Only used on FXAA Quality.\",\r\n        \"    // This must be from a constant/uniform.\",\r\n        \"    // {x_} = 1.0/screenWidthInPixels\",\r\n        \"    // {_y} = 1.0/screenHeightInPixels\",\r\n        \"    FxaaFloat2 fxaaQualityRcpFrame,\",\r\n        \"    //\",\r\n        \"    // Only used on FXAA Console.\",\r\n        \"    // This must be from a constant/uniform.\",\r\n        \"    // This effects sub-pixel AA quality and inversely sharpness.\",\r\n        \"    //   Where N ranges between,\",\r\n        \"    //     N = 0.50 (default)\",\r\n        \"    //     N = 0.33 (sharper)\",\r\n        \"    // {x__} = -N/screenWidthInPixels\",\r\n        \"    // {_y_} = -N/screenHeightInPixels\",\r\n        \"    // {_z_} =  N/screenWidthInPixels\",\r\n        \"    // {__w} =  N/screenHeightInPixels\",\r\n        \"    FxaaFloat4 fxaaConsoleRcpFrameOpt,\",\r\n        \"    //\",\r\n        \"    // Only used on FXAA Console.\",\r\n        \"    // Not used on 360, but used on PS3 and PC.\",\r\n        \"    // This must be from a constant/uniform.\",\r\n        \"    // {x__} = -2.0/screenWidthInPixels\",\r\n        \"    // {_y_} = -2.0/screenHeightInPixels\",\r\n        \"    // {_z_} =  2.0/screenWidthInPixels\",\r\n        \"    // {__w} =  2.0/screenHeightInPixels\",\r\n        \"    FxaaFloat4 fxaaConsoleRcpFrameOpt2,\",\r\n        \"    //\",\r\n        \"    // Only used on FXAA Console.\",\r\n        \"    // Only used on 360 in place of fxaaConsoleRcpFrameOpt2.\",\r\n        \"    // This must be from a constant/uniform.\",\r\n        \"    // {x__} =  8.0/screenWidthInPixels\",\r\n        \"    // {_y_} =  8.0/screenHeightInPixels\",\r\n        \"    // {_z_} = -4.0/screenWidthInPixels\",\r\n        \"    // {__w} = -4.0/screenHeightInPixels\",\r\n        \"    FxaaFloat4 fxaaConsole360RcpFrameOpt2,\",\r\n        \"    //\",\r\n        \"    // Only used on FXAA Quality.\",\r\n        \"    // This used to be the FXAA_QUALITY_SUBPIX define.\",\r\n        \"    // It is here now to allow easier tuning.\",\r\n        \"    // Choose the amount of sub-pixel aliasing removal.\",\r\n        \"    // This can effect sharpness.\",\r\n        \"    //   1.00 - upper limit (softer)\",\r\n        \"    //   0.75 - default amount of filtering\",\r\n        \"    //   0.50 - lower limit (sharper, less sub-pixel aliasing removal)\",\r\n        \"    //   0.25 - almost off\",\r\n        \"    //   0.00 - completely off\",\r\n        \"    FxaaFloat fxaaQualitySubpix,\",\r\n        \"    //\",\r\n        \"    // Only used on FXAA Quality.\",\r\n        \"    // This used to be the FXAA_QUALITY_EDGE_THRESHOLD define.\",\r\n        \"    // It is here now to allow easier tuning.\",\r\n        \"    // The minimum amount of local contrast required to apply algorithm.\",\r\n        \"    //   0.333 - too little (faster)\",\r\n        \"    //   0.250 - low quality\",\r\n        \"    //   0.166 - default\",\r\n        \"    //   0.125 - high quality\",\r\n        \"    //   0.063 - overkill (slower)\",\r\n        \"    FxaaFloat fxaaQualityEdgeThreshold,\",\r\n        \"    //\",\r\n        \"    // Only used on FXAA Quality.\",\r\n        \"    // This used to be the FXAA_QUALITY_EDGE_THRESHOLD_MIN define.\",\r\n        \"    // It is here now to allow easier tuning.\",\r\n        \"    // Trims the algorithm from processing darks.\",\r\n        \"    //   0.0833 - upper limit (default, the start of visible unfiltered edges)\",\r\n        \"    //   0.0625 - high quality (faster)\",\r\n        \"    //   0.0312 - visible limit (slower)\",\r\n        \"    // Special notes when using FXAA_GREEN_AS_LUMA,\",\r\n        \"    //   Likely want to set this to zero.\",\r\n        \"    //   As colors that are mostly not-green\",\r\n        \"    //   will appear very dark in the green channel!\",\r\n        \"    //   Tune by looking at mostly non-green content,\",\r\n        \"    //   then start at zero and increase until aliasing is a problem.\",\r\n        \"    FxaaFloat fxaaQualityEdgeThresholdMin,\",\r\n        \"    //\",\r\n        \"    // Only used on FXAA Console.\",\r\n        \"    // This used to be the FXAA_CONSOLE_EDGE_SHARPNESS define.\",\r\n        \"    // It is here now to allow easier tuning.\",\r\n        \"    // This does not effect PS3, as this needs to be compiled in.\",\r\n        \"    //   Use FXAA_CONSOLE_PS3_EDGE_SHARPNESS for PS3.\",\r\n        \"    //   Due to the PS3 being ALU bound,\",\r\n        \"    //   there are only three safe values here: 2 and 4 and 8.\",\r\n        \"    //   These options use the shaders ability to a free *|/ by 2|4|8.\",\r\n        \"    // For all other platforms can be a non-power of two.\",\r\n        \"    //   8.0 is sharper (default!!!)\",\r\n        \"    //   4.0 is softer\",\r\n        \"    //   2.0 is really soft (good only for vector graphics inputs)\",\r\n        \"    FxaaFloat fxaaConsoleEdgeSharpness,\",\r\n        \"    //\",\r\n        \"    // Only used on FXAA Console.\",\r\n        \"    // This used to be the FXAA_CONSOLE_EDGE_THRESHOLD define.\",\r\n        \"    // It is here now to allow easier tuning.\",\r\n        \"    // This does not effect PS3, as this needs to be compiled in.\",\r\n        \"    //   Use FXAA_CONSOLE_PS3_EDGE_THRESHOLD for PS3.\",\r\n        \"    //   Due to the PS3 being ALU bound,\",\r\n        \"    //   there are only two safe values here: 1/4 and 1/8.\",\r\n        \"    //   These options use the shaders ability to a free *|/ by 2|4|8.\",\r\n        \"    // The console setting has a different mapping than the quality setting.\",\r\n        \"    // Other platforms can use other values.\",\r\n        \"    //   0.125 leaves less aliasing, but is softer (default!!!)\",\r\n        \"    //   0.25 leaves more aliasing, and is sharper\",\r\n        \"    FxaaFloat fxaaConsoleEdgeThreshold,\",\r\n        \"    //\",\r\n        \"    // Only used on FXAA Console.\",\r\n        \"    // This used to be the FXAA_CONSOLE_EDGE_THRESHOLD_MIN define.\",\r\n        \"    // It is here now to allow easier tuning.\",\r\n        \"    // Trims the algorithm from processing darks.\",\r\n        \"    // The console setting has a different mapping than the quality setting.\",\r\n        \"    // This only applies when FXAA_EARLY_EXIT is 1.\",\r\n        \"    // This does not apply to PS3,\",\r\n        \"    // PS3 was simplified to avoid more shader instructions.\",\r\n        \"    //   0.06 - faster but more aliasing in darks\",\r\n        \"    //   0.05 - default\",\r\n        \"    //   0.04 - slower and less aliasing in darks\",\r\n        \"    // Special notes when using FXAA_GREEN_AS_LUMA,\",\r\n        \"    //   Likely want to set this to zero.\",\r\n        \"    //   As colors that are mostly not-green\",\r\n        \"    //   will appear very dark in the green channel!\",\r\n        \"    //   Tune by looking at mostly non-green content,\",\r\n        \"    //   then start at zero and increase until aliasing is a problem.\",\r\n        \"    FxaaFloat fxaaConsoleEdgeThresholdMin,\",\r\n        \"    //\",\r\n        \"    // Extra constants for 360 FXAA Console only.\",\r\n        \"    // Use zeros or anything else for other platforms.\",\r\n        \"    // These must be in physical constant registers and NOT immedates.\",\r\n        \"    // Immedates will result in compiler un-optimizing.\",\r\n        \"    // {xyzw} = float4(1.0, -1.0, 0.25, -0.25)\",\r\n        \"    FxaaFloat4 fxaaConsole360ConstDir\",\r\n        \") {\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"    FxaaFloat2 posM;\",\r\n        \"    posM.x = pos.x;\",\r\n        \"    posM.y = pos.y;\",\r\n        \"    #if (FXAA_GATHER4_ALPHA == 1)\",\r\n        \"        #if (FXAA_DISCARD == 0)\",\r\n        \"            FxaaFloat4 rgbyM = FxaaTexTop(tex, posM);\",\r\n        \"            #if (FXAA_GREEN_AS_LUMA == 0)\",\r\n        \"                #define lumaM rgbyM.w\",\r\n        \"            #else\",\r\n        \"                #define lumaM rgbyM.y\",\r\n        \"            #endif\",\r\n        \"        #endif\",\r\n        \"        #if (FXAA_GREEN_AS_LUMA == 0)\",\r\n        \"            FxaaFloat4 luma4A = FxaaTexAlpha4(tex, posM);\",\r\n        \"            FxaaFloat4 luma4B = FxaaTexOffAlpha4(tex, posM, FxaaInt2(-1, -1));\",\r\n        \"        #else\",\r\n        \"            FxaaFloat4 luma4A = FxaaTexGreen4(tex, posM);\",\r\n        \"            FxaaFloat4 luma4B = FxaaTexOffGreen4(tex, posM, FxaaInt2(-1, -1));\",\r\n        \"        #endif\",\r\n        \"        #if (FXAA_DISCARD == 1)\",\r\n        \"            #define lumaM luma4A.w\",\r\n        \"        #endif\",\r\n        \"        #define lumaE luma4A.z\",\r\n        \"        #define lumaS luma4A.x\",\r\n        \"        #define lumaSE luma4A.y\",\r\n        \"        #define lumaNW luma4B.w\",\r\n        \"        #define lumaN luma4B.z\",\r\n        \"        #define lumaW luma4B.x\",\r\n        \"    #else\",\r\n        \"        FxaaFloat4 rgbyM = FxaaTexTop(tex, posM);\",\r\n        \"        #if (FXAA_GREEN_AS_LUMA == 0)\",\r\n        \"            #define lumaM rgbyM.w\",\r\n        \"        #else\",\r\n        \"            #define lumaM rgbyM.y\",\r\n        \"        #endif\",\r\n        \"        #if (FXAA_GLSL_100 == 1)\",\r\n        \"          FxaaFloat lumaS = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 0.0, 1.0), fxaaQualityRcpFrame.xy));\",\r\n        \"          FxaaFloat lumaE = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 1.0, 0.0), fxaaQualityRcpFrame.xy));\",\r\n        \"          FxaaFloat lumaN = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 0.0,-1.0), fxaaQualityRcpFrame.xy));\",\r\n        \"          FxaaFloat lumaW = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2(-1.0, 0.0), fxaaQualityRcpFrame.xy));\",\r\n        \"        #else\",\r\n        \"          FxaaFloat lumaS = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 0, 1), fxaaQualityRcpFrame.xy));\",\r\n        \"          FxaaFloat lumaE = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 1, 0), fxaaQualityRcpFrame.xy));\",\r\n        \"          FxaaFloat lumaN = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 0,-1), fxaaQualityRcpFrame.xy));\",\r\n        \"          FxaaFloat lumaW = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(-1, 0), fxaaQualityRcpFrame.xy));\",\r\n        \"        #endif\",\r\n        \"    #endif\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"    FxaaFloat maxSM = max(lumaS, lumaM);\",\r\n        \"    FxaaFloat minSM = min(lumaS, lumaM);\",\r\n        \"    FxaaFloat maxESM = max(lumaE, maxSM);\",\r\n        \"    FxaaFloat minESM = min(lumaE, minSM);\",\r\n        \"    FxaaFloat maxWN = max(lumaN, lumaW);\",\r\n        \"    FxaaFloat minWN = min(lumaN, lumaW);\",\r\n        \"    FxaaFloat rangeMax = max(maxWN, maxESM);\",\r\n        \"    FxaaFloat rangeMin = min(minWN, minESM);\",\r\n        \"    FxaaFloat rangeMaxScaled = rangeMax * fxaaQualityEdgeThreshold;\",\r\n        \"    FxaaFloat range = rangeMax - rangeMin;\",\r\n        \"    FxaaFloat rangeMaxClamped = max(fxaaQualityEdgeThresholdMin, rangeMaxScaled);\",\r\n        \"    FxaaBool earlyExit = range < rangeMaxClamped;\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"    if(earlyExit)\",\r\n        \"        #if (FXAA_DISCARD == 1)\",\r\n        \"            FxaaDiscard;\",\r\n        \"        #else\",\r\n        \"            return rgbyM;\",\r\n        \"        #endif\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"    #if (FXAA_GATHER4_ALPHA == 0)\",\r\n        \"        #if (FXAA_GLSL_100 == 1)\",\r\n        \"          FxaaFloat lumaNW = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2(-1.0,-1.0), fxaaQualityRcpFrame.xy));\",\r\n        \"          FxaaFloat lumaSE = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 1.0, 1.0), fxaaQualityRcpFrame.xy));\",\r\n        \"          FxaaFloat lumaNE = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 1.0,-1.0), fxaaQualityRcpFrame.xy));\",\r\n        \"          FxaaFloat lumaSW = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2(-1.0, 1.0), fxaaQualityRcpFrame.xy));\",\r\n        \"        #else\",\r\n        \"          FxaaFloat lumaNW = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(-1,-1), fxaaQualityRcpFrame.xy));\",\r\n        \"          FxaaFloat lumaSE = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 1, 1), fxaaQualityRcpFrame.xy));\",\r\n        \"          FxaaFloat lumaNE = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 1,-1), fxaaQualityRcpFrame.xy));\",\r\n        \"          FxaaFloat lumaSW = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(-1, 1), fxaaQualityRcpFrame.xy));\",\r\n        \"        #endif\",\r\n        \"    #else\",\r\n        \"        FxaaFloat lumaNE = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(1, -1), fxaaQualityRcpFrame.xy));\",\r\n        \"        FxaaFloat lumaSW = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(-1, 1), fxaaQualityRcpFrame.xy));\",\r\n        \"    #endif\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"    FxaaFloat lumaNS = lumaN + lumaS;\",\r\n        \"    FxaaFloat lumaWE = lumaW + lumaE;\",\r\n        \"    FxaaFloat subpixRcpRange = 1.0/range;\",\r\n        \"    FxaaFloat subpixNSWE = lumaNS + lumaWE;\",\r\n        \"    FxaaFloat edgeHorz1 = (-2.0 * lumaM) + lumaNS;\",\r\n        \"    FxaaFloat edgeVert1 = (-2.0 * lumaM) + lumaWE;\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"    FxaaFloat lumaNESE = lumaNE + lumaSE;\",\r\n        \"    FxaaFloat lumaNWNE = lumaNW + lumaNE;\",\r\n        \"    FxaaFloat edgeHorz2 = (-2.0 * lumaE) + lumaNESE;\",\r\n        \"    FxaaFloat edgeVert2 = (-2.0 * lumaN) + lumaNWNE;\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"    FxaaFloat lumaNWSW = lumaNW + lumaSW;\",\r\n        \"    FxaaFloat lumaSWSE = lumaSW + lumaSE;\",\r\n        \"    FxaaFloat edgeHorz4 = (abs(edgeHorz1) * 2.0) + abs(edgeHorz2);\",\r\n        \"    FxaaFloat edgeVert4 = (abs(edgeVert1) * 2.0) + abs(edgeVert2);\",\r\n        \"    FxaaFloat edgeHorz3 = (-2.0 * lumaW) + lumaNWSW;\",\r\n        \"    FxaaFloat edgeVert3 = (-2.0 * lumaS) + lumaSWSE;\",\r\n        \"    FxaaFloat edgeHorz = abs(edgeHorz3) + edgeHorz4;\",\r\n        \"    FxaaFloat edgeVert = abs(edgeVert3) + edgeVert4;\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"    FxaaFloat subpixNWSWNESE = lumaNWSW + lumaNESE;\",\r\n        \"    FxaaFloat lengthSign = fxaaQualityRcpFrame.x;\",\r\n        \"    FxaaBool horzSpan = edgeHorz >= edgeVert;\",\r\n        \"    FxaaFloat subpixA = subpixNSWE * 2.0 + subpixNWSWNESE;\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"    if(!horzSpan) lumaN = lumaW;\",\r\n        \"    if(!horzSpan) lumaS = lumaE;\",\r\n        \"    if(horzSpan) lengthSign = fxaaQualityRcpFrame.y;\",\r\n        \"    FxaaFloat subpixB = (subpixA * (1.0/12.0)) - lumaM;\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"    FxaaFloat gradientN = lumaN - lumaM;\",\r\n        \"    FxaaFloat gradientS = lumaS - lumaM;\",\r\n        \"    FxaaFloat lumaNN = lumaN + lumaM;\",\r\n        \"    FxaaFloat lumaSS = lumaS + lumaM;\",\r\n        \"    FxaaBool pairN = abs(gradientN) >= abs(gradientS);\",\r\n        \"    FxaaFloat gradient = max(abs(gradientN), abs(gradientS));\",\r\n        \"    if(pairN) lengthSign = -lengthSign;\",\r\n        \"    FxaaFloat subpixC = FxaaSat(abs(subpixB) * subpixRcpRange);\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"    FxaaFloat2 posB;\",\r\n        \"    posB.x = posM.x;\",\r\n        \"    posB.y = posM.y;\",\r\n        \"    FxaaFloat2 offNP;\",\r\n        \"    offNP.x = (!horzSpan) ? 0.0 : fxaaQualityRcpFrame.x;\",\r\n        \"    offNP.y = ( horzSpan) ? 0.0 : fxaaQualityRcpFrame.y;\",\r\n        \"    if(!horzSpan) posB.x += lengthSign * 0.5;\",\r\n        \"    if( horzSpan) posB.y += lengthSign * 0.5;\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"    FxaaFloat2 posN;\",\r\n        \"    posN.x = posB.x - offNP.x * FXAA_QUALITY_P0;\",\r\n        \"    posN.y = posB.y - offNP.y * FXAA_QUALITY_P0;\",\r\n        \"    FxaaFloat2 posP;\",\r\n        \"    posP.x = posB.x + offNP.x * FXAA_QUALITY_P0;\",\r\n        \"    posP.y = posB.y + offNP.y * FXAA_QUALITY_P0;\",\r\n        \"    FxaaFloat subpixD = ((-2.0)*subpixC) + 3.0;\",\r\n        \"    FxaaFloat lumaEndN = FxaaLuma(FxaaTexTop(tex, posN));\",\r\n        \"    FxaaFloat subpixE = subpixC * subpixC;\",\r\n        \"    FxaaFloat lumaEndP = FxaaLuma(FxaaTexTop(tex, posP));\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"    if(!pairN) lumaNN = lumaSS;\",\r\n        \"    FxaaFloat gradientScaled = gradient * 1.0/4.0;\",\r\n        \"    FxaaFloat lumaMM = lumaM - lumaNN * 0.5;\",\r\n        \"    FxaaFloat subpixF = subpixD * subpixE;\",\r\n        \"    FxaaBool lumaMLTZero = lumaMM < 0.0;\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"    lumaEndN -= lumaNN * 0.5;\",\r\n        \"    lumaEndP -= lumaNN * 0.5;\",\r\n        \"    FxaaBool doneN = abs(lumaEndN) >= gradientScaled;\",\r\n        \"    FxaaBool doneP = abs(lumaEndP) >= gradientScaled;\",\r\n        \"    if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P1;\",\r\n        \"    if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P1;\",\r\n        \"    FxaaBool doneNP = (!doneN) || (!doneP);\",\r\n        \"    if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P1;\",\r\n        \"    if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P1;\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"    if(doneNP) {\",\r\n        \"        if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\r\n        \"        if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\r\n        \"        if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\r\n        \"        if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\r\n        \"        doneN = abs(lumaEndN) >= gradientScaled;\",\r\n        \"        doneP = abs(lumaEndP) >= gradientScaled;\",\r\n        \"        if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P2;\",\r\n        \"        if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P2;\",\r\n        \"        doneNP = (!doneN) || (!doneP);\",\r\n        \"        if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P2;\",\r\n        \"        if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P2;\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"        #if (FXAA_QUALITY_PS > 3)\",\r\n        \"        if(doneNP) {\",\r\n        \"            if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\r\n        \"            if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\r\n        \"            if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\r\n        \"            if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\r\n        \"            doneN = abs(lumaEndN) >= gradientScaled;\",\r\n        \"            doneP = abs(lumaEndP) >= gradientScaled;\",\r\n        \"            if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P3;\",\r\n        \"            if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P3;\",\r\n        \"            doneNP = (!doneN) || (!doneP);\",\r\n        \"            if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P3;\",\r\n        \"            if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P3;\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"            #if (FXAA_QUALITY_PS > 4)\",\r\n        \"            if(doneNP) {\",\r\n        \"                if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\r\n        \"                if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\r\n        \"                if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\r\n        \"                if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\r\n        \"                doneN = abs(lumaEndN) >= gradientScaled;\",\r\n        \"                doneP = abs(lumaEndP) >= gradientScaled;\",\r\n        \"                if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P4;\",\r\n        \"                if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P4;\",\r\n        \"                doneNP = (!doneN) || (!doneP);\",\r\n        \"                if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P4;\",\r\n        \"                if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P4;\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"                #if (FXAA_QUALITY_PS > 5)\",\r\n        \"                if(doneNP) {\",\r\n        \"                    if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\r\n        \"                    if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\r\n        \"                    if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\r\n        \"                    if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\r\n        \"                    doneN = abs(lumaEndN) >= gradientScaled;\",\r\n        \"                    doneP = abs(lumaEndP) >= gradientScaled;\",\r\n        \"                    if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P5;\",\r\n        \"                    if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P5;\",\r\n        \"                    doneNP = (!doneN) || (!doneP);\",\r\n        \"                    if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P5;\",\r\n        \"                    if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P5;\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"                    #if (FXAA_QUALITY_PS > 6)\",\r\n        \"                    if(doneNP) {\",\r\n        \"                        if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\r\n        \"                        if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\r\n        \"                        if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\r\n        \"                        if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\r\n        \"                        doneN = abs(lumaEndN) >= gradientScaled;\",\r\n        \"                        doneP = abs(lumaEndP) >= gradientScaled;\",\r\n        \"                        if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P6;\",\r\n        \"                        if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P6;\",\r\n        \"                        doneNP = (!doneN) || (!doneP);\",\r\n        \"                        if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P6;\",\r\n        \"                        if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P6;\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"                        #if (FXAA_QUALITY_PS > 7)\",\r\n        \"                        if(doneNP) {\",\r\n        \"                            if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\r\n        \"                            if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\r\n        \"                            if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\r\n        \"                            if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\r\n        \"                            doneN = abs(lumaEndN) >= gradientScaled;\",\r\n        \"                            doneP = abs(lumaEndP) >= gradientScaled;\",\r\n        \"                            if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P7;\",\r\n        \"                            if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P7;\",\r\n        \"                            doneNP = (!doneN) || (!doneP);\",\r\n        \"                            if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P7;\",\r\n        \"                            if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P7;\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"    #if (FXAA_QUALITY_PS > 8)\",\r\n        \"    if(doneNP) {\",\r\n        \"        if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\r\n        \"        if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\r\n        \"        if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\r\n        \"        if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\r\n        \"        doneN = abs(lumaEndN) >= gradientScaled;\",\r\n        \"        doneP = abs(lumaEndP) >= gradientScaled;\",\r\n        \"        if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P8;\",\r\n        \"        if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P8;\",\r\n        \"        doneNP = (!doneN) || (!doneP);\",\r\n        \"        if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P8;\",\r\n        \"        if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P8;\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"        #if (FXAA_QUALITY_PS > 9)\",\r\n        \"        if(doneNP) {\",\r\n        \"            if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\r\n        \"            if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\r\n        \"            if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\r\n        \"            if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\r\n        \"            doneN = abs(lumaEndN) >= gradientScaled;\",\r\n        \"            doneP = abs(lumaEndP) >= gradientScaled;\",\r\n        \"            if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P9;\",\r\n        \"            if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P9;\",\r\n        \"            doneNP = (!doneN) || (!doneP);\",\r\n        \"            if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P9;\",\r\n        \"            if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P9;\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"            #if (FXAA_QUALITY_PS > 10)\",\r\n        \"            if(doneNP) {\",\r\n        \"                if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\r\n        \"                if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\r\n        \"                if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\r\n        \"                if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\r\n        \"                doneN = abs(lumaEndN) >= gradientScaled;\",\r\n        \"                doneP = abs(lumaEndP) >= gradientScaled;\",\r\n        \"                if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P10;\",\r\n        \"                if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P10;\",\r\n        \"                doneNP = (!doneN) || (!doneP);\",\r\n        \"                if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P10;\",\r\n        \"                if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P10;\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"                #if (FXAA_QUALITY_PS > 11)\",\r\n        \"                if(doneNP) {\",\r\n        \"                    if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\r\n        \"                    if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\r\n        \"                    if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\r\n        \"                    if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\r\n        \"                    doneN = abs(lumaEndN) >= gradientScaled;\",\r\n        \"                    doneP = abs(lumaEndP) >= gradientScaled;\",\r\n        \"                    if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P11;\",\r\n        \"                    if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P11;\",\r\n        \"                    doneNP = (!doneN) || (!doneP);\",\r\n        \"                    if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P11;\",\r\n        \"                    if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P11;\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"                    #if (FXAA_QUALITY_PS > 12)\",\r\n        \"                    if(doneNP) {\",\r\n        \"                        if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\r\n        \"                        if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\r\n        \"                        if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\r\n        \"                        if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\r\n        \"                        doneN = abs(lumaEndN) >= gradientScaled;\",\r\n        \"                        doneP = abs(lumaEndP) >= gradientScaled;\",\r\n        \"                        if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P12;\",\r\n        \"                        if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P12;\",\r\n        \"                        doneNP = (!doneN) || (!doneP);\",\r\n        \"                        if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P12;\",\r\n        \"                        if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P12;\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"                    }\",\r\n        \"                    #endif\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"                }\",\r\n        \"                #endif\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"            }\",\r\n        \"            #endif\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"        }\",\r\n        \"        #endif\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"    }\",\r\n        \"    #endif\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"                        }\",\r\n        \"                        #endif\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"                    }\",\r\n        \"                    #endif\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"                }\",\r\n        \"                #endif\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"            }\",\r\n        \"            #endif\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"        }\",\r\n        \"        #endif\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"    }\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"    FxaaFloat dstN = posM.x - posN.x;\",\r\n        \"    FxaaFloat dstP = posP.x - posM.x;\",\r\n        \"    if(!horzSpan) dstN = posM.y - posN.y;\",\r\n        \"    if(!horzSpan) dstP = posP.y - posM.y;\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"    FxaaBool goodSpanN = (lumaEndN < 0.0) != lumaMLTZero;\",\r\n        \"    FxaaFloat spanLength = (dstP + dstN);\",\r\n        \"    FxaaBool goodSpanP = (lumaEndP < 0.0) != lumaMLTZero;\",\r\n        \"    FxaaFloat spanLengthRcp = 1.0/spanLength;\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"    FxaaBool directionN = dstN < dstP;\",\r\n        \"    FxaaFloat dst = min(dstN, dstP);\",\r\n        \"    FxaaBool goodSpan = directionN ? goodSpanN : goodSpanP;\",\r\n        \"    FxaaFloat subpixG = subpixF * subpixF;\",\r\n        \"    FxaaFloat pixelOffset = (dst * (-spanLengthRcp)) + 0.5;\",\r\n        \"    FxaaFloat subpixH = subpixG * fxaaQualitySubpix;\",\r\n        \"/*--------------------------------------------------------------------------*/\",\r\n        \"    FxaaFloat pixelOffsetGood = goodSpan ? pixelOffset : 0.0;\",\r\n        \"    FxaaFloat pixelOffsetSubpix = max(pixelOffsetGood, subpixH);\",\r\n        \"    if(!horzSpan) posM.x += pixelOffsetSubpix * lengthSign;\",\r\n        \"    if( horzSpan) posM.y += pixelOffsetSubpix * lengthSign;\",\r\n        \"    #if (FXAA_DISCARD == 1)\",\r\n        \"        return FxaaTexTop(tex, posM);\",\r\n        \"    #else\",\r\n        \"        return FxaaFloat4(FxaaTexTop(tex, posM).xyz, lumaM);\",\r\n        \"    #endif\",\r\n        \"}\",\r\n        \"/*==========================================================================*/\",\r\n        \"#endif\",\r\n        \"\",\r\n        \"void main() {\",\r\n        \"  gl_FragColor = FxaaPixelShader(\",\r\n        \"    vUv,\",\r\n        \"    vec4(0.0),\",\r\n        \"    tDiffuse,\",\r\n        \"    tDiffuse,\",\r\n        \"    tDiffuse,\",\r\n        \"    resolution,\",\r\n        \"    vec4(0.0),\",\r\n        \"    vec4(0.0),\",\r\n        \"    vec4(0.0),\",\r\n        \"    0.75,\",\r\n        \"    0.166,\",\r\n        \"    0.0833,\",\r\n        \"    0.0,\",\r\n        \"    0.0,\",\r\n        \"    0.0,\",\r\n        \"    vec4(0.0)\",\r\n        \"  );\",\r\n        \"\",\r\n        \"  // TODO avoid querying texture twice for same texel\",\r\n        \"  gl_FragColor.a = texture2D(tDiffuse, vUv).a;\",\r\n        \"}\"\r\n\t].join(\"\\n\")\r\n\r\n};\r\n\r\nexport{\r\n\tFXAAShader\r\n};\r\n","let _extends = ( des, src, over ) => {\r\n  let res = _extend( des, src, over );\r\n\r\n  function _extend( des, src, over ) {\r\n    let override = true;\r\n    if( over === false ) {\r\n      override = false;\r\n    }\r\n    if( src instanceof Array ) {\r\n      for( let i = 0, len = src.length; i < len; i++ )\r\n        _extend( des, src[ i ], override );\r\n    }\r\n    for( let i in src ) {\r\n      if( override || !( i in des ) ) {\r\n        des[ i ] = src[ i ];\r\n      }\r\n    }\r\n    return des;\r\n  }\r\n  for( let i in src ) {\r\n    delete res[ i ];\r\n  }\r\n  return res;\r\n};\r\n\r\nexport {\r\n  _extends\r\n};","let rndInt = ( max ) => {\r\n  return Math.floor( Math.random() * max );\r\n};\r\nexport {\r\n  rndInt\r\n};","let rndString = ( len ) => {\r\n  if( len <= 0 ) {\r\n    return '';\r\n  }\r\n  len = len - 1 || 31;\r\n  let $chars =\r\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n  let maxPos = $chars.length + 1;\r\n  let pwd = $chars.charAt( Math.floor( Math.random() * ( maxPos - 10 ) ) );\r\n  for( let i = 0; i < len; i++ ) {\r\n    pwd += $chars.charAt( Math.floor( Math.random() * maxPos ) );\r\n  }\r\n  return pwd;\r\n};\r\n\r\nexport {\r\n  rndString\r\n};","import { _extends as extend } from './extends';\r\nimport { rndInt } from './rndInt';\r\nimport { rndString } from './rndString';\r\n\r\nlet Util = {\r\n  extend,\r\n  rndInt,\r\n  rndString\r\n};\r\n\r\nexport {\r\n  Util\r\n};","/* eslint-disable */\r\nexport { DefaultSettings } from './core/settings/DefaultSettings.js';\r\nexport { App } from './core/App.js';\r\nexport { Bind } from './core/Bind.js';\r\nexport { LoopManager } from './core/LoopManager.js';\r\nexport { Monitor } from './core/Monitor.js';\r\nexport { Transitioner } from './core/Transitioner.js';\r\nexport { View } from './core/View.js';\r\nexport { VR } from './core/VR.js';\r\nexport { World } from './core/World.js';\r\n\r\nexport { NotFunctionError } from './error/NotFunctionError.js';\r\n\r\nexport { EventManager } from './events/EventManager.js';\r\nexport { Events } from './events/Events.js';\r\nexport { Signal } from './events/Signal.js';\r\n\r\nexport { GUI, Body, Txt, Div } from './gui/GUI.js';\r\n\r\nexport { LoaderFactory } from './loader/LoaderFactory.js';\r\n\r\nexport { EffectComposer } from './postprocessing/EffectComposer.js';\r\n\r\nexport { Pass }          from './postprocessing/Pass.js';\r\nexport { DotScreenPass } from './postprocessing/DotScreenPass.js';\r\nexport { RenderPass }    from './postprocessing/RenderPass.js';\r\nexport { ShaderPass }    from './postprocessing/ShaderPass.js';\r\nexport { GlitchPass }    from './postprocessing/GlitchPass.js';\r\nexport { OutlinePass }    from './postprocessing/OutlinePass.js';\r\n\r\nexport { GlitchShader }    from './postprocessing/shader/GlitchShader.js';\r\nexport { FXAAShader }      from './postprocessing/shader/FXAAShader.js';\r\nexport { CopyShader }      from './postprocessing/shader/CopyShader.js';\r\nexport { DotScreenShader } from './postprocessing/shader/DotScreenShader.js';\r\n\r\nexport { Util } from './util/Util.js';\r\n\r\n//export * from './thirdparty/three.module.js';"],"names":["NotFunctionError","extend"],"mappings":"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"}