{"version":3,"file":"nova.js","sources":["../src/core/settings/DefaultSettings.js","../src/error/NotFunctionError.js","../src/core/LoopManager.js","../src/events/EventManager.js","../src/core/World.js","../src/constant.js","../src/core/VR.js","../src/core/App.js","../src/core/Monitor.js","../src/core/Transitioner.js","../src/core/View.js","../src/events/Signal.js","../src/events/Events.js","../src/gui/GUI.js","../src/loader/LoaderFactory.js","../src/postprocessing/shader/CopyShader.js","../src/postprocessing/Pass.js","../src/postprocessing/ShaderPass.js","../src/postprocessing/RenderPass.js","../src/postprocessing/EffectComposer.js","../src/postprocessing/shader/DotScreenShader.js","../src/postprocessing/DotScreenPass.js","../src/postprocessing/shader/GlitchShader.js","../src/postprocessing/GlitchPass.js","../src/postprocessing/shader/FXAAShader.js","../src/util/extends.js","../src/util/rndInt.js","../src/util/rndString.js","../src/util/Util.js","../src/Nova.js"],"sourcesContent":["//适合大部分WebGL的APP设置\r\nlet DefaultSettings = {\r\n  parent: document.body, //APP所在DOM容器\r\n  setCommonCSS: true, //设置默认CSS样式，无法滚动，超出区域不显示，取消所有内外边距\r\n  autoStart: true, //自动执行渲染循环和逻辑循环\r\n  autoResize: true, //自动拉伸自适应不同屏幕分辨率\r\n  VRSupport: false, //是否加载VR支持模块\r\n  renderer: {\r\n    clearColor: 0x000000, //渲染器的默认清除颜色\r\n    clearAlpha: 1, //渲染器的默认清除颜色的透明度\r\n    pixelRatio: window.devicePixelRatio || 1, //用于移动平台的清晰度\r\n    precision: 'highp', // 渲染精细度，默认为高\r\n    antialias: true, //是否开启抗锯齿\r\n    alpha: false, // 渲染器是否保存alpha缓冲\r\n  },\r\n  normalEventList: ['click', 'mousedown', 'mouseup', 'touchstart',\r\n    'touchend', 'touchmove', 'mousemove'\r\n  ], //默认开启的原生事件监听，不建议将所有的事件监听都写在里面，每一个事件监听都会增加一次射线法碰撞检测，如果不必要的事件过多会降低性能\r\n  hammerEventList: 'press tap pressup pan swipe', //默认hammer手势事件的监听，同normalEventList一样，用到什么加入什么，不要一大堆东西全塞进去\r\n}\r\n\r\nexport {\r\n  DefaultSettings\r\n};","let NotFunctionError = class extends Error {\r\n  constructor( message ) {\r\n    super( message );\r\n    this.name = 'NotFunctionError';\r\n    this.message = message || 'The object is not a function.';\r\n  }\r\n};\r\n\r\nexport {\r\n  NotFunctionError\r\n};","import { NotFunctionError } from './../error/NotFunctionError.js';\r\n\r\nclass LoopManager {\r\n  constructor(cycleLevel = 1) {\r\n    //当它是true，不执行该循环\r\n    this.disable = false;\r\n    //记录循环次数\r\n    this.times = 0;\r\n    //每隔多少循环执行一次update，用于调整fps。数字越大，fps越低\r\n    this.cycleLevel = cycleLevel <= 0 ? 1 : cycleLevel;\r\n    this.functionMap = new Map();\r\n  }\r\n\r\n  update(time) {\r\n    if (this.disable || this.times % this.cycleLevel !== 0) {\r\n      return;\r\n    }\r\n    this.functionMap.forEach((value) => {\r\n      value();\r\n    });\r\n  }\r\n\r\n  add(func, key) {\r\n    if (typeof func !== 'function') {\r\n      throw new NotFunctionError();\r\n    } else {\r\n      if (key) {\r\n        this.functionMap.set(key, func);\r\n      } else {\r\n        key = Symbol();\r\n        this.functionMap.set(key, func);\r\n        return key;\r\n      }\r\n    }\r\n  }\r\n\r\n  removeAll() {\r\n    this.functionMap.clear();\r\n  }\r\n\r\n  remove(funcOrKey) {\r\n    if (typeof funcOrKey === 'function') {\r\n      this.functionMap.forEach((value, key) => {\r\n        if (value === funcOrKey) {\r\n          return this.functionMap.delete(key);\r\n        }\r\n      });\r\n      return false;\r\n    } else {\r\n      return this.functionMap.delete(funcOrKey);\r\n    }\r\n  }\r\n}\r\n\r\nexport {\r\n  LoopManager\r\n};","class EventManager {\r\n  constructor(world) {\r\n    world.eventManager = this;\r\n    this.world = world;\r\n    this.disable = false;\r\n    this.isDeep = true;\r\n    this.receivers = world.receivers;\r\n    this.raycaster = new THREE.Raycaster();\r\n    this.centerRaycaster = new THREE.Raycaster();\r\n    this.selectedObj = null;\r\n    this.centerSelectedObj = null;\r\n    this.isDetectingEnter = true;\r\n    let normalEventList = world.app.options.normalEventList;\r\n\r\n    function normalEventToHammerEvent(event) {\r\n      return {\r\n        changedPointers: [event],\r\n        center: {\r\n          x: event.clientX,\r\n          y: event.clientY,\r\n        },\r\n        type: event.type,\r\n        target: event.target\r\n      };\r\n    }\r\n\r\n    for (let eventItem of normalEventList) {\r\n      world.app.parent.addEventListener(eventItem, (event) => {\r\n        if (this.disable) return;\r\n        this.raycastCheck(normalEventToHammerEvent(event));\r\n      });\r\n    }\r\n\r\n    try {\r\n      if (Hammer === undefined) {\r\n        return;\r\n      }\r\n    } catch (e) {\r\n      console.warn('Hammer没有引入，手势事件无法使用，只能使用基础的交互事件。');\r\n      return;\r\n    }\r\n    this.hammer = new Hammer(world.app.renderer.domElement);\r\n    console.log(world.app.options.hammerEventList)\r\n    this.hammer.on(world.app.options.hammerEventList, (event) => {\r\n    \tif (this.disable) return;\r\n      this.raycastCheck(event);\r\n    });\r\n  }\r\n\r\n  raycastCheck(event) {\r\n    let vec2 = new THREE.Vector2(event.center.x / this.world.app.getWorldWidth() *\r\n      2 - 1, 1 - event.center.y / this.world.app.getWorldHeight() * 2);\r\n    this.raycaster.setFromCamera(vec2, this.world.camera);\r\n    let intersects = this.raycaster.intersectObjects(this.world.receivers,\r\n      this.isDeep);\r\n    let intersect;\r\n    for (let i = 0; i < intersects.length; i++) {\r\n      if (intersects[i].object.isPenetrated) {\r\n        continue;\r\n      } else {\r\n        intersect = intersects[i];\r\n        break;\r\n      }\r\n    }\r\n    if (intersect && intersect.object.events && intersect.object.events[event\r\n        .type]) {\r\n      intersect.object.events[event.type].run(event, intersect);\r\n    }\r\n  }\r\n}\r\n\r\nexport {\r\n  EventManager\r\n};","import { LoopManager } from './LoopManager.js';\r\nimport { EventManager } from './../events/EventManager';\r\n\r\nclass World {\r\n  constructor(app, camera, clearColor) {\r\n    this.app = app;\r\n    this.scene = new THREE.Scene();\r\n    this.logicLoop = new LoopManager();\r\n    this.renderLoop = new LoopManager();\r\n    this.camera = camera || new THREE.PerspectiveCamera(45, app.getWorldWidth() /\r\n      app.getWorldHeight(), 0.01, 5000);\r\n    this.receivers = this.scene.children;\r\n    this.eventManager = new EventManager(this);\r\n    this.renderTargetParameters = {\r\n      minFilter: THREE.LinearFilter,\r\n      magFilter: THREE.LinearFilter,\r\n      format: THREE.RGBFormat,\r\n      stencilBuffer: false\r\n    };\r\n    this.isRTT = false;\r\n    this.clearColor = clearColor || 0;\r\n    this.fbo = new THREE.WebGLRenderTarget(this.app.getWorldWidth(),\r\n      this.app.getWorldHeight(), this.renderTargetParameters);\r\n    this.defaultRenderID = Symbol();\r\n    this.renderLoop.add(() => {\r\n      this.app.renderer.render(this.scene, this.camera);\r\n    }, this.defaultRenderID);\r\n  }\r\n\r\n  update(time) {\r\n    this.logicLoop.update(time);\r\n    this.renderLoop.update(time);\r\n  }\r\n\r\n  resize(width, height) {\r\n    if (this.camera.type === 'PerspectiveCamera') {\r\n      this.camera.aspect = width / height;\r\n      this.camera.updateProjectionMatrix();\r\n    } else {\r\n      this.camera.left = -width / 2;\r\n      this.camera.right = width / 2;\r\n      this.camera.top = height / 2;\r\n      this.camera.bottom = -height / 2;\r\n      this.camera.updateProjectionMatrix();\r\n    }\r\n  }\r\n}\r\n\r\nexport {\r\n  World\r\n};","const APP_STOP = 0;\r\nconst APP_RUNNING = 1;\r\nconst APP_PAUSE = 2;\r\nconst WORLD_RUNNING = 1;\r\nconst WORLD_PAUSE = 2;\r\nconst VERSION = '0.0.1';\r\n\r\nconsole.log(\"Nova framework for Three.js, version: %c \" + VERSION, \"color:blue\");\r\n\r\nexport {\r\n  APP_STOP,\r\n  APP_RUNNING,\r\n  APP_PAUSE,\r\n  WORLD_RUNNING,\r\n  WORLD_PAUSE\r\n};","class VR {\r\n  constructor(app) {\r\n    this.app = app;\r\n    this.display = undefined;\r\n    this.polyfill = undefined;\r\n    this.isOpenVR = false;\r\n    this.vrEffect = undefined;\r\n    this.getVRDisplay();\r\n    this.createVREffect();\r\n  }\r\n\r\n  createVREffect() {\r\n    if (this.vrEffect) {\r\n      return;\r\n    }\r\n    if (!THREE.VREffect) {\r\n      console.warn(\"未引入VREffect.js，无法创建VR模式。\");\r\n      return;\r\n    }\r\n    this.vrEffect = new THREE.VREffect(this.app.renderer);\r\n    this.vrEffect.setSize(this.app.renderer.domElement.clientWidth,\r\n      this.app.renderer.domElement.clientHeight, false);\r\n    this.vrEffect.isOpened = false;\r\n    this.vrEffect.updateId = Symbol();\r\n  }\r\n\r\n  setPolyfill() {\r\n    if (this.polyfill) {\r\n      return;\r\n    }\r\n    if (!window.WebVRPolyfill) {\r\n      console.warn(\"未引入WebVRPolyfill.js，无法创建VR兼容模式。\");\r\n      return;\r\n    }\r\n    let config = (function() {\r\n      let config = {};\r\n      let q = window.location.search.substring(1);\r\n      if (q === '') {\r\n        return config;\r\n      }\r\n      let params = q.split('&');\r\n      let param, name, value;\r\n      for (let i = 0; i < params.length; i++) {\r\n        param = params[i].split('=');\r\n        name = param[0];\r\n        value = param[1];\r\n\r\n        // All config values are either boolean or float\r\n        config[name] = value === 'true' ? true :\r\n          value === 'false' ? false :\r\n          parseFloat(value);\r\n      }\r\n      return config;\r\n    })();\r\n    this.polyfill = new WebVRPolyfill(config);\r\n  }\r\n\r\n  getVRDisplay() {\r\n    if (!navigator.getVRDisplays) {\r\n      this.setPolyfill();\r\n    }\r\n    if(!navigator.getVRDisplays){\r\n    \treturn;\r\n    }\r\n    return navigator.getVRDisplays()\r\n      .then((vrDisplays) => {\r\n        if (vrDisplays.length) {\r\n          this.display = vrDisplays[0];\r\n          return this.display;\r\n        }\r\n        return \"no\";\r\n      }, (vrDisplays) => {\r\n        return \"no\";\r\n      });\r\n  }\r\n\r\n  open() {\r\n    if (!this.display || !this.vrEffect) {\r\n      console.warn(\"未发现VR设备或浏览器不兼容，无法进入VR模式。\");\r\n      return;\r\n    }\r\n    this.app.renderLoop.add(() => {\r\n      this.vrEffect.render(this.app.world.scene, this.app.world.camera);\r\n    }, this.vrEffect.updateId);\r\n    this.display.requestPresent([{ source: this.app.renderer.domElement }]);\r\n  }\r\n\r\n  close() {\r\n    this.app.renderLoop.remove(this.vrEffect.updateId);\r\n  }\r\n}\r\n\r\nexport {\r\n  VR\r\n};","import { World } from './World.js';\r\nimport { APP_RUNNING, APP_STOP, APP_PAUSE } from './../constant.js';\r\nimport { LoopManager } from './LoopManager.js';\r\nimport { VR } from './VR.js';\r\nimport { DefaultSettings } from './settings/DefaultSettings.js';\r\n\r\nclass App {\r\n  constructor(settings = {}) {\r\n    this.options = _.defaultsDeep(settings, DefaultSettings);\r\n    if (this.options.setCommonCSS) {\r\n      this.setCommonCSS();\r\n    }\r\n    this.parent = this.options.parent;\r\n    this.renderer = new THREE.WebGLRenderer({\r\n      antialias: this.options.renderer.antialias,\r\n      precision: this.options.renderer.precision,\r\n      alpha: this.options.renderer.alpha,\r\n    });\r\n    this.renderer.setClearColor(this.options.renderer.clearColor,\r\n      this.options.renderer.clearAlpha);\r\n    this.world = new World(this);\r\n    this.animationFrame;\r\n    this.state = APP_STOP;\r\n    this.logicLoop = new LoopManager();\r\n    this.renderLoop = new LoopManager();\r\n    window.addEventListener('resize', () => {\r\n      this.resize();\r\n    });\r\n    if (this.options.autoStart) {\r\n      this.start();\r\n    }\r\n    if (this.options.VRSupport) {\r\n      this.VR = new VR(this);\r\n    }\r\n  }\r\n\r\n  resize() {\r\n    let width = this.getWorldWidth();\r\n    let height = this.getWorldHeight();\r\n    this.world.resize(width, height);\r\n    this.renderer.setSize(width, height);\r\n    this.renderer.setPixelRatio(this.options.renderer.pixelRatio);\r\n  }\r\n\r\n  update(time) {\r\n    if (this.state === APP_RUNNING) {\r\n      this.logicLoop.update(time);\r\n      this.world.update(time);\r\n      this.renderLoop.update(time);\r\n    }\r\n    this.animationFrame = requestAnimationFrame(() => {\r\n      this.update();\r\n    });\r\n  }\r\n\r\n  setCommonCSS() {\r\n    document.write(\r\n      '<style>*{margin:0;padding:0} body{overflow:hidden}</style>');\r\n  }\r\n\r\n  getWorldWidth() {\r\n    return this.parent === document.body ? window.innerWidth :\r\n      this.parent.offsetWidth;\r\n  }\r\n\r\n  getWorldHeight() {\r\n    return this.parent === document.body ? window.innerHeight :\r\n      this.parent.offsetHeight;\r\n  }\r\n\r\n  start() {\r\n    if (this.state === APP_STOP) {\r\n      this.state = APP_RUNNING;\r\n      this.parent.appendChild(this.renderer.domElement);\r\n      this.resize();\r\n      this.update();\r\n    }\r\n  }\r\n\r\n  resume() {\r\n    if (this.state === APP_PAUSE) {\r\n      this.state = APP_RUNNING;\r\n    }\r\n  }\r\n\r\n  pause() {\r\n    if (this.state === APP_RUNNING) {\r\n      this.state = APP_PAUSE;\r\n    }\r\n  }\r\n\r\n  destroy() {\r\n    this.world.destroy();\r\n  }\r\n\r\n  openFullScreen() {\r\n    let container = this.parent;\r\n    this.isFullScreen = true;\r\n    if (container.requestFullscreen) {\r\n      container.requestFullscreen();\r\n    } else if (container.msRequestFullscreen) {\r\n      container.msRequestFullscreen();\r\n    } else if (container.mozRequestFullScreen) {\r\n      container.mozRequestFullScreen();\r\n    } else if (container.webkitRequestFullscreen) {\r\n      container.webkitRequestFullscreen();\r\n    } else {\r\n      this.isFullScreen = false;\r\n    }\r\n    return this.isFullScreen;\r\n  }\r\n\r\n  closeFullScreen() {\r\n    let container = document;\r\n    this.isFullScreen = false;\r\n    if (container.exitFullscreen) {\r\n      container.exitFullscreen();\r\n    } else if (container.mozCancelFullScreen) {\r\n      container.mozCancelFullScreen();\r\n    } else if (container.webkitExitFullScreen) {\r\n      container.webkitExitFullScreen();\r\n    } else if (container.msExitFullscreen) {\r\n      container.msExitFullscreen();\r\n    } else if (container.webkitCancelFullScreen) {\r\n      container.webkitCancelFullScreen();\r\n    } else if (container.webkitExitFullScreen) {\r\n      container.webkitCancelFullScreen();\r\n    }\r\n    return this.isFullScreen;\r\n  }\r\n\r\n  toggleFullScreen() {\r\n    if (this.isFullScreen) {\r\n      this.closeFullScreen();\r\n    } else {\r\n      this.openFullScreen();\r\n    }\r\n\r\n  }\r\n\r\n  screenshot() {\r\n    let w = window.open('', '');\r\n    w.document.title = \"Nova Screenshot\";\r\n    let img = new Image();\r\n    this.renderer.render(this.world.scene, this.world.camera);\r\n    img.src = app.renderer.domElement.toDataURL();\r\n    w.document.body.appendChild(img);\r\n  }\r\n}\r\n\r\nexport {\r\n  App\r\n};","class Monitor {\r\n  constructor(world, option) {\r\n    this.option = option;\r\n    this.fullWidth = world.app.getWorldWidth();\r\n    this.fullHeight = world.app.getWorldHeight();\r\n    this.renderer = new THREE.WebGLRenderer();\r\n    this.world = world;\r\n    this.canvas = this.renderer.domElement;\r\n    this.renderer.setSize(this.fullWidth * option.width, this.fullHeight *\r\n      option.height);\r\n    this.renderer.setPixelRatio(window.devicePixelRatio);\r\n  }\r\n\r\n  setViewOffset() {\r\n    let viewX = this.fullWidth * this.option.left;\r\n    let viewY = this.fullHeight * this.option.top;\r\n    let viewWidth = this.fullWidth * this.option.width;\r\n    let viewHeight = this.fullHeight * this.option.height;\r\n    this.world.camera.setViewOffset(this.fullWidth, this.fullHeight, viewX,\r\n      viewY, viewWidth, viewHeight);\r\n  }\r\n\r\n  render() {\r\n    this.setViewOffset();\r\n    this.renderer.render(this.world.scene, this.world.camera);\r\n  }\r\n}\r\n\r\nexport {\r\n  Monitor\r\n};","import { World } from './World';\r\n\r\nclass Transitioner {\r\n  constructor(app, world, texture, options = {}) {\r\n    this.options = _.defaults(options, {\r\n      'useTexture': true,\r\n      'transition': 0,\r\n      'speed': 10,\r\n      'texture': 5,\r\n      'loopTexture': true,\r\n      'isAnimate': true,\r\n      'threshold': 0.3\r\n    });\r\n    this.app = app;\r\n    this.targetWorld = world;\r\n    this.maskTexture = texture;\r\n    this.material = new THREE.ShaderMaterial({\r\n      uniforms: {\r\n        tDiffuse1: {\r\n          value: null\r\n        },\r\n        tDiffuse2: {\r\n          value: null\r\n        },\r\n        mixRatio: {\r\n          value: 0.0\r\n        },\r\n        threshold: {\r\n          value: 0.1\r\n        },\r\n        useTexture: {\r\n          value: 1\r\n        },\r\n        tMixTexture: {\r\n          value: this.maskTexture\r\n        }\r\n      },\r\n      vertexShader: `varying vec2 vUv;\r\n        void main() {\r\n        vUv = vec2( uv.x, uv.y );\r\n        gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\r\n        }`,\r\n      fragmentShader: `uniform float mixRatio;\r\n        uniform sampler2D tDiffuse1;\r\n        uniform sampler2D tDiffuse2;\r\n        uniform sampler2D tMixTexture;\r\n        uniform int useTexture;\r\n        uniform float threshold;\r\n        varying vec2 vUv;\r\n        \r\n        void main() {\r\n\r\n        vec4 texel1 = texture2D( tDiffuse1, vUv );\r\n        vec4 texel2 = texture2D( tDiffuse2, vUv );\r\n\r\n        if (useTexture==1) {\r\n\r\n        vec4 transitionTexel = texture2D( tMixTexture, vUv );\r\n        float r = mixRatio * (1.0 + threshold * 2.0) - threshold;\r\n        float mixf=clamp((transitionTexel.r - r)*(1.0/threshold), 0.0, 1.0);\r\n\r\n        gl_FragColor = mix( texel1, texel2, mixf );\r\n        } else {\r\n\r\n        gl_FragColor = mix( texel2, texel1, mixRatio );\r\n\r\n        }\r\n        }`\r\n    });\r\n    let halfWidth = app.getWorldWidth() / 2;\r\n    let halfHeight = app.getWorldHeight() / 2;\r\n    this.world = new World(app, new THREE.OrthographicCamera(-halfWidth,\r\n      halfWidth, halfHeight, -halfHeight, -10, 10));\r\n\r\n    let geometry = new THREE.PlaneBufferGeometry(halfWidth * 2,\r\n      halfHeight * 2);\r\n\r\n    let quad = new THREE.Mesh(geometry, this.material);\r\n    this.world.scene.add(quad);\r\n\r\n    this.sceneA = world;\r\n    this.sceneB = app.world;\r\n\r\n    this.material.uniforms.tDiffuse1.value = this.sceneA.fbo.texture;\r\n    this.material.uniforms.tDiffuse2.value = this.sceneB.fbo.texture;\r\n\r\n    this.needChange = false;\r\n  }\r\n\r\n  setThreshold(value) {\r\n    this.material.uniforms.threshold.value = value;\r\n  }\r\n\r\n  useTexture(value) {\r\n    this.material.uniforms.useTexture.value = value ? 1 : 0;\r\n  }\r\n\r\n  setTexture(i) {\r\n    this.material.uniforms.tMixTexture.value = this.texture;\r\n  }\r\n\r\n  update() {\r\n    let value = Math.min(this.options.transition, 1);\r\n    value = Math.max(value, 0);\r\n    this.material.uniforms.mixRatio.value = value;\r\n    this.app.renderer.setClearColor(this.sceneB.clearColor || 0);\r\n    this.sceneB.update();\r\n    this.app.renderer.render(this.sceneB.scene, this.sceneB.camera, this.sceneB\r\n      .fbo, true);\r\n    this.app.renderer.setClearColor(this.sceneA.clearColor || 0);\r\n    this.sceneA.update();\r\n    this.app.renderer.render(this.sceneA.scene, this.sceneA.camera, this.sceneA\r\n      .fbo, true);\r\n    this.app.renderer.render(this.world.scene, this.world.camera, null, true);\r\n  }\r\n}\r\n\r\nexport {\r\n  Transitioner\r\n};","import { LoopManager } from './LoopManager.js';\r\nimport { EventManager } from './../events/EventManager';\r\n\r\nclass View {\r\n  constructor(world, camera, {\r\n    clearColor = 0x000000,\r\n    top = 0,\r\n    left = 0,\r\n    width = 1,\r\n    height = 1\r\n  }) {\r\n    this.world = world;\r\n    this.scene = world.scene;\r\n    this.worldWidth = world.app.getWorldWidth();\r\n    this.worldHeight = world.app.getWorldHeight();\r\n    this.renderer = world.app.renderer;\r\n    this.camera = camera || new THREE.PerspectiveCamera(45, this.worldWidth /\r\n      this.worldHeight, 0.01, 1000);\r\n    this.renderTargetParameters = {\r\n      minFilter: THREE.LinearFilter,\r\n      magFilter: THREE.LinearFilter,\r\n      format: THREE.RGBFormat,\r\n      stencilBuffer: false\r\n    };\r\n    this.isRTT = false;\r\n    this.clearColor = clearColor;\r\n    this.left = left;\r\n    this.top = top;\r\n    this.width = width;\r\n    this.height = height;\r\n\r\n    this.fbo = new THREE.WebGLRenderTarget(\r\n      this.worldWidth * this.width,\r\n      this.worldHeight * this.height, this.renderTargetParameters\r\n    );\r\n\r\n    this.resize();\r\n  }\r\n\r\n  render() {\r\n    var left = Math.floor(this.worldWidth * this.left);\r\n    var top = Math.floor(this.worldHeight * this.top);\r\n    var width = Math.floor(this.worldWidth * this.width);\r\n    var height = Math.floor(this.worldHeight * this.height);\r\n    this.renderer.setViewport(left, top, width, height);\r\n    this.renderer.setScissor(left, top, width, height);\r\n    this.renderer.setScissorTest(true);\r\n    this.renderer.setClearColor(this.clearColor);\r\n    this.renderer.render(this.scene, this.camera);\r\n  }\r\n\r\n  resize() {\r\n    this.worldWidth = this.world.app.getWorldWidth();\r\n    this.worldHeight = this.world.app.getWorldHeight();\r\n    let width = Math.floor(this.worldWidth * this.width);\r\n    let height = Math.floor(this.worldHeight * this.height);\r\n    if (this.camera.type === 'PerspectiveCamera') {\r\n      this.camera.aspect = width / height;\r\n      this.camera.updateProjectionMatrix();\r\n    } else {\r\n      this.camera.left = -width / 2;\r\n      this.camera.right = width / 2;\r\n      this.camera.top = height / 2;\r\n      this.camera.bottom = -height / 2;\r\n      this.camera.updateProjectionMatrix();\r\n    }\r\n  }\r\n}\r\n\r\nexport {\r\n  View\r\n};","/**\r\n * 用于事件处理\r\n * \r\n * */\r\nclass Signal {\r\n  constructor(type) {\r\n    this.type = type;\r\n    this.functionArr = [];\r\n  }\r\n\r\n  add(func) {\r\n    if (typeof func !== 'function') {\r\n      throw new NotFunctionError();\r\n    } else {\r\n      this.functionArr.push(func);\r\n    }\r\n  }\r\n\r\n  remove(func) {\r\n    return _.remove(this.functionArr, function(n) {\r\n      return n === func;\r\n    });\r\n  }\r\n\r\n  run(event, intersect) {\r\n    this.functionArr.forEach(\r\n      (func) => {\r\n        func(event, intersect);\r\n      });\r\n  }\r\n}\r\n\r\nexport {\r\n  Signal\r\n};","import { Signal } from './Signal';\r\n\r\n/**\r\n * 由于事件处理\r\n * \r\n * */\r\nclass Events {\r\n  constructor(list) {\r\n    list = list || ['press', 'tap', 'pressup', 'pan', 'swipe', 'click',\r\n      'mousedown', 'mouseup', 'touchstart', 'touchend', 'touchmove',\r\n      'mousemove'\r\n    ];\r\n    for (let eventItem of list) {\r\n      this[eventItem] = new Signal(eventItem);\r\n    }\r\n  }\r\n}\r\n\r\nexport {\r\n  Events\r\n};","class GUI extends THREE.Group {\r\n  constructor() {\r\n    super();\r\n    this.css = {\r\n      backgroundColor: \"rgba(0,0,0,0)\",\r\n      opacity: 1,\r\n      width: 1,\r\n      height: 1\r\n    };\r\n  }\r\n}\r\n\r\nclass Body extends GUI {\r\n  constructor(world, css) {\r\n    super();\r\n    this.world = world;\r\n    this.distanceFromCamera = 50;\r\n    this.css = _.defaults(css || {}, this.css);\r\n    this.canvas = document.createElement(\"canvas\");\r\n    var spriteMaterial = new THREE.SpriteMaterial({\r\n      map: this.canvas,\r\n      color: 0xffffff\r\n    });\r\n    this.element = new THREE.Sprite(spriteMaterial);\r\n    this.vector = new THREE.Vector3();\r\n    this.update();\r\n    this.add(this.element);\r\n  }\r\n\r\n  lockToScreen() {\r\n    var c = this.world.camera;\r\n    c.getWorldDirection(this.vector);\r\n    this.rotation.set(c.rotation.x, c.rotation.y, c.rotation.z);\r\n    this.position.set(c.position.x + this.vector.x * this.distanceFromCamera,\r\n      c.position.y +\r\n      this.vector.y * this.distanceFromCamera, c.position.z + this.vector.z *\r\n      this.distanceFromCamera\r\n    );\r\n  }\r\n\r\n  update() {\r\n    this.canvas.width = this.css.width;\r\n    this.canvas.height = this.css.height;\r\n    let ctx = this.canvas.getContext(\"2d\");\r\n    ctx.fillStyle = this.css.backgroundColor;\r\n    ctx.fillRect(0, 0, this.css.width, this.css.height);\r\n    var texture = new THREE.CanvasTexture(this.canvas);\r\n    texture.generateMipmaps = false;\r\n    texture.minFilter = THREE.LinearFilter;\r\n    texture.magFilter = THREE.LinearFilter;\r\n    var spriteMaterial = new THREE.SpriteMaterial({\r\n      map: texture,\r\n      color: 0xffffff\r\n    });\r\n    this.element.material.dispose();\r\n    this.element.material = spriteMaterial;\r\n    this.element.scale.set(this.css.width / 4, this.css.height / 4, 1);\r\n  }\r\n}\r\n\r\nclass Div extends GUI {\r\n  constructor(world, css) {\r\n    super();\r\n    this.world = world;\r\n    this.css = _.defaults(css || {}, this.css);\r\n    this.canvas = document.createElement(\"canvas\");\r\n    var spriteMaterial = new THREE.SpriteMaterial({\r\n      map: canvas,\r\n      color: 0xffffff\r\n    });\r\n    this.element = new THREE.Sprite(spriteMaterial);\r\n    this.vector = new THREE.Vector3();\r\n    this.update();\r\n    this.add(this.element);\r\n  }\r\n\r\n  update() {\r\n    this.canvas.width = this.css.width;\r\n    this.canvas.height = this.css.height;\r\n    let ctx = this.canvas.getContext(\"2d\");\r\n    ctx.fillStyle = this.css.backgroundColor;\r\n    ctx.fillRect(0, 0, this.css.width, this.css.height);\r\n    var texture = new THREE.CanvasTexture(this.canvas);\r\n    texture.generateMipmaps = false;\r\n    texture.minFilter = THREE.LinearFilter;\r\n    texture.magFilter = THREE.LinearFilter;\r\n    var spriteMaterial = new THREE.SpriteMaterial({\r\n      map: texture,\r\n      color: 0xffffff\r\n    });\r\n    this.element.material.dispose();\r\n    this.element.material = spriteMaterial;\r\n    this.element.scale.set(this.css.width / 4, this.css.height / 4, 1);\r\n  }\r\n}\r\n\r\nclass Txt extends THREE.Mesh {\r\n  constructor(text, css) {\r\n    css = _.defaults(css || {}, {\r\n      fontStyle: \"normal\",\r\n      fontVariant: \"normal\",\r\n      fontSize: 12,\r\n      fontWeight: \"normal\",\r\n      fontFamily: \"微软雅黑\",\r\n      color: \"#ffffff\",\r\n      textAlign: \"center\",\r\n      backgroundColor: \"rgba(0,0,0,0)\",\r\n      opacity: 1,\r\n      width: 1,\r\n      height: 1,\r\n      scale: {\r\n        x: 0.25,\r\n        y: 0.25,\r\n        z: 1,\r\n      }\r\n    });\r\n    let canvas = document.createElement(\"canvas\");\r\n    var material = new THREE.MeshBasicMaterial({\r\n      transparent: true,\r\n      needsUpdate: false,\r\n      color: 0xffffff\r\n    });\r\n    super(new THREE.PlaneBufferGeometry(css.width / 8, css.height / 8),\r\n      material);\r\n    this.text = text;\r\n    this.canvas = canvas;\r\n    this.css = css;\r\n    this.update();\r\n  }\r\n\r\n  update() {\r\n    this.canvas.width = this.css.width;\r\n    this.canvas.height = this.css.height;\r\n    let ctx = this.canvas.getContext(\"2d\");\r\n    ctx.fillStyle = this.css.backgroundColor;\r\n    ctx.fillRect(0, 0, this.css.width, this.css.height);\r\n    ctx.textAlign = this.css.textAlign;\r\n    ctx.font = this.css.fontStyle + \" \" + this.css.fontVariant + \" \" + this\r\n      .css.fontWeight +\r\n      \" \" + this.css.fontSize + \"px \" + this.css.fontFamily;\r\n    ctx.fillStyle = this.css.color;\r\n    let width = ctx.measureText(this.text)\r\n      .width;\r\n    ctx.fillText(this.text, this.css.width / 2, this.css.height / 2 + this.css\r\n      .fontSize / 4);\r\n    var texture = new THREE.CanvasTexture(this.canvas);\r\n    texture.generateMipmaps = false;\r\n    texture.minFilter = THREE.LinearFilter;\r\n    texture.magFilter = THREE.LinearFilter;\r\n    this.material.map = texture;\r\n    this.scale.set(this.css.scale.x, this.css.scale.y, this.css.scale.z);\r\n    this.material.opacity = this.css.opacity;\r\n  }\r\n}\r\n\r\n//$$.Img = function(url, css, callback) {\r\n//$$.DOM.call(this);\r\n//var that = this;\r\n//if ($$.Loader.RESOURCE.textures[url]) {\r\n//  var spriteMaterial = new THREE.SpriteMaterial({\r\n//    map: $$.Loader.RESOURCE.textures[url],\r\n//    color: 0xffffff\r\n//  });\r\n//  var sprite = new THREE.Sprite(spriteMaterial);\r\n//  that.element = sprite;\r\n//  that.add(that.element);\r\n//  this.css = $$.extends({}, [this.css, {\r\n//    width: $$.Loader.RESOURCE.textures[url].image.naturalWidth,\r\n//    height: $$.Loader.RESOURCE.textures[url].image.naturalHeight\r\n//  }, css]);\r\n//  sprite.scale.set(this.css.width / 4, this.css.height / 4, 1);\r\n//  sprite.material.opacity = that.css.opacity;\r\n//  if (callback) {\r\n//    callback();\r\n//  }\r\n//} else {\r\n//  that.element = {};\r\n//  $$.Loader.loadTexture([url], function(texture) {\r\n//    texture.generateMipmaps = false;\r\n//    texture.minFilter = THREE.LinearFilter;\r\n//    texture.magFilter = THREE.LinearFilter;\r\n//    var tmpProperty = that.element;\r\n//    var spriteMaterial = new THREE.SpriteMaterial({\r\n//      map: texture,\r\n//      color: 0xffffff\r\n//    });\r\n//    var sprite = new THREE.Sprite(spriteMaterial);\r\n//    that.element = sprite;\r\n//    that.add(that.element);\r\n//    this.css = $$.extends({}, [this.css, {\r\n//      width: texture.image.naturalWidth,\r\n//      height: texture.image.naturalHeight\r\n//    }, css]);\r\n//    if (css.opacity != null) {\r\n//      that.css.opacity = css.opacity;\r\n//    }\r\n//    sprite.scale.set(this.css.width / 4, this.css.height / 4, 1);\r\n//\r\n//    for (var i in tmpProperty) {\r\n//      that.element[i] = tmpProperty[i];\r\n//    }\r\n//    sprite.material.opacity = that.css.opacity;\r\n//    if (callback) {\r\n//      callback();\r\n//    }\r\n//  });\r\n//}\r\n//};\r\n//(function() {\r\n//var Super = function() {};\r\n//Super.prototype = $$.DOM.prototype;\r\n//$$.Img.prototype = new Super();\r\n//})();\r\n//\r\n//$$.Video = function(url, css) {\r\n//$$.DOM.call(this);\r\n//var that = this;\r\n//this.video = document.createElement(\"video\");\r\n//this.video.src = url;\r\n//var texture = new THREE.VideoTexture(this.video);\r\n//texture.generateMipmaps = false;\r\n//texture.minFilter = THREE.LinearFilter;\r\n//texture.magFilter = THREE.LinearFilter;\r\n//var spriteMaterial = new THREE.SpriteMaterial({\r\n//  map: texture,\r\n//  color: 0xffffff\r\n//});\r\n//var sprite = new THREE.Sprite(spriteMaterial);\r\n//that.element = sprite;\r\n//that.add(that.element);\r\n//this.css = $$.extends({}, [this.css, {\r\n//  width: texture.image.naturalWidth,\r\n//  height: texture.image.naturalHeight,\r\n//}, css]);\r\n//sprite.scale.set(this.css.width / 4, this.css.height / 4, 1);\r\n//};\r\n//(function() {\r\n//var Super = function() {};\r\n//Super.prototype = $$.DOM.prototype;\r\n//$$.Video.prototype = new Super();\r\n//})();\r\n\r\nexport {\r\n  GUI,\r\n  Body,\r\n  Txt,\r\n  Div\r\n};","class LoaderFactory {\r\n  constructor() {\r\n    let manager = new THREE.LoadingManager();\r\n    this.Resource = {\r\n      images: {},\r\n      materials: {},\r\n      textures: {},\r\n      models: {},\r\n      sounds: {},\r\n      fonts: {},\r\n      unloaded: {\r\n        textures: [],\r\n        models: [],\r\n        sounds: [],\r\n        fonts: [],\r\n        images: []\r\n      }\r\n    };\r\n\r\n    manager.onStart = (url, itemsLoaded, itemsTotal) => {\r\n      if (this.onStart && typeof this.onStart === 'function') {\r\n        this.onStart(url, itemsLoaded, itemsTotal);\r\n      }\r\n    };\r\n\r\n    manager.onLoad = () => {\r\n      if (this.onLoad && typeof this.onLoad === 'function') {\r\n        this.onLoad();\r\n      }\r\n    };\r\n\r\n    manager.onProgress = (url, itemsLoaded, itemsTotal) => {\r\n      if (this.onProgress && typeof this.onProgress === 'function') {\r\n        this.onProgress(url, itemsLoaded, itemsTotal);\r\n      }\r\n    };\r\n\r\n    manager.onError = (url) => {\r\n      if (this.onError && typeof this.onError === 'function') {\r\n        this.onError(url);\r\n      }\r\n    };\r\n\r\n    this.imageLoader = new THREE.ImageLoader(manager);\r\n    this.textureLoader = new THREE.TextureLoader(manager);\r\n    this.audioListener = new THREE.AudioListener(manager);\r\n  }\r\n\r\n  loadImage(key, src, sucFunc, errFunc) {\r\n    return this.imageLoader.load(src,\r\n      (data) => {\r\n        this.Resource.images[key] = data;\r\n        if (sucFunc) sucFunc(data);\r\n      }, undefined, (err) => {\r\n        this.Resource.unloaded.images.push(src);\r\n        if (errFunc) errFunc(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  loadTexture(key, src, sucFunc, errFunc) {\r\n    return this.textureLoader.load(src,\r\n      (data) => {\r\n        this.Resource.textures[key] = data;\r\n        if (sucFunc) sucFunc(data);\r\n      }, undefined, (err) => {\r\n        this.Resource.unloaded.textures.push(src);\r\n        if (errFunc) errFunc(err);\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\nexport {\r\n  LoaderFactory\r\n};","let CopyShader = {\r\n  uniforms: {\r\n    'tDiffuse': { value: null },\r\n    'opacity': { value: 1.0 }\r\n  },\r\n\r\n  vertexShader: `\r\n    varying vec2 vUv;\r\n    void main() {\r\n      vUv = uv;\r\n      gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\r\n    }`,\r\n\r\n  fragmentShader: `\r\n    uniform float opacity;\r\n    uniform sampler2D tDiffuse;\r\n    varying vec2 vUv;\r\n    void main() {\r\n      vec4 texel = texture2D( tDiffuse, vUv );\r\n      gl_FragColor = opacity * texel;\r\n    }`\r\n};\r\n\r\nexport {\r\n  CopyShader\r\n};","class Pass {\r\n  constructor(effectComposer, renderToScreen = false) {\r\n    // if set to true, the pass is processed by the composer\r\n    this.enabled = true;\r\n    // if set to true, the pass indicates to swap read and write buffer after rendering\r\n    this.needsSwap = true;\r\n    // if set to true, the pass clears its buffer before rendering\r\n    this.clear = false;\r\n    // if set to true, the result of the pass is rendered to screen\r\n    this.renderToScreen = renderToScreen;\r\n    if (effectComposer) {\r\n      effectComposer.addPass(this);\r\n    }\r\n  }\r\n  setSize(width, height) {}\r\n  render(renderer, writeBuffer, readBuffer, delta, maskActive) {}\r\n}\r\n\r\nexport {\r\n  Pass\r\n};","import { Pass } from './Pass.js';\r\n\r\nclass ShaderPass extends Pass {\r\n  constructor(shader, effectComposer, renderToScreen = false,\r\n    textureID = \"tDiffuse\") {\r\n    super(effectComposer, renderToScreen);\r\n    this.textureID = textureID;\r\n\r\n    if (shader instanceof THREE.ShaderMaterial) {\r\n      this.uniforms = shader.uniforms;\r\n      this.material = shader;\r\n    } else if (shader) {\r\n      this.uniforms = THREE.UniformsUtils.clone(shader.uniforms);\r\n      this.material = new THREE.ShaderMaterial({\r\n        defines: shader.defines || {},\r\n        uniforms: this.uniforms,\r\n        vertexShader: shader.vertexShader,\r\n        fragmentShader: shader.fragmentShader\r\n      });\r\n    }\r\n\r\n    this.camera = new THREE.OrthographicCamera(-1, 1, 1, -1, 0, 1);\r\n    this.scene = new THREE.Scene();\r\n    this.quad = new THREE.Mesh(new THREE.PlaneBufferGeometry(2, 2), null);\r\n    this.quad.frustumCulled = false;\r\n    this.scene.add(this.quad);\r\n  }\r\n\r\n  render(renderer, writeBuffer, readBuffer) {\r\n    if (this.uniforms[this.textureID]) {\r\n      this.uniforms[this.textureID].value = readBuffer.texture;\r\n    }\r\n\r\n    this.quad.material = this.material;\r\n    if (this.renderToScreen) {\r\n      renderer.render(this.scene, this.camera);\r\n    } else {\r\n      renderer.render(this.scene, this.camera, writeBuffer, this.clear);\r\n    }\r\n  }\r\n}\r\n\r\nexport {\r\n  ShaderPass\r\n};","import { Pass } from './Pass.js';\r\n\r\nclass RenderPass extends Pass {\r\n  constructor(scene, camera, overrideMaterial, clearColor, clearAlpha = 0) {\r\n    super();\r\n    this.scene = scene;\r\n    this.camera = camera;\r\n    this.overrideMaterial = overrideMaterial;\r\n    this.clearColor = clearColor;\r\n    this.clearAlpha = clearAlpha;\r\n    this.clear = true;\r\n    this.clearDepth = false;\r\n    this.needsSwap = false;\r\n  }\r\n\r\n  render(renderer, writeBuffer, readBuffer, delta, maskActive) {\r\n    let oldAutoClear = renderer.autoClear;\r\n    renderer.autoClear = false;\r\n    this.scene.overrideMaterial = this.overrideMaterial;\r\n    let oldClearColor, oldClearAlpha;\r\n    if (this.clearColor) {\r\n      oldClearColor = renderer.getClearColor()\r\n        .getHex();\r\n      oldClearAlpha = renderer.getClearAlpha();\r\n      renderer.setClearColor(this.clearColor, this.clearAlpha);\r\n    }\r\n    if (this.clearDepth) {\r\n      renderer.clearDepth();\r\n    }\r\n    renderer.render(this.scene, this.camera, this.renderToScreen ? undefined :\r\n      readBuffer, this.clear);\r\n    if (this.clearColor) {\r\n      renderer.setClearColor(oldClearColor, oldClearAlpha);\r\n    }\r\n    this.scene.overrideMaterial = undefined;\r\n    renderer.autoClear = oldAutoClear;\r\n  }\r\n}\r\n\r\nexport {\r\n  RenderPass\r\n};","import { CopyShader } from './shader/CopyShader.js';\r\nimport { ShaderPass } from './ShaderPass.js';\r\nimport { RenderPass } from './RenderPass.js';\r\n\r\nclass EffectComposer {\r\n  constructor(world, options = {}, renderTarget) {\r\n    options = _.defaults(options, {\r\n      renderer: undefined,\r\n      camera: undefined,\r\n      scene: undefined,\r\n      overrideMaterial: undefined,\r\n      clearColor: undefined,\r\n      clearAlpha: 0\r\n    });\r\n    this.renderer = options.renderer || world.app.renderer;\r\n    if (renderTarget === undefined) {\r\n      let parameters = {\r\n        minFilter: THREE.LinearFilter,\r\n        magFilter: THREE.LinearFilter,\r\n        format: THREE.RGBAFormat,\r\n        stencilBuffer: false\r\n      };\r\n      let size = this.renderer.getDrawingBufferSize();\r\n      renderTarget = new THREE.WebGLRenderTarget(size.width, size.height,\r\n        parameters);\r\n      renderTarget.texture.name = 'EffectComposer.rt1';\r\n    }\r\n\r\n    this.renderTarget1 = renderTarget;\r\n    this.renderTarget2 = renderTarget.clone();\r\n    this.renderTarget2.texture.name = 'EffectComposer.rt2';\r\n    this.writeBuffer = this.renderTarget1;\r\n    this.readBuffer = this.renderTarget2;\r\n\r\n    this.passes = [];\r\n    this.copyPass = new ShaderPass(CopyShader);\r\n\r\n    this.addPass(new RenderPass(options.scene || world.scene,\r\n      options.scene || world.camera));\r\n  }\r\n\r\n  swapBuffers() {\r\n    let tmp = this.readBuffer;\r\n    this.readBuffer = this.writeBuffer;\r\n    this.writeBuffer = tmp;\r\n  }\r\n\r\n  addPass(pass) {\r\n    this.passes.push(pass);\r\n    let size = this.renderer.getDrawingBufferSize();\r\n    pass.setSize(size.width, size.height);\r\n  }\r\n\r\n  insertPass(pass, index) {\r\n    this.passes.splice(index, 0, pass);\r\n  }\r\n\r\n  render(delta) {\r\n    let maskActive = false;\r\n    let pass, i, il = this.passes.length;\r\n    for (i = 0; i < il; i++) {\r\n      pass = this.passes[i];\r\n      if (pass.enabled === false) continue;\r\n      pass.render(this.renderer, this.writeBuffer, this.readBuffer, delta,\r\n        maskActive);\r\n\r\n      if (pass.needsSwap) {\r\n        if (maskActive) {\r\n          let context = this.renderer.context;\r\n          context.stencilFunc(context.NOTEQUAL, 1, 0xffffffff);\r\n          this.copyPass.render(this.renderer, this.writeBuffer, this.readBuffer,\r\n            delta);\r\n          context.stencilFunc(context.EQUAL, 1, 0xffffffff);\r\n        }\r\n        this.swapBuffers();\r\n      }\r\n\r\n      if (THREE.MaskPass !== undefined) {\r\n        if (pass instanceof THREE.MaskPass) {\r\n          maskActive = true;\r\n        } else if (pass instanceof THREE.ClearMaskPass) {\r\n          maskActive = false;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  reset(renderTarget) {\r\n    if (renderTarget === undefined) {\r\n      let size = this.renderer.getDrawingBufferSize();\r\n      renderTarget = this.renderTarget1.clone();\r\n      renderTarget.setSize(size.width, size.height);\r\n    }\r\n    this.renderTarget1.dispose();\r\n    this.renderTarget2.dispose();\r\n    this.renderTarget1 = renderTarget;\r\n    this.renderTarget2 = renderTarget.clone();\r\n    this.writeBuffer = this.renderTarget1;\r\n    this.readBuffer = this.renderTarget2;\r\n  }\r\n\r\n  setSize(width, height) {\r\n    this.renderTarget1.setSize(width, height);\r\n    this.renderTarget2.setSize(width, height);\r\n    for (let i = 0; i < this.passes.length; i++) {\r\n      this.passes[i].setSize(width, height);\r\n    }\r\n  }\r\n}\r\n\r\nexport {\r\n  EffectComposer\r\n};","let DotScreenShader = {\r\n  uniforms: {\r\n    \"tDiffuse\": { value: null },\r\n    \"tSize\": { value: new THREE.Vector2(256, 256) },\r\n    \"center\": { value: new THREE.Vector2(0.5, 0.5) },\r\n    \"angle\": { value: 1.57 },\r\n    \"scale\": { value: 1.0 }\r\n  },\r\n\r\n  vertexShader: [\r\n    \"varying vec2 vUv;\",\r\n    \"void main() {\",\r\n    \"vUv = uv;\",\r\n    \"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\r\n    \"}\"\r\n  ].join(\"\\n\"),\r\n\r\n  fragmentShader: [\r\n    \"uniform vec2 center;\",\r\n    \"uniform float angle;\",\r\n    \"uniform float scale;\",\r\n    \"uniform vec2 tSize;\",\r\n    \"uniform sampler2D tDiffuse;\",\r\n    \"varying vec2 vUv;\",\r\n    \"float pattern() {\",\r\n    \"float s = sin( angle ), c = cos( angle );\",\r\n    \"vec2 tex = vUv * tSize - center;\",\r\n    \"vec2 point = vec2( c * tex.x - s * tex.y, s * tex.x + c * tex.y ) * scale;\",\r\n    \"return ( sin( point.x ) * sin( point.y ) ) * 4.0;\",\r\n    \"}\",\r\n\r\n    \"void main() {\",\r\n    \"vec4 color = texture2D( tDiffuse, vUv );\",\r\n    \"float average = ( color.r + color.g + color.b ) / 3.0;\",\r\n    \"gl_FragColor = vec4( vec3( average * 10.0 - 5.0 + pattern() ), color.a );\",\r\n    \"}\"\r\n  ].join(\"\\n\")\r\n};\r\n\r\nexport {\r\n  DotScreenShader\r\n};","import { Pass } from './Pass.js';\r\nimport { DotScreenShader } from './shader/DotScreenShader.js';\r\n\r\nclass DotScreenPass extends Pass {\r\n  constructor(center, angle, scale, effectComposer, renderToScreen = false) {\r\n    super(effectComposer, renderToScreen);\r\n    this.uniforms = THREE.UniformsUtils.clone(DotScreenShader.uniforms);\r\n    if (center !== undefined) this.uniforms[\"center\"].value.copy(center);\r\n    if (angle !== undefined) this.uniforms[\"angle\"].value = angle;\r\n    if (scale !== undefined) this.uniforms[\"scale\"].value = scale;\r\n\r\n    this.material = new THREE.ShaderMaterial({\r\n      uniforms: this.uniforms,\r\n      vertexShader: DotScreenShader.vertexShader,\r\n      fragmentShader: DotScreenShader.fragmentShader\r\n    });\r\n\r\n    this.camera = new THREE.OrthographicCamera(-1, 1, 1, -1, 0, 1);\r\n    this.scene = new THREE.Scene();\r\n    this.quad = new THREE.Mesh(new THREE.PlaneBufferGeometry(2, 2), null);\r\n    this.quad.frustumCulled = false; // Avoid getting clipped\r\n    this.scene.add(this.quad);\r\n  }\r\n\r\n  render(renderer, writeBuffer, readBuffer, delta, maskActive) {\r\n    this.uniforms[\"tDiffuse\"].value = readBuffer.texture;\r\n    this.uniforms[\"tSize\"].value.set(readBuffer.width, readBuffer.height);\r\n\r\n    this.quad.material = this.material;\r\n\r\n    if (this.renderToScreen) {\r\n      renderer.render(this.scene, this.camera);\r\n    } else {\r\n      renderer.render(this.scene, this.camera, writeBuffer, this.clear);\r\n    }\r\n  }\r\n}\r\n\r\nexport {\r\n  DotScreenPass\r\n};","let GlitchShader = {\r\n  uniforms: {\r\n    \"tDiffuse\": { value: null }, //diffuse texture\r\n    \"tDisp\": { value: null }, //displacement texture for digital glitch squares\r\n    \"byp\": { value: 0 }, //apply the glitch ?\r\n    \"amount\": { value: 0.08 },\r\n    \"angle\": { value: 0.02 },\r\n    \"seed\": { value: 0.02 },\r\n    \"seed_x\": { value: 0.02 }, //-1,1\r\n    \"seed_y\": { value: 0.02 }, //-1,1\r\n    \"distortion_x\": { value: 0.5 },\r\n    \"distortion_y\": { value: 0.6 },\r\n    \"col_s\": { value: 0.05 }\r\n  },\r\n\r\n  vertexShader: [\r\n    \"varying vec2 vUv;\",\r\n    \"void main() {\",\r\n    \"vUv = uv;\",\r\n    \"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\r\n    \"}\"\r\n  ].join(\"\\n\"),\r\n\r\n  fragmentShader: [\r\n    \"uniform int byp;\", //should we apply the glitch ?\r\n    \"uniform sampler2D tDiffuse;\",\r\n    \"uniform sampler2D tDisp;\",\r\n\r\n    \"uniform float amount;\",\r\n    \"uniform float angle;\",\r\n    \"uniform float seed;\",\r\n    \"uniform float seed_x;\",\r\n    \"uniform float seed_y;\",\r\n    \"uniform float distortion_x;\",\r\n    \"uniform float distortion_y;\",\r\n    \"uniform float col_s;\",\r\n\r\n    \"varying vec2 vUv;\",\r\n\r\n    \"float rand(vec2 co){\",\r\n    \"return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\",\r\n    \"}\",\r\n\r\n    \"void main() {\",\r\n    \"if(byp<1) {\",\r\n    \"vec2 p = vUv;\",\r\n    \"float xs = floor(gl_FragCoord.x / 0.5);\",\r\n    \"float ys = floor(gl_FragCoord.y / 0.5);\",\r\n    //based on staffantans glitch shader for unity https://github.com/staffantan/unityglitch\r\n    \"vec4 normal = texture2D (tDisp, p*seed*seed);\",\r\n    \"if(p.y<distortion_x+col_s && p.y>distortion_x-col_s*seed) {\",\r\n    \"if(seed_x>0.){\",\r\n    \"p.y = 1. - (p.y + distortion_y);\",\r\n    \"}\",\r\n    \"else {\",\r\n    \"p.y = distortion_y;\",\r\n    \"}\",\r\n    \"}\",\r\n    \"if(p.x<distortion_y+col_s && p.x>distortion_y-col_s*seed) {\",\r\n    \"if(seed_y>0.){\",\r\n    \"p.x=distortion_x;\",\r\n    \"}\",\r\n    \"else {\",\r\n    \"p.x = 1. - (p.x + distortion_x);\",\r\n    \"}\",\r\n    \"}\",\r\n    \"p.x+=normal.x*seed_x*(seed/5.);\",\r\n    \"p.y+=normal.y*seed_y*(seed/5.);\",\r\n    //base from RGB shift shader\r\n    \"vec2 offset = amount * vec2( cos(angle), sin(angle));\",\r\n    \"vec4 cr = texture2D(tDiffuse, p + offset);\",\r\n    \"vec4 cga = texture2D(tDiffuse, p);\",\r\n    \"vec4 cb = texture2D(tDiffuse, p - offset);\",\r\n    \"gl_FragColor = vec4(cr.r, cga.g, cb.b, cga.a);\",\r\n    //add noise\r\n    \"vec4 snow = 200.*amount*vec4(rand(vec2(xs * seed,ys * seed*50.))*0.2);\",\r\n    \"gl_FragColor = gl_FragColor+ snow;\",\r\n    \"}\",\r\n    \"else {\",\r\n    \"gl_FragColor=texture2D (tDiffuse, vUv);\",\r\n    \"}\",\r\n    \"}\"\r\n  ].join(\"\\n\")\r\n};\r\n\r\nexport {\r\n  GlitchShader\r\n};","import { Pass } from './Pass.js';\r\nimport { GlitchShader } from './shader/GlitchShader.js';\r\n\r\nclass GlitchPass extends Pass {\r\n  constructor(size = 64, goWild = false, effectComposer, renderToScreen = false) {\r\n    super(effectComposer, renderToScreen);\r\n    this.uniforms = THREE.UniformsUtils.clone(GlitchShader.uniforms);\r\n    this.uniforms[\"tDisp\"].value = this.generateHeightmap(size);\r\n\r\n    this.material = new THREE.ShaderMaterial({\r\n      uniforms: this.uniforms,\r\n      vertexShader: GlitchShader.vertexShader,\r\n      fragmentShader: GlitchShader.fragmentShader\r\n    });\r\n\r\n    this.camera = new THREE.OrthographicCamera(-1, 1, 1, -1, 0, 1);\r\n    this.scene = new THREE.Scene();\r\n\r\n    this.quad = new THREE.Mesh(new THREE.PlaneBufferGeometry(2, 2), null);\r\n    this.quad.frustumCulled = false;\r\n    this.scene.add(this.quad);\r\n\r\n    this.goWild = false;\r\n    this.curF = 0;\r\n    this.generateTrigger();\r\n  }\r\n\r\n  render(renderer, writeBuffer, readBuffer, delta, maskActive) {\r\n    this.uniforms[\"tDiffuse\"].value = readBuffer.texture;\r\n    this.uniforms['seed'].value = Math.random();\r\n    this.uniforms['byp'].value = 0;\r\n\r\n    if (this.curF % this.randX == 0 || this.goWild == true) {\r\n      this.uniforms['amount'].value = Math.random() / 30;\r\n      this.uniforms['angle'].value = THREE.Math.randFloat(-Math.PI, Math.PI);\r\n      this.uniforms['seed_x'].value = THREE.Math.randFloat(-1, 1);\r\n      this.uniforms['seed_y'].value = THREE.Math.randFloat(-1, 1);\r\n      this.uniforms['distortion_x'].value = THREE.Math.randFloat(0, 1);\r\n      this.uniforms['distortion_y'].value = THREE.Math.randFloat(0, 1);\r\n      this.curF = 0;\r\n      this.generateTrigger();\r\n    } else if (this.curF % this.randX < this.randX / 5) {\r\n      this.uniforms['amount'].value = Math.random() / 90;\r\n      this.uniforms['angle'].value = THREE.Math.randFloat(-Math.PI, Math.PI);\r\n      this.uniforms['distortion_x'].value = THREE.Math.randFloat(0, 1);\r\n      this.uniforms['distortion_y'].value = THREE.Math.randFloat(0, 1);\r\n      this.uniforms['seed_x'].value = THREE.Math.randFloat(-0.3, 0.3);\r\n      this.uniforms['seed_y'].value = THREE.Math.randFloat(-0.3, 0.3);\r\n    } else if (this.goWild == false) {\r\n      this.uniforms['byp'].value = 1;\r\n    }\r\n\r\n    this.curF++;\r\n    this.quad.material = this.material;\r\n\r\n    if (this.renderToScreen) {\r\n      renderer.render(this.scene, this.camera);\r\n    } else {\r\n      renderer.render(this.scene, this.camera, writeBuffer, this.clear);\r\n    }\r\n  }\r\n\r\n  generateTrigger() {\r\n    this.randX = THREE.Math.randInt(120, 240);\r\n  }\r\n\r\n  generateHeightmap(size) {\r\n    let dataArr = new Float32Array(size * size * 3);\r\n    let length = size * size;\r\n\r\n    for (let i = 0; i < length; i++) {\r\n      let val = THREE.Math.randFloat(0, 1);\r\n      dataArr[i * 3 + 0] = val;\r\n      dataArr[i * 3 + 1] = val;\r\n      dataArr[i * 3 + 2] = val;\r\n    }\r\n\r\n    let texture = new THREE.DataTexture(dataArr, size, size,\r\n      THREE.RGBFormat, THREE.FloatType);\r\n    texture.needsUpdate = true;\r\n    return texture;\r\n  }\r\n}\r\n\r\nexport {\r\n  GlitchPass\r\n};","let FXAAShader = {\r\n  uniforms: {\r\n    \"tDiffuse\": { value: null },\r\n    \"resolution\": { value: new THREE.Vector2(1 / 1024, 1 / 512) }\r\n  },\r\n\r\n  vertexShader: [\r\n    \"varying vec2 vUv;\",\r\n    \"void main() {\",\r\n    \"vUv = uv;\",\r\n    \"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\r\n    \"}\"\r\n  ].join(\"\\n\"),\r\n\r\n  fragmentShader: [\r\n    \"precision highp float;\",\r\n    \"\",\r\n    \"uniform sampler2D tDiffuse;\",\r\n    \"\",\r\n    \"uniform vec2 resolution;\",\r\n    \"\",\r\n    \"varying vec2 vUv;\",\r\n    \"\",\r\n    \"// FXAA 3.11 implementation by NVIDIA, ported to WebGL by Agost Biro (biro@archilogic.com)\",\r\n    \"\",\r\n    \"//----------------------------------------------------------------------------------\",\r\n    \"// File:        es3-kepler\\FXAA\\assets\\shaders/FXAA_DefaultES.frag\",\r\n    \"// SDK Version: v3.00\",\r\n    \"// Email:       gameworks@nvidia.com\",\r\n    \"// Site:        http://developer.nvidia.com/\",\r\n    \"//\",\r\n    \"// Copyright (c) 2014-2015, NVIDIA CORPORATION. All rights reserved.\",\r\n    \"//\",\r\n    \"// Redistribution and use in source and binary forms, with or without\",\r\n    \"// modification, are permitted provided that the following conditions\",\r\n    \"// are met:\",\r\n    \"//  * Redistributions of source code must retain the above copyright\",\r\n    \"//    notice, this list of conditions and the following disclaimer.\",\r\n    \"//  * Redistributions in binary form must reproduce the above copyright\",\r\n    \"//    notice, this list of conditions and the following disclaimer in the\",\r\n    \"//    documentation and/or other materials provided with the distribution.\",\r\n    \"//  * Neither the name of NVIDIA CORPORATION nor the names of its\",\r\n    \"//    contributors may be used to endorse or promote products derived\",\r\n    \"//    from this software without specific prior written permission.\",\r\n    \"//\",\r\n    \"// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS ``AS IS'' AND ANY\",\r\n    \"// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\",\r\n    \"// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\",\r\n    \"// PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR\",\r\n    \"// CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\",\r\n    \"// EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\",\r\n    \"// PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\",\r\n    \"// PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\",\r\n    \"// OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\",\r\n    \"// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\",\r\n    \"// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\",\r\n    \"//\",\r\n    \"//----------------------------------------------------------------------------------\",\r\n    \"\",\r\n    \"#define FXAA_PC 1\",\r\n    \"#define FXAA_GLSL_100 1\",\r\n    \"#define FXAA_QUALITY_PRESET 12\",\r\n    \"\",\r\n    \"#define FXAA_GREEN_AS_LUMA 1\",\r\n    \"\",\r\n    \"/*--------------------------------------------------------------------------*/\",\r\n    \"#ifndef FXAA_PC_CONSOLE\",\r\n    \"    //\",\r\n    \"    // The console algorithm for PC is included\",\r\n    \"    // for developers targeting really low spec machines.\",\r\n    \"    // Likely better to just run FXAA_PC, and use a really low preset.\",\r\n    \"    //\",\r\n    \"    #define FXAA_PC_CONSOLE 0\",\r\n    \"#endif\",\r\n    \"/*--------------------------------------------------------------------------*/\",\r\n    \"#ifndef FXAA_GLSL_120\",\r\n    \"    #define FXAA_GLSL_120 0\",\r\n    \"#endif\",\r\n    \"/*--------------------------------------------------------------------------*/\",\r\n    \"#ifndef FXAA_GLSL_130\",\r\n    \"    #define FXAA_GLSL_130 0\",\r\n    \"#endif\",\r\n    \"/*--------------------------------------------------------------------------*/\",\r\n    \"#ifndef FXAA_HLSL_3\",\r\n    \"    #define FXAA_HLSL_3 0\",\r\n    \"#endif\",\r\n    \"/*--------------------------------------------------------------------------*/\",\r\n    \"#ifndef FXAA_HLSL_4\",\r\n    \"    #define FXAA_HLSL_4 0\",\r\n    \"#endif\",\r\n    \"/*--------------------------------------------------------------------------*/\",\r\n    \"#ifndef FXAA_HLSL_5\",\r\n    \"    #define FXAA_HLSL_5 0\",\r\n    \"#endif\",\r\n    \"/*==========================================================================*/\",\r\n    \"#ifndef FXAA_GREEN_AS_LUMA\",\r\n    \"    //\",\r\n    \"    // For those using non-linear color,\",\r\n    \"    // and either not able to get luma in alpha, or not wanting to,\",\r\n    \"    // this enables FXAA to run using green as a proxy for luma.\",\r\n    \"    // So with this enabled, no need to pack luma in alpha.\",\r\n    \"    //\",\r\n    \"    // This will turn off AA on anything which lacks some amount of green.\",\r\n    \"    // Pure red and blue or combination of only R and B, will get no AA.\",\r\n    \"    //\",\r\n    \"    // Might want to lower the settings for both,\",\r\n    \"    //    fxaaConsoleEdgeThresholdMin\",\r\n    \"    //    fxaaQualityEdgeThresholdMin\",\r\n    \"    // In order to insure AA does not get turned off on colors\",\r\n    \"    // which contain a minor amount of green.\",\r\n    \"    //\",\r\n    \"    // 1 = On.\",\r\n    \"    // 0 = Off.\",\r\n    \"    //\",\r\n    \"    #define FXAA_GREEN_AS_LUMA 0\",\r\n    \"#endif\",\r\n    \"/*--------------------------------------------------------------------------*/\",\r\n    \"#ifndef FXAA_EARLY_EXIT\",\r\n    \"    //\",\r\n    \"    // Controls algorithm's early exit path.\",\r\n    \"    // On PS3 turning this ON adds 2 cycles to the shader.\",\r\n    \"    // On 360 turning this OFF adds 10ths of a millisecond to the shader.\",\r\n    \"    // Turning this off on console will result in a more blurry image.\",\r\n    \"    // So this defaults to on.\",\r\n    \"    //\",\r\n    \"    // 1 = On.\",\r\n    \"    // 0 = Off.\",\r\n    \"    //\",\r\n    \"    #define FXAA_EARLY_EXIT 1\",\r\n    \"#endif\",\r\n    \"/*--------------------------------------------------------------------------*/\",\r\n    \"#ifndef FXAA_DISCARD\",\r\n    \"    //\",\r\n    \"    // Only valid for PC OpenGL currently.\",\r\n    \"    // Probably will not work when FXAA_GREEN_AS_LUMA = 1.\",\r\n    \"    //\",\r\n    \"    // 1 = Use discard on pixels which don't need AA.\",\r\n    \"    //     For APIs which enable concurrent TEX+ROP from same surface.\",\r\n    \"    // 0 = Return unchanged color on pixels which don't need AA.\",\r\n    \"    //\",\r\n    \"    #define FXAA_DISCARD 0\",\r\n    \"#endif\",\r\n    \"/*--------------------------------------------------------------------------*/\",\r\n    \"#ifndef FXAA_FAST_PIXEL_OFFSET\",\r\n    \"    //\",\r\n    \"    // Used for GLSL 120 only.\",\r\n    \"    //\",\r\n    \"    // 1 = GL API supports fast pixel offsets\",\r\n    \"    // 0 = do not use fast pixel offsets\",\r\n    \"    //\",\r\n    \"    #ifdef GL_EXT_gpu_shader4\",\r\n    \"        #define FXAA_FAST_PIXEL_OFFSET 1\",\r\n    \"    #endif\",\r\n    \"    #ifdef GL_NV_gpu_shader5\",\r\n    \"        #define FXAA_FAST_PIXEL_OFFSET 1\",\r\n    \"    #endif\",\r\n    \"    #ifdef GL_ARB_gpu_shader5\",\r\n    \"        #define FXAA_FAST_PIXEL_OFFSET 1\",\r\n    \"    #endif\",\r\n    \"    #ifndef FXAA_FAST_PIXEL_OFFSET\",\r\n    \"        #define FXAA_FAST_PIXEL_OFFSET 0\",\r\n    \"    #endif\",\r\n    \"#endif\",\r\n    \"/*--------------------------------------------------------------------------*/\",\r\n    \"#ifndef FXAA_GATHER4_ALPHA\",\r\n    \"    //\",\r\n    \"    // 1 = API supports gather4 on alpha channel.\",\r\n    \"    // 0 = API does not support gather4 on alpha channel.\",\r\n    \"    //\",\r\n    \"    #if (FXAA_HLSL_5 == 1)\",\r\n    \"        #define FXAA_GATHER4_ALPHA 1\",\r\n    \"    #endif\",\r\n    \"    #ifdef GL_ARB_gpu_shader5\",\r\n    \"        #define FXAA_GATHER4_ALPHA 1\",\r\n    \"    #endif\",\r\n    \"    #ifdef GL_NV_gpu_shader5\",\r\n    \"        #define FXAA_GATHER4_ALPHA 1\",\r\n    \"    #endif\",\r\n    \"    #ifndef FXAA_GATHER4_ALPHA\",\r\n    \"        #define FXAA_GATHER4_ALPHA 0\",\r\n    \"    #endif\",\r\n    \"#endif\",\r\n    \"\",\r\n    \"\",\r\n    \"/*============================================================================\",\r\n    \"                        FXAA QUALITY - TUNING KNOBS\",\r\n    \"------------------------------------------------------------------------------\",\r\n    \"NOTE the other tuning knobs are now in the shader function inputs!\",\r\n    \"============================================================================*/\",\r\n    \"#ifndef FXAA_QUALITY_PRESET\",\r\n    \"    //\",\r\n    \"    // Choose the quality preset.\",\r\n    \"    // This needs to be compiled into the shader as it effects code.\",\r\n    \"    // Best option to include multiple presets is to\",\r\n    \"    // in each shader define the preset, then include this file.\",\r\n    \"    //\",\r\n    \"    // OPTIONS\",\r\n    \"    // -----------------------------------------------------------------------\",\r\n    \"    // 10 to 15 - default medium dither (10=fastest, 15=highest quality)\",\r\n    \"    // 20 to 29 - less dither, more expensive (20=fastest, 29=highest quality)\",\r\n    \"    // 39       - no dither, very expensive\",\r\n    \"    //\",\r\n    \"    // NOTES\",\r\n    \"    // -----------------------------------------------------------------------\",\r\n    \"    // 12 = slightly faster then FXAA 3.9 and higher edge quality (default)\",\r\n    \"    // 13 = about same speed as FXAA 3.9 and better than 12\",\r\n    \"    // 23 = closest to FXAA 3.9 visually and performance wise\",\r\n    \"    //  _ = the lowest digit is directly related to performance\",\r\n    \"    // _  = the highest digit is directly related to style\",\r\n    \"    //\",\r\n    \"    #define FXAA_QUALITY_PRESET 12\",\r\n    \"#endif\",\r\n    \"\",\r\n    \"\",\r\n    \"/*============================================================================\",\r\n    \"\",\r\n    \"                           FXAA QUALITY - PRESETS\",\r\n    \"\",\r\n    \"============================================================================*/\",\r\n    \"\",\r\n    \"/*============================================================================\",\r\n    \"                     FXAA QUALITY - MEDIUM DITHER PRESETS\",\r\n    \"============================================================================*/\",\r\n    \"#if (FXAA_QUALITY_PRESET == 10)\",\r\n    \"    #define FXAA_QUALITY_PS 3\",\r\n    \"    #define FXAA_QUALITY_P0 1.5\",\r\n    \"    #define FXAA_QUALITY_P1 3.0\",\r\n    \"    #define FXAA_QUALITY_P2 12.0\",\r\n    \"#endif\",\r\n    \"/*--------------------------------------------------------------------------*/\",\r\n    \"#if (FXAA_QUALITY_PRESET == 11)\",\r\n    \"    #define FXAA_QUALITY_PS 4\",\r\n    \"    #define FXAA_QUALITY_P0 1.0\",\r\n    \"    #define FXAA_QUALITY_P1 1.5\",\r\n    \"    #define FXAA_QUALITY_P2 3.0\",\r\n    \"    #define FXAA_QUALITY_P3 12.0\",\r\n    \"#endif\",\r\n    \"/*--------------------------------------------------------------------------*/\",\r\n    \"#if (FXAA_QUALITY_PRESET == 12)\",\r\n    \"    #define FXAA_QUALITY_PS 5\",\r\n    \"    #define FXAA_QUALITY_P0 1.0\",\r\n    \"    #define FXAA_QUALITY_P1 1.5\",\r\n    \"    #define FXAA_QUALITY_P2 2.0\",\r\n    \"    #define FXAA_QUALITY_P3 4.0\",\r\n    \"    #define FXAA_QUALITY_P4 12.0\",\r\n    \"#endif\",\r\n    \"/*--------------------------------------------------------------------------*/\",\r\n    \"#if (FXAA_QUALITY_PRESET == 13)\",\r\n    \"    #define FXAA_QUALITY_PS 6\",\r\n    \"    #define FXAA_QUALITY_P0 1.0\",\r\n    \"    #define FXAA_QUALITY_P1 1.5\",\r\n    \"    #define FXAA_QUALITY_P2 2.0\",\r\n    \"    #define FXAA_QUALITY_P3 2.0\",\r\n    \"    #define FXAA_QUALITY_P4 4.0\",\r\n    \"    #define FXAA_QUALITY_P5 12.0\",\r\n    \"#endif\",\r\n    \"/*--------------------------------------------------------------------------*/\",\r\n    \"#if (FXAA_QUALITY_PRESET == 14)\",\r\n    \"    #define FXAA_QUALITY_PS 7\",\r\n    \"    #define FXAA_QUALITY_P0 1.0\",\r\n    \"    #define FXAA_QUALITY_P1 1.5\",\r\n    \"    #define FXAA_QUALITY_P2 2.0\",\r\n    \"    #define FXAA_QUALITY_P3 2.0\",\r\n    \"    #define FXAA_QUALITY_P4 2.0\",\r\n    \"    #define FXAA_QUALITY_P5 4.0\",\r\n    \"    #define FXAA_QUALITY_P6 12.0\",\r\n    \"#endif\",\r\n    \"/*--------------------------------------------------------------------------*/\",\r\n    \"#if (FXAA_QUALITY_PRESET == 15)\",\r\n    \"    #define FXAA_QUALITY_PS 8\",\r\n    \"    #define FXAA_QUALITY_P0 1.0\",\r\n    \"    #define FXAA_QUALITY_P1 1.5\",\r\n    \"    #define FXAA_QUALITY_P2 2.0\",\r\n    \"    #define FXAA_QUALITY_P3 2.0\",\r\n    \"    #define FXAA_QUALITY_P4 2.0\",\r\n    \"    #define FXAA_QUALITY_P5 2.0\",\r\n    \"    #define FXAA_QUALITY_P6 4.0\",\r\n    \"    #define FXAA_QUALITY_P7 12.0\",\r\n    \"#endif\",\r\n    \"\",\r\n    \"/*============================================================================\",\r\n    \"                     FXAA QUALITY - LOW DITHER PRESETS\",\r\n    \"============================================================================*/\",\r\n    \"#if (FXAA_QUALITY_PRESET == 20)\",\r\n    \"    #define FXAA_QUALITY_PS 3\",\r\n    \"    #define FXAA_QUALITY_P0 1.5\",\r\n    \"    #define FXAA_QUALITY_P1 2.0\",\r\n    \"    #define FXAA_QUALITY_P2 8.0\",\r\n    \"#endif\",\r\n    \"/*--------------------------------------------------------------------------*/\",\r\n    \"#if (FXAA_QUALITY_PRESET == 21)\",\r\n    \"    #define FXAA_QUALITY_PS 4\",\r\n    \"    #define FXAA_QUALITY_P0 1.0\",\r\n    \"    #define FXAA_QUALITY_P1 1.5\",\r\n    \"    #define FXAA_QUALITY_P2 2.0\",\r\n    \"    #define FXAA_QUALITY_P3 8.0\",\r\n    \"#endif\",\r\n    \"/*--------------------------------------------------------------------------*/\",\r\n    \"#if (FXAA_QUALITY_PRESET == 22)\",\r\n    \"    #define FXAA_QUALITY_PS 5\",\r\n    \"    #define FXAA_QUALITY_P0 1.0\",\r\n    \"    #define FXAA_QUALITY_P1 1.5\",\r\n    \"    #define FXAA_QUALITY_P2 2.0\",\r\n    \"    #define FXAA_QUALITY_P3 2.0\",\r\n    \"    #define FXAA_QUALITY_P4 8.0\",\r\n    \"#endif\",\r\n    \"/*--------------------------------------------------------------------------*/\",\r\n    \"#if (FXAA_QUALITY_PRESET == 23)\",\r\n    \"    #define FXAA_QUALITY_PS 6\",\r\n    \"    #define FXAA_QUALITY_P0 1.0\",\r\n    \"    #define FXAA_QUALITY_P1 1.5\",\r\n    \"    #define FXAA_QUALITY_P2 2.0\",\r\n    \"    #define FXAA_QUALITY_P3 2.0\",\r\n    \"    #define FXAA_QUALITY_P4 2.0\",\r\n    \"    #define FXAA_QUALITY_P5 8.0\",\r\n    \"#endif\",\r\n    \"/*--------------------------------------------------------------------------*/\",\r\n    \"#if (FXAA_QUALITY_PRESET == 24)\",\r\n    \"    #define FXAA_QUALITY_PS 7\",\r\n    \"    #define FXAA_QUALITY_P0 1.0\",\r\n    \"    #define FXAA_QUALITY_P1 1.5\",\r\n    \"    #define FXAA_QUALITY_P2 2.0\",\r\n    \"    #define FXAA_QUALITY_P3 2.0\",\r\n    \"    #define FXAA_QUALITY_P4 2.0\",\r\n    \"    #define FXAA_QUALITY_P5 3.0\",\r\n    \"    #define FXAA_QUALITY_P6 8.0\",\r\n    \"#endif\",\r\n    \"/*--------------------------------------------------------------------------*/\",\r\n    \"#if (FXAA_QUALITY_PRESET == 25)\",\r\n    \"    #define FXAA_QUALITY_PS 8\",\r\n    \"    #define FXAA_QUALITY_P0 1.0\",\r\n    \"    #define FXAA_QUALITY_P1 1.5\",\r\n    \"    #define FXAA_QUALITY_P2 2.0\",\r\n    \"    #define FXAA_QUALITY_P3 2.0\",\r\n    \"    #define FXAA_QUALITY_P4 2.0\",\r\n    \"    #define FXAA_QUALITY_P5 2.0\",\r\n    \"    #define FXAA_QUALITY_P6 4.0\",\r\n    \"    #define FXAA_QUALITY_P7 8.0\",\r\n    \"#endif\",\r\n    \"/*--------------------------------------------------------------------------*/\",\r\n    \"#if (FXAA_QUALITY_PRESET == 26)\",\r\n    \"    #define FXAA_QUALITY_PS 9\",\r\n    \"    #define FXAA_QUALITY_P0 1.0\",\r\n    \"    #define FXAA_QUALITY_P1 1.5\",\r\n    \"    #define FXAA_QUALITY_P2 2.0\",\r\n    \"    #define FXAA_QUALITY_P3 2.0\",\r\n    \"    #define FXAA_QUALITY_P4 2.0\",\r\n    \"    #define FXAA_QUALITY_P5 2.0\",\r\n    \"    #define FXAA_QUALITY_P6 2.0\",\r\n    \"    #define FXAA_QUALITY_P7 4.0\",\r\n    \"    #define FXAA_QUALITY_P8 8.0\",\r\n    \"#endif\",\r\n    \"/*--------------------------------------------------------------------------*/\",\r\n    \"#if (FXAA_QUALITY_PRESET == 27)\",\r\n    \"    #define FXAA_QUALITY_PS 10\",\r\n    \"    #define FXAA_QUALITY_P0 1.0\",\r\n    \"    #define FXAA_QUALITY_P1 1.5\",\r\n    \"    #define FXAA_QUALITY_P2 2.0\",\r\n    \"    #define FXAA_QUALITY_P3 2.0\",\r\n    \"    #define FXAA_QUALITY_P4 2.0\",\r\n    \"    #define FXAA_QUALITY_P5 2.0\",\r\n    \"    #define FXAA_QUALITY_P6 2.0\",\r\n    \"    #define FXAA_QUALITY_P7 2.0\",\r\n    \"    #define FXAA_QUALITY_P8 4.0\",\r\n    \"    #define FXAA_QUALITY_P9 8.0\",\r\n    \"#endif\",\r\n    \"/*--------------------------------------------------------------------------*/\",\r\n    \"#if (FXAA_QUALITY_PRESET == 28)\",\r\n    \"    #define FXAA_QUALITY_PS 11\",\r\n    \"    #define FXAA_QUALITY_P0 1.0\",\r\n    \"    #define FXAA_QUALITY_P1 1.5\",\r\n    \"    #define FXAA_QUALITY_P2 2.0\",\r\n    \"    #define FXAA_QUALITY_P3 2.0\",\r\n    \"    #define FXAA_QUALITY_P4 2.0\",\r\n    \"    #define FXAA_QUALITY_P5 2.0\",\r\n    \"    #define FXAA_QUALITY_P6 2.0\",\r\n    \"    #define FXAA_QUALITY_P7 2.0\",\r\n    \"    #define FXAA_QUALITY_P8 2.0\",\r\n    \"    #define FXAA_QUALITY_P9 4.0\",\r\n    \"    #define FXAA_QUALITY_P10 8.0\",\r\n    \"#endif\",\r\n    \"/*--------------------------------------------------------------------------*/\",\r\n    \"#if (FXAA_QUALITY_PRESET == 29)\",\r\n    \"    #define FXAA_QUALITY_PS 12\",\r\n    \"    #define FXAA_QUALITY_P0 1.0\",\r\n    \"    #define FXAA_QUALITY_P1 1.5\",\r\n    \"    #define FXAA_QUALITY_P2 2.0\",\r\n    \"    #define FXAA_QUALITY_P3 2.0\",\r\n    \"    #define FXAA_QUALITY_P4 2.0\",\r\n    \"    #define FXAA_QUALITY_P5 2.0\",\r\n    \"    #define FXAA_QUALITY_P6 2.0\",\r\n    \"    #define FXAA_QUALITY_P7 2.0\",\r\n    \"    #define FXAA_QUALITY_P8 2.0\",\r\n    \"    #define FXAA_QUALITY_P9 2.0\",\r\n    \"    #define FXAA_QUALITY_P10 4.0\",\r\n    \"    #define FXAA_QUALITY_P11 8.0\",\r\n    \"#endif\",\r\n    \"\",\r\n    \"/*============================================================================\",\r\n    \"                     FXAA QUALITY - EXTREME QUALITY\",\r\n    \"============================================================================*/\",\r\n    \"#if (FXAA_QUALITY_PRESET == 39)\",\r\n    \"    #define FXAA_QUALITY_PS 12\",\r\n    \"    #define FXAA_QUALITY_P0 1.0\",\r\n    \"    #define FXAA_QUALITY_P1 1.0\",\r\n    \"    #define FXAA_QUALITY_P2 1.0\",\r\n    \"    #define FXAA_QUALITY_P3 1.0\",\r\n    \"    #define FXAA_QUALITY_P4 1.0\",\r\n    \"    #define FXAA_QUALITY_P5 1.5\",\r\n    \"    #define FXAA_QUALITY_P6 2.0\",\r\n    \"    #define FXAA_QUALITY_P7 2.0\",\r\n    \"    #define FXAA_QUALITY_P8 2.0\",\r\n    \"    #define FXAA_QUALITY_P9 2.0\",\r\n    \"    #define FXAA_QUALITY_P10 4.0\",\r\n    \"    #define FXAA_QUALITY_P11 8.0\",\r\n    \"#endif\",\r\n    \"\",\r\n    \"\",\r\n    \"\",\r\n    \"/*============================================================================\",\r\n    \"\",\r\n    \"                                API PORTING\",\r\n    \"\",\r\n    \"============================================================================*/\",\r\n    \"#if (FXAA_GLSL_100 == 1) || (FXAA_GLSL_120 == 1) || (FXAA_GLSL_130 == 1)\",\r\n    \"    #define FxaaBool bool\",\r\n    \"    #define FxaaDiscard discard\",\r\n    \"    #define FxaaFloat float\",\r\n    \"    #define FxaaFloat2 vec2\",\r\n    \"    #define FxaaFloat3 vec3\",\r\n    \"    #define FxaaFloat4 vec4\",\r\n    \"    #define FxaaHalf float\",\r\n    \"    #define FxaaHalf2 vec2\",\r\n    \"    #define FxaaHalf3 vec3\",\r\n    \"    #define FxaaHalf4 vec4\",\r\n    \"    #define FxaaInt2 ivec2\",\r\n    \"    #define FxaaSat(x) clamp(x, 0.0, 1.0)\",\r\n    \"    #define FxaaTex sampler2D\",\r\n    \"#else\",\r\n    \"    #define FxaaBool bool\",\r\n    \"    #define FxaaDiscard clip(-1)\",\r\n    \"    #define FxaaFloat float\",\r\n    \"    #define FxaaFloat2 float2\",\r\n    \"    #define FxaaFloat3 float3\",\r\n    \"    #define FxaaFloat4 float4\",\r\n    \"    #define FxaaHalf half\",\r\n    \"    #define FxaaHalf2 half2\",\r\n    \"    #define FxaaHalf3 half3\",\r\n    \"    #define FxaaHalf4 half4\",\r\n    \"    #define FxaaSat(x) saturate(x)\",\r\n    \"#endif\",\r\n    \"/*--------------------------------------------------------------------------*/\",\r\n    \"#if (FXAA_GLSL_100 == 1)\",\r\n    \"  #define FxaaTexTop(t, p) texture2D(t, p, 0.0)\",\r\n    \"  #define FxaaTexOff(t, p, o, r) texture2D(t, p + (o * r), 0.0)\",\r\n    \"#endif\",\r\n    \"/*--------------------------------------------------------------------------*/\",\r\n    \"#if (FXAA_GLSL_120 == 1)\",\r\n    \"    // Requires,\",\r\n    \"    //  #version 120\",\r\n    \"    // And at least,\",\r\n    \"    //  #extension GL_EXT_gpu_shader4 : enable\",\r\n    \"    //  (or set FXAA_FAST_PIXEL_OFFSET 1 to work like DX9)\",\r\n    \"    #define FxaaTexTop(t, p) texture2DLod(t, p, 0.0)\",\r\n    \"    #if (FXAA_FAST_PIXEL_OFFSET == 1)\",\r\n    \"        #define FxaaTexOff(t, p, o, r) texture2DLodOffset(t, p, 0.0, o)\",\r\n    \"    #else\",\r\n    \"        #define FxaaTexOff(t, p, o, r) texture2DLod(t, p + (o * r), 0.0)\",\r\n    \"    #endif\",\r\n    \"    #if (FXAA_GATHER4_ALPHA == 1)\",\r\n    \"        // use #extension GL_ARB_gpu_shader5 : enable\",\r\n    \"        #define FxaaTexAlpha4(t, p) textureGather(t, p, 3)\",\r\n    \"        #define FxaaTexOffAlpha4(t, p, o) textureGatherOffset(t, p, o, 3)\",\r\n    \"        #define FxaaTexGreen4(t, p) textureGather(t, p, 1)\",\r\n    \"        #define FxaaTexOffGreen4(t, p, o) textureGatherOffset(t, p, o, 1)\",\r\n    \"    #endif\",\r\n    \"#endif\",\r\n    \"/*--------------------------------------------------------------------------*/\",\r\n    \"#if (FXAA_GLSL_130 == 1)\",\r\n    \"    // Requires \\\"#version 130\\\" or better\",\r\n    \"    #define FxaaTexTop(t, p) textureLod(t, p, 0.0)\",\r\n    \"    #define FxaaTexOff(t, p, o, r) textureLodOffset(t, p, 0.0, o)\",\r\n    \"    #if (FXAA_GATHER4_ALPHA == 1)\",\r\n    \"        // use #extension GL_ARB_gpu_shader5 : enable\",\r\n    \"        #define FxaaTexAlpha4(t, p) textureGather(t, p, 3)\",\r\n    \"        #define FxaaTexOffAlpha4(t, p, o) textureGatherOffset(t, p, o, 3)\",\r\n    \"        #define FxaaTexGreen4(t, p) textureGather(t, p, 1)\",\r\n    \"        #define FxaaTexOffGreen4(t, p, o) textureGatherOffset(t, p, o, 1)\",\r\n    \"    #endif\",\r\n    \"#endif\",\r\n    \"/*--------------------------------------------------------------------------*/\",\r\n    \"#if (FXAA_HLSL_3 == 1)\",\r\n    \"    #define FxaaInt2 float2\",\r\n    \"    #define FxaaTex sampler2D\",\r\n    \"    #define FxaaTexTop(t, p) tex2Dlod(t, float4(p, 0.0, 0.0))\",\r\n    \"    #define FxaaTexOff(t, p, o, r) tex2Dlod(t, float4(p + (o * r), 0, 0))\",\r\n    \"#endif\",\r\n    \"/*--------------------------------------------------------------------------*/\",\r\n    \"#if (FXAA_HLSL_4 == 1)\",\r\n    \"    #define FxaaInt2 int2\",\r\n    \"    struct FxaaTex { SamplerState smpl; Texture2D tex; };\",\r\n    \"    #define FxaaTexTop(t, p) t.tex.SampleLevel(t.smpl, p, 0.0)\",\r\n    \"    #define FxaaTexOff(t, p, o, r) t.tex.SampleLevel(t.smpl, p, 0.0, o)\",\r\n    \"#endif\",\r\n    \"/*--------------------------------------------------------------------------*/\",\r\n    \"#if (FXAA_HLSL_5 == 1)\",\r\n    \"    #define FxaaInt2 int2\",\r\n    \"    struct FxaaTex { SamplerState smpl; Texture2D tex; };\",\r\n    \"    #define FxaaTexTop(t, p) t.tex.SampleLevel(t.smpl, p, 0.0)\",\r\n    \"    #define FxaaTexOff(t, p, o, r) t.tex.SampleLevel(t.smpl, p, 0.0, o)\",\r\n    \"    #define FxaaTexAlpha4(t, p) t.tex.GatherAlpha(t.smpl, p)\",\r\n    \"    #define FxaaTexOffAlpha4(t, p, o) t.tex.GatherAlpha(t.smpl, p, o)\",\r\n    \"    #define FxaaTexGreen4(t, p) t.tex.GatherGreen(t.smpl, p)\",\r\n    \"    #define FxaaTexOffGreen4(t, p, o) t.tex.GatherGreen(t.smpl, p, o)\",\r\n    \"#endif\",\r\n    \"\",\r\n    \"\",\r\n    \"/*============================================================================\",\r\n    \"                   GREEN AS LUMA OPTION SUPPORT FUNCTION\",\r\n    \"============================================================================*/\",\r\n    \"#if (FXAA_GREEN_AS_LUMA == 0)\",\r\n    \"    FxaaFloat FxaaLuma(FxaaFloat4 rgba) { return rgba.w; }\",\r\n    \"#else\",\r\n    \"    FxaaFloat FxaaLuma(FxaaFloat4 rgba) { return rgba.y; }\",\r\n    \"#endif\",\r\n    \"\",\r\n    \"\",\r\n    \"\",\r\n    \"\",\r\n    \"/*============================================================================\",\r\n    \"\",\r\n    \"                             FXAA3 QUALITY - PC\",\r\n    \"\",\r\n    \"============================================================================*/\",\r\n    \"#if (FXAA_PC == 1)\",\r\n    \"/*--------------------------------------------------------------------------*/\",\r\n    \"FxaaFloat4 FxaaPixelShader(\",\r\n    \"    //\",\r\n    \"    // Use noperspective interpolation here (turn off perspective interpolation).\",\r\n    \"    // {xy} = center of pixel\",\r\n    \"    FxaaFloat2 pos,\",\r\n    \"    //\",\r\n    \"    // Used only for FXAA Console, and not used on the 360 version.\",\r\n    \"    // Use noperspective interpolation here (turn off perspective interpolation).\",\r\n    \"    // {xy_} = upper left of pixel\",\r\n    \"    // {_zw} = lower right of pixel\",\r\n    \"    FxaaFloat4 fxaaConsolePosPos,\",\r\n    \"    //\",\r\n    \"    // Input color texture.\",\r\n    \"    // {rgb_} = color in linear or perceptual color space\",\r\n    \"    // if (FXAA_GREEN_AS_LUMA == 0)\",\r\n    \"    //     {__a} = luma in perceptual color space (not linear)\",\r\n    \"    FxaaTex tex,\",\r\n    \"    //\",\r\n    \"    // Only used on the optimized 360 version of FXAA Console.\",\r\n    \"    // For everything but 360, just use the same input here as for \\\"tex\\\".\",\r\n    \"    // For 360, same texture, just alias with a 2nd sampler.\",\r\n    \"    // This sampler needs to have an exponent bias of -1.\",\r\n    \"    FxaaTex fxaaConsole360TexExpBiasNegOne,\",\r\n    \"    //\",\r\n    \"    // Only used on the optimized 360 version of FXAA Console.\",\r\n    \"    // For everything but 360, just use the same input here as for \\\"tex\\\".\",\r\n    \"    // For 360, same texture, just alias with a 3nd sampler.\",\r\n    \"    // This sampler needs to have an exponent bias of -2.\",\r\n    \"    FxaaTex fxaaConsole360TexExpBiasNegTwo,\",\r\n    \"    //\",\r\n    \"    // Only used on FXAA Quality.\",\r\n    \"    // This must be from a constant/uniform.\",\r\n    \"    // {x_} = 1.0/screenWidthInPixels\",\r\n    \"    // {_y} = 1.0/screenHeightInPixels\",\r\n    \"    FxaaFloat2 fxaaQualityRcpFrame,\",\r\n    \"    //\",\r\n    \"    // Only used on FXAA Console.\",\r\n    \"    // This must be from a constant/uniform.\",\r\n    \"    // This effects sub-pixel AA quality and inversely sharpness.\",\r\n    \"    //   Where N ranges between,\",\r\n    \"    //     N = 0.50 (default)\",\r\n    \"    //     N = 0.33 (sharper)\",\r\n    \"    // {x__} = -N/screenWidthInPixels\",\r\n    \"    // {_y_} = -N/screenHeightInPixels\",\r\n    \"    // {_z_} =  N/screenWidthInPixels\",\r\n    \"    // {__w} =  N/screenHeightInPixels\",\r\n    \"    FxaaFloat4 fxaaConsoleRcpFrameOpt,\",\r\n    \"    //\",\r\n    \"    // Only used on FXAA Console.\",\r\n    \"    // Not used on 360, but used on PS3 and PC.\",\r\n    \"    // This must be from a constant/uniform.\",\r\n    \"    // {x__} = -2.0/screenWidthInPixels\",\r\n    \"    // {_y_} = -2.0/screenHeightInPixels\",\r\n    \"    // {_z_} =  2.0/screenWidthInPixels\",\r\n    \"    // {__w} =  2.0/screenHeightInPixels\",\r\n    \"    FxaaFloat4 fxaaConsoleRcpFrameOpt2,\",\r\n    \"    //\",\r\n    \"    // Only used on FXAA Console.\",\r\n    \"    // Only used on 360 in place of fxaaConsoleRcpFrameOpt2.\",\r\n    \"    // This must be from a constant/uniform.\",\r\n    \"    // {x__} =  8.0/screenWidthInPixels\",\r\n    \"    // {_y_} =  8.0/screenHeightInPixels\",\r\n    \"    // {_z_} = -4.0/screenWidthInPixels\",\r\n    \"    // {__w} = -4.0/screenHeightInPixels\",\r\n    \"    FxaaFloat4 fxaaConsole360RcpFrameOpt2,\",\r\n    \"    //\",\r\n    \"    // Only used on FXAA Quality.\",\r\n    \"    // This used to be the FXAA_QUALITY_SUBPIX define.\",\r\n    \"    // It is here now to allow easier tuning.\",\r\n    \"    // Choose the amount of sub-pixel aliasing removal.\",\r\n    \"    // This can effect sharpness.\",\r\n    \"    //   1.00 - upper limit (softer)\",\r\n    \"    //   0.75 - default amount of filtering\",\r\n    \"    //   0.50 - lower limit (sharper, less sub-pixel aliasing removal)\",\r\n    \"    //   0.25 - almost off\",\r\n    \"    //   0.00 - completely off\",\r\n    \"    FxaaFloat fxaaQualitySubpix,\",\r\n    \"    //\",\r\n    \"    // Only used on FXAA Quality.\",\r\n    \"    // This used to be the FXAA_QUALITY_EDGE_THRESHOLD define.\",\r\n    \"    // It is here now to allow easier tuning.\",\r\n    \"    // The minimum amount of local contrast required to apply algorithm.\",\r\n    \"    //   0.333 - too little (faster)\",\r\n    \"    //   0.250 - low quality\",\r\n    \"    //   0.166 - default\",\r\n    \"    //   0.125 - high quality\",\r\n    \"    //   0.063 - overkill (slower)\",\r\n    \"    FxaaFloat fxaaQualityEdgeThreshold,\",\r\n    \"    //\",\r\n    \"    // Only used on FXAA Quality.\",\r\n    \"    // This used to be the FXAA_QUALITY_EDGE_THRESHOLD_MIN define.\",\r\n    \"    // It is here now to allow easier tuning.\",\r\n    \"    // Trims the algorithm from processing darks.\",\r\n    \"    //   0.0833 - upper limit (default, the start of visible unfiltered edges)\",\r\n    \"    //   0.0625 - high quality (faster)\",\r\n    \"    //   0.0312 - visible limit (slower)\",\r\n    \"    // Special notes when using FXAA_GREEN_AS_LUMA,\",\r\n    \"    //   Likely want to set this to zero.\",\r\n    \"    //   As colors that are mostly not-green\",\r\n    \"    //   will appear very dark in the green channel!\",\r\n    \"    //   Tune by looking at mostly non-green content,\",\r\n    \"    //   then start at zero and increase until aliasing is a problem.\",\r\n    \"    FxaaFloat fxaaQualityEdgeThresholdMin,\",\r\n    \"    //\",\r\n    \"    // Only used on FXAA Console.\",\r\n    \"    // This used to be the FXAA_CONSOLE_EDGE_SHARPNESS define.\",\r\n    \"    // It is here now to allow easier tuning.\",\r\n    \"    // This does not effect PS3, as this needs to be compiled in.\",\r\n    \"    //   Use FXAA_CONSOLE_PS3_EDGE_SHARPNESS for PS3.\",\r\n    \"    //   Due to the PS3 being ALU bound,\",\r\n    \"    //   there are only three safe values here: 2 and 4 and 8.\",\r\n    \"    //   These options use the shaders ability to a free *|/ by 2|4|8.\",\r\n    \"    // For all other platforms can be a non-power of two.\",\r\n    \"    //   8.0 is sharper (default!!!)\",\r\n    \"    //   4.0 is softer\",\r\n    \"    //   2.0 is really soft (good only for vector graphics inputs)\",\r\n    \"    FxaaFloat fxaaConsoleEdgeSharpness,\",\r\n    \"    //\",\r\n    \"    // Only used on FXAA Console.\",\r\n    \"    // This used to be the FXAA_CONSOLE_EDGE_THRESHOLD define.\",\r\n    \"    // It is here now to allow easier tuning.\",\r\n    \"    // This does not effect PS3, as this needs to be compiled in.\",\r\n    \"    //   Use FXAA_CONSOLE_PS3_EDGE_THRESHOLD for PS3.\",\r\n    \"    //   Due to the PS3 being ALU bound,\",\r\n    \"    //   there are only two safe values here: 1/4 and 1/8.\",\r\n    \"    //   These options use the shaders ability to a free *|/ by 2|4|8.\",\r\n    \"    // The console setting has a different mapping than the quality setting.\",\r\n    \"    // Other platforms can use other values.\",\r\n    \"    //   0.125 leaves less aliasing, but is softer (default!!!)\",\r\n    \"    //   0.25 leaves more aliasing, and is sharper\",\r\n    \"    FxaaFloat fxaaConsoleEdgeThreshold,\",\r\n    \"    //\",\r\n    \"    // Only used on FXAA Console.\",\r\n    \"    // This used to be the FXAA_CONSOLE_EDGE_THRESHOLD_MIN define.\",\r\n    \"    // It is here now to allow easier tuning.\",\r\n    \"    // Trims the algorithm from processing darks.\",\r\n    \"    // The console setting has a different mapping than the quality setting.\",\r\n    \"    // This only applies when FXAA_EARLY_EXIT is 1.\",\r\n    \"    // This does not apply to PS3,\",\r\n    \"    // PS3 was simplified to avoid more shader instructions.\",\r\n    \"    //   0.06 - faster but more aliasing in darks\",\r\n    \"    //   0.05 - default\",\r\n    \"    //   0.04 - slower and less aliasing in darks\",\r\n    \"    // Special notes when using FXAA_GREEN_AS_LUMA,\",\r\n    \"    //   Likely want to set this to zero.\",\r\n    \"    //   As colors that are mostly not-green\",\r\n    \"    //   will appear very dark in the green channel!\",\r\n    \"    //   Tune by looking at mostly non-green content,\",\r\n    \"    //   then start at zero and increase until aliasing is a problem.\",\r\n    \"    FxaaFloat fxaaConsoleEdgeThresholdMin,\",\r\n    \"    //\",\r\n    \"    // Extra constants for 360 FXAA Console only.\",\r\n    \"    // Use zeros or anything else for other platforms.\",\r\n    \"    // These must be in physical constant registers and NOT immedates.\",\r\n    \"    // Immedates will result in compiler un-optimizing.\",\r\n    \"    // {xyzw} = float4(1.0, -1.0, 0.25, -0.25)\",\r\n    \"    FxaaFloat4 fxaaConsole360ConstDir\",\r\n    \") {\",\r\n    \"/*--------------------------------------------------------------------------*/\",\r\n    \"    FxaaFloat2 posM;\",\r\n    \"    posM.x = pos.x;\",\r\n    \"    posM.y = pos.y;\",\r\n    \"    #if (FXAA_GATHER4_ALPHA == 1)\",\r\n    \"        #if (FXAA_DISCARD == 0)\",\r\n    \"            FxaaFloat4 rgbyM = FxaaTexTop(tex, posM);\",\r\n    \"            #if (FXAA_GREEN_AS_LUMA == 0)\",\r\n    \"                #define lumaM rgbyM.w\",\r\n    \"            #else\",\r\n    \"                #define lumaM rgbyM.y\",\r\n    \"            #endif\",\r\n    \"        #endif\",\r\n    \"        #if (FXAA_GREEN_AS_LUMA == 0)\",\r\n    \"            FxaaFloat4 luma4A = FxaaTexAlpha4(tex, posM);\",\r\n    \"            FxaaFloat4 luma4B = FxaaTexOffAlpha4(tex, posM, FxaaInt2(-1, -1));\",\r\n    \"        #else\",\r\n    \"            FxaaFloat4 luma4A = FxaaTexGreen4(tex, posM);\",\r\n    \"            FxaaFloat4 luma4B = FxaaTexOffGreen4(tex, posM, FxaaInt2(-1, -1));\",\r\n    \"        #endif\",\r\n    \"        #if (FXAA_DISCARD == 1)\",\r\n    \"            #define lumaM luma4A.w\",\r\n    \"        #endif\",\r\n    \"        #define lumaE luma4A.z\",\r\n    \"        #define lumaS luma4A.x\",\r\n    \"        #define lumaSE luma4A.y\",\r\n    \"        #define lumaNW luma4B.w\",\r\n    \"        #define lumaN luma4B.z\",\r\n    \"        #define lumaW luma4B.x\",\r\n    \"    #else\",\r\n    \"        FxaaFloat4 rgbyM = FxaaTexTop(tex, posM);\",\r\n    \"        #if (FXAA_GREEN_AS_LUMA == 0)\",\r\n    \"            #define lumaM rgbyM.w\",\r\n    \"        #else\",\r\n    \"            #define lumaM rgbyM.y\",\r\n    \"        #endif\",\r\n    \"        #if (FXAA_GLSL_100 == 1)\",\r\n    \"          FxaaFloat lumaS = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 0.0, 1.0), fxaaQualityRcpFrame.xy));\",\r\n    \"          FxaaFloat lumaE = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 1.0, 0.0), fxaaQualityRcpFrame.xy));\",\r\n    \"          FxaaFloat lumaN = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 0.0,-1.0), fxaaQualityRcpFrame.xy));\",\r\n    \"          FxaaFloat lumaW = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2(-1.0, 0.0), fxaaQualityRcpFrame.xy));\",\r\n    \"        #else\",\r\n    \"          FxaaFloat lumaS = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 0, 1), fxaaQualityRcpFrame.xy));\",\r\n    \"          FxaaFloat lumaE = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 1, 0), fxaaQualityRcpFrame.xy));\",\r\n    \"          FxaaFloat lumaN = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 0,-1), fxaaQualityRcpFrame.xy));\",\r\n    \"          FxaaFloat lumaW = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(-1, 0), fxaaQualityRcpFrame.xy));\",\r\n    \"        #endif\",\r\n    \"    #endif\",\r\n    \"/*--------------------------------------------------------------------------*/\",\r\n    \"    FxaaFloat maxSM = max(lumaS, lumaM);\",\r\n    \"    FxaaFloat minSM = min(lumaS, lumaM);\",\r\n    \"    FxaaFloat maxESM = max(lumaE, maxSM);\",\r\n    \"    FxaaFloat minESM = min(lumaE, minSM);\",\r\n    \"    FxaaFloat maxWN = max(lumaN, lumaW);\",\r\n    \"    FxaaFloat minWN = min(lumaN, lumaW);\",\r\n    \"    FxaaFloat rangeMax = max(maxWN, maxESM);\",\r\n    \"    FxaaFloat rangeMin = min(minWN, minESM);\",\r\n    \"    FxaaFloat rangeMaxScaled = rangeMax * fxaaQualityEdgeThreshold;\",\r\n    \"    FxaaFloat range = rangeMax - rangeMin;\",\r\n    \"    FxaaFloat rangeMaxClamped = max(fxaaQualityEdgeThresholdMin, rangeMaxScaled);\",\r\n    \"    FxaaBool earlyExit = range < rangeMaxClamped;\",\r\n    \"/*--------------------------------------------------------------------------*/\",\r\n    \"    if(earlyExit)\",\r\n    \"        #if (FXAA_DISCARD == 1)\",\r\n    \"            FxaaDiscard;\",\r\n    \"        #else\",\r\n    \"            return rgbyM;\",\r\n    \"        #endif\",\r\n    \"/*--------------------------------------------------------------------------*/\",\r\n    \"    #if (FXAA_GATHER4_ALPHA == 0)\",\r\n    \"        #if (FXAA_GLSL_100 == 1)\",\r\n    \"          FxaaFloat lumaNW = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2(-1.0,-1.0), fxaaQualityRcpFrame.xy));\",\r\n    \"          FxaaFloat lumaSE = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 1.0, 1.0), fxaaQualityRcpFrame.xy));\",\r\n    \"          FxaaFloat lumaNE = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 1.0,-1.0), fxaaQualityRcpFrame.xy));\",\r\n    \"          FxaaFloat lumaSW = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2(-1.0, 1.0), fxaaQualityRcpFrame.xy));\",\r\n    \"        #else\",\r\n    \"          FxaaFloat lumaNW = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(-1,-1), fxaaQualityRcpFrame.xy));\",\r\n    \"          FxaaFloat lumaSE = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 1, 1), fxaaQualityRcpFrame.xy));\",\r\n    \"          FxaaFloat lumaNE = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 1,-1), fxaaQualityRcpFrame.xy));\",\r\n    \"          FxaaFloat lumaSW = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(-1, 1), fxaaQualityRcpFrame.xy));\",\r\n    \"        #endif\",\r\n    \"    #else\",\r\n    \"        FxaaFloat lumaNE = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(1, -1), fxaaQualityRcpFrame.xy));\",\r\n    \"        FxaaFloat lumaSW = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(-1, 1), fxaaQualityRcpFrame.xy));\",\r\n    \"    #endif\",\r\n    \"/*--------------------------------------------------------------------------*/\",\r\n    \"    FxaaFloat lumaNS = lumaN + lumaS;\",\r\n    \"    FxaaFloat lumaWE = lumaW + lumaE;\",\r\n    \"    FxaaFloat subpixRcpRange = 1.0/range;\",\r\n    \"    FxaaFloat subpixNSWE = lumaNS + lumaWE;\",\r\n    \"    FxaaFloat edgeHorz1 = (-2.0 * lumaM) + lumaNS;\",\r\n    \"    FxaaFloat edgeVert1 = (-2.0 * lumaM) + lumaWE;\",\r\n    \"/*--------------------------------------------------------------------------*/\",\r\n    \"    FxaaFloat lumaNESE = lumaNE + lumaSE;\",\r\n    \"    FxaaFloat lumaNWNE = lumaNW + lumaNE;\",\r\n    \"    FxaaFloat edgeHorz2 = (-2.0 * lumaE) + lumaNESE;\",\r\n    \"    FxaaFloat edgeVert2 = (-2.0 * lumaN) + lumaNWNE;\",\r\n    \"/*--------------------------------------------------------------------------*/\",\r\n    \"    FxaaFloat lumaNWSW = lumaNW + lumaSW;\",\r\n    \"    FxaaFloat lumaSWSE = lumaSW + lumaSE;\",\r\n    \"    FxaaFloat edgeHorz4 = (abs(edgeHorz1) * 2.0) + abs(edgeHorz2);\",\r\n    \"    FxaaFloat edgeVert4 = (abs(edgeVert1) * 2.0) + abs(edgeVert2);\",\r\n    \"    FxaaFloat edgeHorz3 = (-2.0 * lumaW) + lumaNWSW;\",\r\n    \"    FxaaFloat edgeVert3 = (-2.0 * lumaS) + lumaSWSE;\",\r\n    \"    FxaaFloat edgeHorz = abs(edgeHorz3) + edgeHorz4;\",\r\n    \"    FxaaFloat edgeVert = abs(edgeVert3) + edgeVert4;\",\r\n    \"/*--------------------------------------------------------------------------*/\",\r\n    \"    FxaaFloat subpixNWSWNESE = lumaNWSW + lumaNESE;\",\r\n    \"    FxaaFloat lengthSign = fxaaQualityRcpFrame.x;\",\r\n    \"    FxaaBool horzSpan = edgeHorz >= edgeVert;\",\r\n    \"    FxaaFloat subpixA = subpixNSWE * 2.0 + subpixNWSWNESE;\",\r\n    \"/*--------------------------------------------------------------------------*/\",\r\n    \"    if(!horzSpan) lumaN = lumaW;\",\r\n    \"    if(!horzSpan) lumaS = lumaE;\",\r\n    \"    if(horzSpan) lengthSign = fxaaQualityRcpFrame.y;\",\r\n    \"    FxaaFloat subpixB = (subpixA * (1.0/12.0)) - lumaM;\",\r\n    \"/*--------------------------------------------------------------------------*/\",\r\n    \"    FxaaFloat gradientN = lumaN - lumaM;\",\r\n    \"    FxaaFloat gradientS = lumaS - lumaM;\",\r\n    \"    FxaaFloat lumaNN = lumaN + lumaM;\",\r\n    \"    FxaaFloat lumaSS = lumaS + lumaM;\",\r\n    \"    FxaaBool pairN = abs(gradientN) >= abs(gradientS);\",\r\n    \"    FxaaFloat gradient = max(abs(gradientN), abs(gradientS));\",\r\n    \"    if(pairN) lengthSign = -lengthSign;\",\r\n    \"    FxaaFloat subpixC = FxaaSat(abs(subpixB) * subpixRcpRange);\",\r\n    \"/*--------------------------------------------------------------------------*/\",\r\n    \"    FxaaFloat2 posB;\",\r\n    \"    posB.x = posM.x;\",\r\n    \"    posB.y = posM.y;\",\r\n    \"    FxaaFloat2 offNP;\",\r\n    \"    offNP.x = (!horzSpan) ? 0.0 : fxaaQualityRcpFrame.x;\",\r\n    \"    offNP.y = ( horzSpan) ? 0.0 : fxaaQualityRcpFrame.y;\",\r\n    \"    if(!horzSpan) posB.x += lengthSign * 0.5;\",\r\n    \"    if( horzSpan) posB.y += lengthSign * 0.5;\",\r\n    \"/*--------------------------------------------------------------------------*/\",\r\n    \"    FxaaFloat2 posN;\",\r\n    \"    posN.x = posB.x - offNP.x * FXAA_QUALITY_P0;\",\r\n    \"    posN.y = posB.y - offNP.y * FXAA_QUALITY_P0;\",\r\n    \"    FxaaFloat2 posP;\",\r\n    \"    posP.x = posB.x + offNP.x * FXAA_QUALITY_P0;\",\r\n    \"    posP.y = posB.y + offNP.y * FXAA_QUALITY_P0;\",\r\n    \"    FxaaFloat subpixD = ((-2.0)*subpixC) + 3.0;\",\r\n    \"    FxaaFloat lumaEndN = FxaaLuma(FxaaTexTop(tex, posN));\",\r\n    \"    FxaaFloat subpixE = subpixC * subpixC;\",\r\n    \"    FxaaFloat lumaEndP = FxaaLuma(FxaaTexTop(tex, posP));\",\r\n    \"/*--------------------------------------------------------------------------*/\",\r\n    \"    if(!pairN) lumaNN = lumaSS;\",\r\n    \"    FxaaFloat gradientScaled = gradient * 1.0/4.0;\",\r\n    \"    FxaaFloat lumaMM = lumaM - lumaNN * 0.5;\",\r\n    \"    FxaaFloat subpixF = subpixD * subpixE;\",\r\n    \"    FxaaBool lumaMLTZero = lumaMM < 0.0;\",\r\n    \"/*--------------------------------------------------------------------------*/\",\r\n    \"    lumaEndN -= lumaNN * 0.5;\",\r\n    \"    lumaEndP -= lumaNN * 0.5;\",\r\n    \"    FxaaBool doneN = abs(lumaEndN) >= gradientScaled;\",\r\n    \"    FxaaBool doneP = abs(lumaEndP) >= gradientScaled;\",\r\n    \"    if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P1;\",\r\n    \"    if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P1;\",\r\n    \"    FxaaBool doneNP = (!doneN) || (!doneP);\",\r\n    \"    if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P1;\",\r\n    \"    if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P1;\",\r\n    \"/*--------------------------------------------------------------------------*/\",\r\n    \"    if(doneNP) {\",\r\n    \"        if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\r\n    \"        if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\r\n    \"        if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\r\n    \"        if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\r\n    \"        doneN = abs(lumaEndN) >= gradientScaled;\",\r\n    \"        doneP = abs(lumaEndP) >= gradientScaled;\",\r\n    \"        if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P2;\",\r\n    \"        if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P2;\",\r\n    \"        doneNP = (!doneN) || (!doneP);\",\r\n    \"        if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P2;\",\r\n    \"        if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P2;\",\r\n    \"/*--------------------------------------------------------------------------*/\",\r\n    \"        #if (FXAA_QUALITY_PS > 3)\",\r\n    \"        if(doneNP) {\",\r\n    \"            if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\r\n    \"            if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\r\n    \"            if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\r\n    \"            if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\r\n    \"            doneN = abs(lumaEndN) >= gradientScaled;\",\r\n    \"            doneP = abs(lumaEndP) >= gradientScaled;\",\r\n    \"            if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P3;\",\r\n    \"            if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P3;\",\r\n    \"            doneNP = (!doneN) || (!doneP);\",\r\n    \"            if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P3;\",\r\n    \"            if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P3;\",\r\n    \"/*--------------------------------------------------------------------------*/\",\r\n    \"            #if (FXAA_QUALITY_PS > 4)\",\r\n    \"            if(doneNP) {\",\r\n    \"                if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\r\n    \"                if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\r\n    \"                if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\r\n    \"                if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\r\n    \"                doneN = abs(lumaEndN) >= gradientScaled;\",\r\n    \"                doneP = abs(lumaEndP) >= gradientScaled;\",\r\n    \"                if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P4;\",\r\n    \"                if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P4;\",\r\n    \"                doneNP = (!doneN) || (!doneP);\",\r\n    \"                if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P4;\",\r\n    \"                if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P4;\",\r\n    \"/*--------------------------------------------------------------------------*/\",\r\n    \"                #if (FXAA_QUALITY_PS > 5)\",\r\n    \"                if(doneNP) {\",\r\n    \"                    if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\r\n    \"                    if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\r\n    \"                    if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\r\n    \"                    if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\r\n    \"                    doneN = abs(lumaEndN) >= gradientScaled;\",\r\n    \"                    doneP = abs(lumaEndP) >= gradientScaled;\",\r\n    \"                    if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P5;\",\r\n    \"                    if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P5;\",\r\n    \"                    doneNP = (!doneN) || (!doneP);\",\r\n    \"                    if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P5;\",\r\n    \"                    if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P5;\",\r\n    \"/*--------------------------------------------------------------------------*/\",\r\n    \"                    #if (FXAA_QUALITY_PS > 6)\",\r\n    \"                    if(doneNP) {\",\r\n    \"                        if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\r\n    \"                        if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\r\n    \"                        if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\r\n    \"                        if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\r\n    \"                        doneN = abs(lumaEndN) >= gradientScaled;\",\r\n    \"                        doneP = abs(lumaEndP) >= gradientScaled;\",\r\n    \"                        if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P6;\",\r\n    \"                        if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P6;\",\r\n    \"                        doneNP = (!doneN) || (!doneP);\",\r\n    \"                        if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P6;\",\r\n    \"                        if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P6;\",\r\n    \"/*--------------------------------------------------------------------------*/\",\r\n    \"                        #if (FXAA_QUALITY_PS > 7)\",\r\n    \"                        if(doneNP) {\",\r\n    \"                            if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\r\n    \"                            if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\r\n    \"                            if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\r\n    \"                            if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\r\n    \"                            doneN = abs(lumaEndN) >= gradientScaled;\",\r\n    \"                            doneP = abs(lumaEndP) >= gradientScaled;\",\r\n    \"                            if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P7;\",\r\n    \"                            if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P7;\",\r\n    \"                            doneNP = (!doneN) || (!doneP);\",\r\n    \"                            if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P7;\",\r\n    \"                            if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P7;\",\r\n    \"/*--------------------------------------------------------------------------*/\",\r\n    \"    #if (FXAA_QUALITY_PS > 8)\",\r\n    \"    if(doneNP) {\",\r\n    \"        if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\r\n    \"        if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\r\n    \"        if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\r\n    \"        if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\r\n    \"        doneN = abs(lumaEndN) >= gradientScaled;\",\r\n    \"        doneP = abs(lumaEndP) >= gradientScaled;\",\r\n    \"        if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P8;\",\r\n    \"        if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P8;\",\r\n    \"        doneNP = (!doneN) || (!doneP);\",\r\n    \"        if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P8;\",\r\n    \"        if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P8;\",\r\n    \"/*--------------------------------------------------------------------------*/\",\r\n    \"        #if (FXAA_QUALITY_PS > 9)\",\r\n    \"        if(doneNP) {\",\r\n    \"            if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\r\n    \"            if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\r\n    \"            if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\r\n    \"            if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\r\n    \"            doneN = abs(lumaEndN) >= gradientScaled;\",\r\n    \"            doneP = abs(lumaEndP) >= gradientScaled;\",\r\n    \"            if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P9;\",\r\n    \"            if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P9;\",\r\n    \"            doneNP = (!doneN) || (!doneP);\",\r\n    \"            if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P9;\",\r\n    \"            if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P9;\",\r\n    \"/*--------------------------------------------------------------------------*/\",\r\n    \"            #if (FXAA_QUALITY_PS > 10)\",\r\n    \"            if(doneNP) {\",\r\n    \"                if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\r\n    \"                if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\r\n    \"                if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\r\n    \"                if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\r\n    \"                doneN = abs(lumaEndN) >= gradientScaled;\",\r\n    \"                doneP = abs(lumaEndP) >= gradientScaled;\",\r\n    \"                if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P10;\",\r\n    \"                if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P10;\",\r\n    \"                doneNP = (!doneN) || (!doneP);\",\r\n    \"                if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P10;\",\r\n    \"                if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P10;\",\r\n    \"/*--------------------------------------------------------------------------*/\",\r\n    \"                #if (FXAA_QUALITY_PS > 11)\",\r\n    \"                if(doneNP) {\",\r\n    \"                    if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\r\n    \"                    if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\r\n    \"                    if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\r\n    \"                    if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\r\n    \"                    doneN = abs(lumaEndN) >= gradientScaled;\",\r\n    \"                    doneP = abs(lumaEndP) >= gradientScaled;\",\r\n    \"                    if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P11;\",\r\n    \"                    if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P11;\",\r\n    \"                    doneNP = (!doneN) || (!doneP);\",\r\n    \"                    if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P11;\",\r\n    \"                    if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P11;\",\r\n    \"/*--------------------------------------------------------------------------*/\",\r\n    \"                    #if (FXAA_QUALITY_PS > 12)\",\r\n    \"                    if(doneNP) {\",\r\n    \"                        if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\r\n    \"                        if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\r\n    \"                        if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\r\n    \"                        if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\r\n    \"                        doneN = abs(lumaEndN) >= gradientScaled;\",\r\n    \"                        doneP = abs(lumaEndP) >= gradientScaled;\",\r\n    \"                        if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P12;\",\r\n    \"                        if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P12;\",\r\n    \"                        doneNP = (!doneN) || (!doneP);\",\r\n    \"                        if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P12;\",\r\n    \"                        if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P12;\",\r\n    \"/*--------------------------------------------------------------------------*/\",\r\n    \"                    }\",\r\n    \"                    #endif\",\r\n    \"/*--------------------------------------------------------------------------*/\",\r\n    \"                }\",\r\n    \"                #endif\",\r\n    \"/*--------------------------------------------------------------------------*/\",\r\n    \"            }\",\r\n    \"            #endif\",\r\n    \"/*--------------------------------------------------------------------------*/\",\r\n    \"        }\",\r\n    \"        #endif\",\r\n    \"/*--------------------------------------------------------------------------*/\",\r\n    \"    }\",\r\n    \"    #endif\",\r\n    \"/*--------------------------------------------------------------------------*/\",\r\n    \"                        }\",\r\n    \"                        #endif\",\r\n    \"/*--------------------------------------------------------------------------*/\",\r\n    \"                    }\",\r\n    \"                    #endif\",\r\n    \"/*--------------------------------------------------------------------------*/\",\r\n    \"                }\",\r\n    \"                #endif\",\r\n    \"/*--------------------------------------------------------------------------*/\",\r\n    \"            }\",\r\n    \"            #endif\",\r\n    \"/*--------------------------------------------------------------------------*/\",\r\n    \"        }\",\r\n    \"        #endif\",\r\n    \"/*--------------------------------------------------------------------------*/\",\r\n    \"    }\",\r\n    \"/*--------------------------------------------------------------------------*/\",\r\n    \"    FxaaFloat dstN = posM.x - posN.x;\",\r\n    \"    FxaaFloat dstP = posP.x - posM.x;\",\r\n    \"    if(!horzSpan) dstN = posM.y - posN.y;\",\r\n    \"    if(!horzSpan) dstP = posP.y - posM.y;\",\r\n    \"/*--------------------------------------------------------------------------*/\",\r\n    \"    FxaaBool goodSpanN = (lumaEndN < 0.0) != lumaMLTZero;\",\r\n    \"    FxaaFloat spanLength = (dstP + dstN);\",\r\n    \"    FxaaBool goodSpanP = (lumaEndP < 0.0) != lumaMLTZero;\",\r\n    \"    FxaaFloat spanLengthRcp = 1.0/spanLength;\",\r\n    \"/*--------------------------------------------------------------------------*/\",\r\n    \"    FxaaBool directionN = dstN < dstP;\",\r\n    \"    FxaaFloat dst = min(dstN, dstP);\",\r\n    \"    FxaaBool goodSpan = directionN ? goodSpanN : goodSpanP;\",\r\n    \"    FxaaFloat subpixG = subpixF * subpixF;\",\r\n    \"    FxaaFloat pixelOffset = (dst * (-spanLengthRcp)) + 0.5;\",\r\n    \"    FxaaFloat subpixH = subpixG * fxaaQualitySubpix;\",\r\n    \"/*--------------------------------------------------------------------------*/\",\r\n    \"    FxaaFloat pixelOffsetGood = goodSpan ? pixelOffset : 0.0;\",\r\n    \"    FxaaFloat pixelOffsetSubpix = max(pixelOffsetGood, subpixH);\",\r\n    \"    if(!horzSpan) posM.x += pixelOffsetSubpix * lengthSign;\",\r\n    \"    if( horzSpan) posM.y += pixelOffsetSubpix * lengthSign;\",\r\n    \"    #if (FXAA_DISCARD == 1)\",\r\n    \"        return FxaaTexTop(tex, posM);\",\r\n    \"    #else\",\r\n    \"        return FxaaFloat4(FxaaTexTop(tex, posM).xyz, lumaM);\",\r\n    \"    #endif\",\r\n    \"}\",\r\n    \"/*==========================================================================*/\",\r\n    \"#endif\",\r\n    \"\",\r\n    \"void main() {\",\r\n    \"  gl_FragColor = FxaaPixelShader(\",\r\n    \"    vUv,\",\r\n    \"    vec4(0.0),\",\r\n    \"    tDiffuse,\",\r\n    \"    tDiffuse,\",\r\n    \"    tDiffuse,\",\r\n    \"    resolution,\",\r\n    \"    vec4(0.0),\",\r\n    \"    vec4(0.0),\",\r\n    \"    vec4(0.0),\",\r\n    \"    0.75,\",\r\n    \"    0.166,\",\r\n    \"    0.0833,\",\r\n    \"    0.0,\",\r\n    \"    0.0,\",\r\n    \"    0.0,\",\r\n    \"    vec4(0.0)\",\r\n    \"  );\",\r\n    \"\",\r\n    \"  // TODO avoid querying texture twice for same texel\",\r\n    \"  gl_FragColor.a = texture2D(tDiffuse, vUv).a;\",\r\n    \"}\"\r\n  ].join(\"\\n\")\r\n};\r\n\r\nexport {\r\n  FXAAShader\r\n};","let _extends = ( des, src, over ) => {\r\n  let res = _extend( des, src, over );\r\n\r\n  function _extend( des, src, over ) {\r\n    let override = true;\r\n    if( over === false ) {\r\n      override = false;\r\n    }\r\n    if( src instanceof Array ) {\r\n      for( let i = 0, len = src.length; i < len; i++ )\r\n        _extend( des, src[ i ], override );\r\n    }\r\n    for( let i in src ) {\r\n      if( override || !( i in des ) ) {\r\n        des[ i ] = src[ i ];\r\n      }\r\n    }\r\n    return des;\r\n  }\r\n  for( let i in src ) {\r\n    delete res[ i ];\r\n  }\r\n  return res;\r\n};\r\n\r\nexport {\r\n  _extends\r\n};","let rndInt = ( max ) => {\r\n  return Math.floor( Math.random() * max );\r\n};\r\nexport {\r\n  rndInt\r\n};","let rndString = ( len ) => {\r\n  if( len <= 0 ) {\r\n    return '';\r\n  }\r\n  len = len - 1 || 31;\r\n  let $chars =\r\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n  let maxPos = $chars.length + 1;\r\n  let pwd = $chars.charAt( Math.floor( Math.random() * ( maxPos - 10 ) ) );\r\n  for( let i = 0; i < len; i++ ) {\r\n    pwd += $chars.charAt( Math.floor( Math.random() * maxPos ) );\r\n  }\r\n  return pwd;\r\n};\r\n\r\nexport {\r\n  rndString\r\n};","import { _extends as extend } from './extends';\r\nimport { rndInt } from './rndInt';\r\nimport { rndString } from './rndString';\r\n\r\nlet Util = {\r\n  extend,\r\n  rndInt,\r\n  rndString\r\n};\r\n\r\nexport {\r\n  Util\r\n};","/* eslint-disable */\r\nexport { DefaultSettings } from './core/settings/DefaultSettings.js';\r\nexport { App } from './core/App.js';\r\nexport { LoopManager } from './core/LoopManager.js';\r\nexport { Monitor } from './core/Monitor.js';\r\nexport { Transitioner } from './core/Transitioner.js';\r\nexport { View } from './core/View.js';\r\nexport { VR } from './core/VR.js';\r\nexport { World } from './core/World.js';\r\n\r\nexport { NotFunctionError } from './error/NotFunctionError.js';\r\n\r\nexport { EventManager } from './events/EventManager.js';\r\nexport { Events } from './events/Events.js';\r\nexport { Signal } from './events/Signal.js';\r\n\r\nexport { GUI, Body, Txt, Div } from './gui/GUI.js';\r\n\r\nexport { LoaderFactory } from './loader/LoaderFactory.js';\r\n\r\nexport { EffectComposer } from './postprocessing/EffectComposer.js';\r\n\r\nexport { Pass }          from './postprocessing/Pass.js';\r\nexport { DotScreenPass } from './postprocessing/DotScreenPass.js';\r\nexport { RenderPass }    from './postprocessing/RenderPass.js';\r\nexport { ShaderPass }    from './postprocessing/ShaderPass.js';\r\nexport { GlitchPass }    from './postprocessing/GlitchPass.js';\r\n\r\nexport { GlitchShader }    from './postprocessing/shader/GlitchShader.js';\r\nexport { FXAAShader }      from './postprocessing/shader/FXAAShader.js';\r\nexport { CopyShader }      from './postprocessing/shader/CopyShader.js';\r\nexport { DotScreenShader } from './postprocessing/shader/DotScreenShader.js';\r\n\r\nexport { Util } from './util/Util.js';\r\n\r\n//export * from './thirdparty/three.module.js';"],"names":["NotFunctionError","extend"],"mappings":"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"}