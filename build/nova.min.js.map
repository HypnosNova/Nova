{"version":3,"file":"nova.min.js","sources":["../src/core/settings/DefaultSettings.js","../src/error/NotFunctionError.js","../src/core/LoopManager.js","../src/events/EventManager.js","../src/core/World.js","../src/constant.js","../src/core/VR.js","../src/core/App.js","../src/core/Bind.js","../src/core/FBOWorld.js","../src/core/Monitor.js","../src/core/QRCode.js","../src/core/Transitioner.js","../src/core/View.js","../src/events/Signal.js","../src/events/FBOEventMapper.js","../src/gui/GUI.js","../src/loader/LoaderFactory.js","../src/postprocessing/shader/CopyShader.js","../src/postprocessing/Pass.js","../src/postprocessing/ShaderPass.js","../src/postprocessing/RenderPass.js","../src/postprocessing/MaskPass.js","../src/postprocessing/ClearMaskPass.js","../src/postprocessing/EffectComposer.js","../src/postprocessing/shader/AfterimageShader.js","../src/postprocessing/AfterimagePass.js","../src/postprocessing/shader/DotScreenShader.js","../src/postprocessing/DotScreenPass.js","../src/postprocessing/shader/GlitchShader.js","../src/postprocessing/GlitchPass.js","../src/postprocessing/OutlinePass.js","../src/postprocessing/shader/WatercolorShader.js","../src/postprocessing/WatercolorPass.js","../src/postprocessing/shader/TestShader.js","../src/postprocessing/TestPass.js","../src/postprocessing/shader/FXAAShader.js","../src/util/Util.js","../src/util/extends.js","../src/util/rndInt.js","../src/util/rndString.js","../src/util/geoToCartesian.js","../src/events/Events.js"],"sourcesContent":["//适合大部分WebGL的APP设置\r\nlet DefaultSettings = {\r\n\tparent: document.body, //APP所在DOM容器\r\n\tsetCommonCSS: true, //设置默认CSS样式，无法滚动，超出区域不显示，取消所有内外边距\r\n\tautoStart: true, //自动执行渲染循环和逻辑循环\r\n\tautoResize: true, //自动拉伸自适应不同屏幕分辨率\r\n\tVRSupport: false, //是否加载VR支持模块\r\n\trenderer: {\r\n\t\tcanvas: undefined,\r\n\t\tclearColor: 0x000000, //渲染器的默认清除颜色\r\n\t\tclearAlpha: 1, //渲染器的默认清除颜色的透明度\r\n\t\tpixelRatio: window.devicePixelRatio || 1, //用于移动平台的清晰度\r\n\t\tprecision: \"highp\", // 渲染精细度，默认为高\r\n\t\tantialias: true, //是否开启抗锯齿\r\n\t\talpha: false, // 渲染器是否保存alpha缓冲\r\n\t\tlogarithmicDepthBuffer: false, // 逻辑深度缓冲\r\n\t\tpreserveDrawingBuffer: false\r\n\t},\r\n\tnormalEventList: [ \"click\", \"mousedown\", \"mouseup\", \"touchstart\",\r\n\t\t\"touchend\", \"touchmove\", \"mousemove\"\r\n\t], //默认开启的原生事件监听，不建议将所有的事件监听都写在里面，每一个事件监听都会增加一次射线法碰撞检测，如果不必要的事件过多会降低性能\r\n\thammerEventList: \"press tap pressup pan swipe\", //默认hammer手势事件的监听，同normalEventList一样，用到什么加入什么，不要一大堆东西全塞进去\r\n};\r\n\r\nexport {\r\n\tDefaultSettings\r\n};\r\n","class NotFunctionError extends Error {\r\n\r\n\tconstructor( message ) {\r\n\r\n\t\tsuper( message );\r\n\t\tthis.name = 'NotFunctionError';\r\n\t\tthis.message = message || 'The object is not a function.';\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport {\r\n\tNotFunctionError\r\n};\r\n","import { NotFunctionError } from './../error/NotFunctionError.js';\r\n\r\nclass LoopManager {\r\n\r\n\tconstructor( cycleLevel = 1 ) {\r\n\r\n\t\t//当它是true，不执行该循环\r\n\t\tthis.disable = false;\r\n\t\t//记录循环次数\r\n\t\tthis.times = 0;\r\n\t\t//每隔多少循环执行一次update，用于调整fps。数字越大，fps越低\r\n\t\tthis.cycleLevel = cycleLevel <= 1 ? 1 : cycleLevel;\r\n\t\tthis.functionMap = new Map();\r\n\r\n\t}\r\n\r\n\tupdate( time ) {\r\n\r\n\t\tthis.times ++;\r\n\t\tif ( this.disable || ( this.times % this.cycleLevel ) !== 0 ) {\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\t\tthis.functionMap.forEach( ( value ) => {\r\n\r\n\t\t\tvalue( time );\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\tadd( func, key ) {\r\n\r\n\t\tif ( typeof func !== 'function' ) {\r\n\r\n\t\t\tthrow new NotFunctionError();\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif ( key ) {\r\n\r\n\t\t\t\tthis.functionMap.set( key, func );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tkey = Symbol();\r\n\t\t\t\tthis.functionMap.set( key, func );\r\n\t\t\t\treturn key;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tremoveAll() {\r\n\r\n\t\tthis.functionMap.clear();\r\n\r\n\t}\r\n\r\n\tremove( funcOrKey ) {\r\n\r\n\t\tif ( typeof funcOrKey === 'function' ) {\r\n\r\n\t\t\tthis.functionMap.forEach( ( value, key ) => {\r\n\r\n\t\t\t\tif ( value === funcOrKey ) {\r\n\r\n\t\t\t\t\treturn this.functionMap.delete( key );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} );\r\n\t\t\treturn false;\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn this.functionMap.delete( funcOrKey );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport {\r\n\tLoopManager\r\n};\r\n","import { Raycaster, Vector2 } from \"three\";\r\n\r\nclass EventManager {\r\n\r\n\tconstructor( world ) {\r\n\r\n\t\tworld.eventManager = this;\r\n\t\tthis.world = world;\r\n\t\tthis.disable = false;\r\n\t\tthis.isDeep = true;\r\n\t\tthis.receivers = world.receivers;\r\n\t\tthis.raycaster = new Raycaster();\r\n\t\tthis.centerRaycaster = new Raycaster();\r\n\t\tthis.selectedObj = null;\r\n\t\tthis.centerSelectedObj = null;\r\n\t\tthis.isDetectingEnter = true;\r\n\t\tlet normalEventList = world.app.options.normalEventList;\r\n\r\n\t\tfor ( let eventItem of normalEventList ) {\r\n\r\n\t\t\tworld.app.parent.addEventListener( eventItem, ( event ) => {\r\n\r\n\t\t\t\tif ( this.disable ) return;\r\n\t\t\t\tthis.raycastCheck( this.toNovaEvent( event ) );\r\n\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t\ttry {\r\n\r\n\t\t\tif ( window.Hammer === undefined ) {\r\n\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t} catch ( e ) {\r\n\r\n\t\t\tconsole.warn( 'Hammer没有引入，手势事件无法使用，只能使用基础的交互事件。' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\t\tthis.hammer = new window.Hammer( world.app.renderer.domElement );\r\n\t\tthis.hammer.on( world.app.options.hammerEventList, ( event ) => {\r\n\r\n\t\t\tif ( this.disable ) return;\r\n\t\t\tthis.raycastCheck( event );\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\ttoNovaEvent( event ) {\r\n\r\n\t\treturn {\r\n\t\t\tchangedPointers: [ event ],\r\n\t\t\tcenter: new Vector2( event.clientX, event.clientY ),\r\n\t\t\ttype: event.type,\r\n\t\t\ttarget: event.target\r\n\t\t};\r\n\r\n\t}\r\n\r\n\traycastCheck( event ) {\r\n\r\n\t\tlet vec2 = new Vector2( event.center.x / this.world.app.getWorldWidth() *\r\n\t\t\t2 - 1, 1 - event.center.y / this.world.app.getWorldHeight() * 2 );\r\n\t\tthis.raycaster.setFromCamera( vec2, this.world.camera );\r\n\t\tlet receiverMap;\r\n\t\tif ( this.world.receivers instanceof Array ) {\r\n\r\n\t\t\treceiverMap = new Map();\r\n\t\t\treceiverMap.set( Symbol(), this.world.receivers );\r\n\r\n\t\t} else if ( this.world.receivers instanceof Map ) {\r\n\r\n\t\t\treceiverMap = this.world.receivers;\r\n\r\n\t\t}\r\n\t\tlet intersect;\r\n\t\tfor ( let receivers of receiverMap.values() ) {\r\n\r\n\t\t\tlet intersects = this.raycaster.intersectObjects( receivers, this.isDeep );\r\n\t\t\tfor ( let i = 0; i < intersects.length; i ++ ) {\r\n\r\n\t\t\t\tif ( intersects[ i ].object.isPenetrated ||\r\n\t\t\t\t\t! intersects[ i ].object.events ||\r\n\t\t\t\t\t! intersects[ i ].object.events[ event.type ] ) {\r\n\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tintersect = intersects[ i ];\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t\tif ( intersect ) {\r\n\r\n\t\t\t\tintersect.object.events[ event.type ].run( event, intersect );\r\n\r\n\t\t\t}\r\n\t\t\treturn intersect;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport {\r\n\tEventManager\r\n};\r\n","import { LoopManager } from './LoopManager.js';\r\nimport { EventManager } from './../events/EventManager';\r\nimport { Scene, PerspectiveCamera, WebGLRenderTarget, LinearFilter, RGBFormat } from \"three\";\r\n\r\nclass World {\r\n\r\n\tconstructor( app, camera, clearColor ) {\r\n\r\n\t\tthis.app = app;\r\n\t\tthis.scene = new Scene();\r\n\t\tthis.logicLoop = new LoopManager();\r\n\t\tthis.renderLoop = new LoopManager();\r\n\t\tthis.camera = camera || new PerspectiveCamera( 45, app.getWorldWidth() /\r\n\t\t\tapp.getWorldHeight(), 0.01, 5000 );\r\n\t\tthis.receivers = this.scene.children;\r\n\t\tthis.eventManager = new EventManager( this );\r\n\t\tthis.renderTargetParameters = {\r\n\t\t\tminFilter: LinearFilter,\r\n\t\t\tmagFilter: LinearFilter,\r\n\t\t\tformat: RGBFormat,\r\n\t\t\tstencilBuffer: false\r\n\t\t};\r\n\t\tthis.isRTT = false;\r\n\t\tthis.clearColor = clearColor || 0;\r\n\t\tthis.fbo = new WebGLRenderTarget( this.app.getWorldWidth(),\r\n\t\t\tthis.app.getWorldHeight(), this.renderTargetParameters );\r\n\t\tthis.defaultRenderID = Symbol();\r\n\t\tthis.renderLoop.add( () => {\r\n\r\n\t\t\tif ( this.isRTT ) {\r\n\r\n\t\t\t\tthis.app.renderer.render( this.scene, this.camera, this.fbo, true );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.app.renderer.render( this.scene, this.camera );\r\n\r\n\t\t\t}\r\n\r\n\t\t}, this.defaultRenderID );\r\n\t\tthis.defaultUpdateID = Symbol();\r\n\r\n\t}\r\n\r\n\tupdate( time ) {\r\n\r\n\t\tthis.logicLoop.update( time );\r\n\t\tthis.renderLoop.update( time );\r\n\r\n\t}\r\n\r\n\tresize( width, height ) {\r\n\r\n\t\tif ( this.camera.type === 'PerspectiveCamera' ) {\r\n\r\n\t\t\tthis.camera.aspect = width / height;\r\n\t\t\tthis.camera.updateProjectionMatrix();\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.camera.left = - width / 2;\r\n\t\t\tthis.camera.right = width / 2;\r\n\t\t\tthis.camera.top = height / 2;\r\n\t\t\tthis.camera.bottom = - height / 2;\r\n\t\t\tthis.camera.updateProjectionMatrix();\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport {\r\n\tWorld\r\n};\r\n","const APP_STOP = 0;\r\nconst APP_RUNNING = 1;\r\nconst APP_PAUSE = 2;\r\nconst WORLD_RUNNING = 1;\r\nconst WORLD_PAUSE = 2;\r\nconst VERSION = '0.1.8b';\r\n\r\nconsole.log( \"Nova framework for Three.js, version: %c \" + VERSION, \"color:blue\" );\r\n\r\nexport {\r\n\tAPP_STOP,\r\n\tAPP_RUNNING,\r\n\tAPP_PAUSE,\r\n\tWORLD_RUNNING,\r\n\tWORLD_PAUSE\r\n};\r\n","class VR {\r\n\r\n\tconstructor( app ) {\r\n\r\n\t\tthis.app = app;\r\n\t\tthis.display = undefined;\r\n\t\tthis.polyfill = undefined;\r\n\t\tthis.isOpenVR = false;\r\n\t\tthis.vrEffect = undefined;\r\n\t\tthis.getVRDisplay();\r\n\t\tthis.createVREffect();\r\n\r\n\t}\r\n\r\n\tcreateVREffect() {\r\n\r\n\t\tif ( this.vrEffect ) {\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\t\tif ( ! window.THREE.VREffect ) {\r\n\r\n\t\t\tconsole.warn( \"未引入VREffect.js，无法创建VR模式。\" );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\t\tthis.vrEffect = new window.THREE.VREffect( this.app.renderer );\r\n\t\tthis.vrEffect.setSize( this.app.renderer.domElement.clientWidth,\r\n\t\t\tthis.app.renderer.domElement.clientHeight, false );\r\n\t\tthis.vrEffect.isOpened = false;\r\n\t\tthis.vrEffect.updateId = Symbol();\r\n\r\n\t}\r\n\r\n\tsetPolyfill() {\r\n\r\n\t\tif ( this.polyfill ) {\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\t\tif ( ! window.WebVRPolyfill ) {\r\n\r\n\t\t\tconsole.warn( \"未引入WebVRPolyfill.js，无法创建VR兼容模式。\" );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\t\tlet config = ( function () {\r\n\r\n\t\t\tlet config = {};\r\n\t\t\tlet q = window.location.search.substring( 1 );\r\n\t\t\tif ( q === '' ) {\r\n\r\n\t\t\t\treturn config;\r\n\r\n\t\t\t}\r\n\t\t\tlet params = q.split( '&' );\r\n\t\t\tlet param, name, value;\r\n\t\t\tfor ( let i = 0; i < params.length; i ++ ) {\r\n\r\n\t\t\t\tparam = params[ i ].split( '=' );\r\n\t\t\t\tname = param[ 0 ];\r\n\t\t\t\tvalue = param[ 1 ];\r\n\r\n\t\t\t\t// All config values are either boolean or float\r\n\t\t\t\tconfig[ name ] = value === 'true' ? true :\r\n\t\t\t\t\tvalue === 'false' ? false :\r\n\t\t\t\t\t\tparseFloat( value );\r\n\r\n\t\t\t}\r\n\t\t\treturn config;\r\n\r\n\t\t} )();\r\n\t\tthis.polyfill = new window.WebVRPolyfill( config );\r\n\r\n\t}\r\n\r\n\tgetVRDisplay() {\r\n\r\n\t\tif ( ! navigator.getVRDisplays ) {\r\n\r\n\t\t\tthis.setPolyfill();\r\n\r\n\t\t}\r\n\t\tif ( ! navigator.getVRDisplays ) {\r\n\r\n    \treturn;\r\n\r\n\t\t}\r\n\t\treturn navigator.getVRDisplays()\r\n\t\t\t.then( ( vrDisplays ) => {\r\n\r\n\t\t\t\tif ( vrDisplays.length ) {\r\n\r\n\t\t\t\t\tthis.display = vrDisplays[ 0 ];\r\n\t\t\t\t\treturn this.display;\r\n\r\n\t\t\t\t}\r\n\t\t\t\treturn \"no\";\r\n\r\n\t\t\t}, () => {\r\n\r\n\t\t\t\treturn \"no\";\r\n\r\n\t\t\t} );\r\n\r\n\t}\r\n\r\n\topen() {\r\n\r\n\t\tif ( ! this.display || ! this.vrEffect ) {\r\n\r\n\t\t\tconsole.warn( \"未发现VR设备或浏览器不兼容，无法进入VR模式。\" );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\t\tthis.app.renderLoop.add( () => {\r\n\r\n\t\t\tthis.vrEffect.render( this.app.world.scene, this.app.world.camera );\r\n\r\n\t\t}, this.vrEffect.updateId );\r\n\t\tthis.display.requestPresent( [ { source: this.app.renderer.domElement } ] );\r\n\r\n\t}\r\n\r\n\tclose() {\r\n\r\n\t\tthis.app.renderLoop.remove( this.vrEffect.updateId );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport {\r\n\tVR\r\n};\r\n","import { World } from './World.js';\r\nimport { APP_RUNNING, APP_STOP, APP_PAUSE } from './../constant.js';\r\nimport { LoopManager } from './LoopManager.js';\r\nimport { VR } from './VR.js';\r\nimport { DefaultSettings } from './settings/DefaultSettings.js';\r\nimport { Vector2, Vector3, WebGLRenderer } from 'three';\r\nimport { defaultsDeep } from \"lodash\";\r\n\r\nclass App {\r\n\r\n\tconstructor( settings = {} ) {\r\n\r\n\t\tthis.options = defaultsDeep( settings, DefaultSettings );\r\n\t\tlet renderOption = this.options.renderer;\r\n\t\tif ( this.options.setCommonCSS ) {\r\n\r\n\t\t\tthis.setCommonCSS();\r\n\r\n\t\t}\r\n\t\tthis.parent = renderOption.canvas ? renderOption.canvas.parentElement : this.options.parent;\r\n\t\tthis.renderer = new WebGLRenderer( {\r\n\t\t\tcanvas: renderOption.canvas,\r\n\t\t\tantialias: renderOption.antialias,\r\n\t\t\tprecision: renderOption.precision,\r\n\t\t\talpha: renderOption.alpha,\r\n\t\t\tlogarithmicDepthBuffer: renderOption.logarithmicDepthBuffer,\r\n\t\t\tpreserveDrawingBuffer: renderOption.preserveDrawingBuffer\r\n\t\t} );\r\n\t\tthis.renderer.setClearColor( renderOption.clearColor, renderOption.clearAlpha );\r\n\t\tthis.world = new World( this );\r\n\r\n\t\tthis.state = APP_STOP;\r\n\t\tthis.logicLoop = new LoopManager();\r\n\t\tthis.renderLoop = new LoopManager();\r\n\t\twindow.addEventListener( 'resize', () => {\r\n\r\n\t\t\tthis.resize();\r\n\r\n\t\t} );\r\n\t\tif ( this.options.autoStart ) {\r\n\r\n\t\t\tthis.start();\r\n\r\n\t\t}\r\n\t\tif ( this.options.VRSupport ) {\r\n\r\n\t\t\tthis.VR = new VR( this );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tresize() {\r\n\r\n\t\tlet width = this.getWorldWidth();\r\n\t\tlet height = this.getWorldHeight();\r\n\t\tthis.world.resize( width, height );\r\n\t\tthis.renderer.setSize( width, height );\r\n\t\tthis.renderer.setPixelRatio( this.options.renderer.pixelRatio );\r\n\r\n\t}\r\n\r\n\tupdate( time ) {\r\n\r\n\t\tif ( this.state === APP_RUNNING ) {\r\n\r\n\t\t\tthis.logicLoop.update( time );\r\n\t\t\tthis.world.update( time );\r\n\t\t\tthis.renderLoop.update( time );\r\n\r\n\t\t}\r\n\r\n\t\trequestAnimationFrame(\r\n\t\t\t() => {\r\n\r\n\t\t\t\tthis.update();\r\n\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t}\r\n\r\n\tsetCommonCSS() {\r\n\r\n\t\tdocument.write(\r\n\t\t\t`<style>*{margin:0;padding:0} body{overflow:hidden}</style>` );\r\n\r\n\t}\r\n\r\n\tgetWorldWidth() {\r\n\r\n\t\treturn this.parent === document.body ? window.innerWidth :\r\n\t\t\tthis.parent.offsetWidth;\r\n\r\n\t}\r\n\r\n\tgetWorldHeight() {\r\n\r\n\t\treturn this.parent === document.body ? window.innerHeight :\r\n\t\t\tthis.parent.offsetHeight;\r\n\r\n\t}\r\n\r\n\tstart() {\r\n\r\n\t\tif ( this.state === APP_STOP ) {\r\n\r\n\t\t\tthis.state = APP_RUNNING;\r\n\t\t\tthis.parent.appendChild( this.renderer.domElement );\r\n\t\t\tthis.resize();\r\n\t\t\tthis.update();\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tresume() {\r\n\r\n\t\tif ( this.state === APP_PAUSE ) {\r\n\r\n\t\t\tthis.state = APP_RUNNING;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpause() {\r\n\r\n\t\tif ( this.state === APP_RUNNING ) {\r\n\r\n\t\t\tthis.state = APP_PAUSE;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tdestroy() {\r\n\r\n\t\tthis.world.destroy();\r\n\r\n\t}\r\n\r\n\topenFullScreen() {\r\n\r\n\t\tlet container = this.parent;\r\n\t\tthis.isFullScreen = true;\r\n\t\tif ( container.requestFullscreen ) {\r\n\r\n\t\t\tcontainer.requestFullscreen();\r\n\r\n\t\t} else if ( container.msRequestFullscreen ) {\r\n\r\n\t\t\tcontainer.msRequestFullscreen();\r\n\r\n\t\t} else if ( container.mozRequestFullScreen ) {\r\n\r\n\t\t\tcontainer.mozRequestFullScreen();\r\n\r\n\t\t} else if ( container.webkitRequestFullscreen ) {\r\n\r\n\t\t\tcontainer.webkitRequestFullscreen();\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.isFullScreen = false;\r\n\r\n\t\t}\r\n\t\treturn this.isFullScreen;\r\n\r\n\t}\r\n\r\n\tcloseFullScreen() {\r\n\r\n\t\tlet container = document;\r\n\t\tthis.isFullScreen = false;\r\n\t\tif ( container.exitFullscreen ) {\r\n\r\n\t\t\tcontainer.exitFullscreen();\r\n\r\n\t\t} else if ( container.mozCancelFullScreen ) {\r\n\r\n\t\t\tcontainer.mozCancelFullScreen();\r\n\r\n\t\t} else if ( container.webkitExitFullScreen ) {\r\n\r\n\t\t\tcontainer.webkitExitFullScreen();\r\n\r\n\t\t} else if ( container.msExitFullscreen ) {\r\n\r\n\t\t\tcontainer.msExitFullscreen();\r\n\r\n\t\t} else if ( container.webkitCancelFullScreen ) {\r\n\r\n\t\t\tcontainer.webkitCancelFullScreen();\r\n\r\n\t\t} else if ( container.webkitExitFullScreen ) {\r\n\r\n\t\t\tcontainer.webkitCancelFullScreen();\r\n\r\n\t\t}\r\n\t\treturn this.isFullScreen;\r\n\r\n\t}\r\n\r\n\ttoggleFullScreen() {\r\n\r\n\t\tif ( this.isFullScreen ) {\r\n\r\n\t\t\tthis.closeFullScreen();\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.openFullScreen();\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tscreenshot() {\r\n\r\n\t\tlet img = new Image();\r\n\t\tthis.renderer.render( this.world.scene, this.world.camera );\r\n\t\timg.src = this.renderer.domElement.toDataURL();\r\n\t\tlet w = window.open( '', '' );\r\n\t\tw.document.title = \"Nova Screenshot\";\r\n\t\tw.document.body.appendChild( img );\r\n\r\n\t}\r\n\r\n\tsceneCoordinateToCanvasCoordinate( obj, camera = this.world.camera ) {\r\n\r\n\t\tlet worldVector = obj instanceof Vector3 ? obj.clone() : obj.position.clone();\r\n\t\tlet vector = worldVector.project( camera );\r\n\t\tlet halfWidth = this.getWorldWidth() / 2;\r\n\t\tlet halfHeight = this.getWorldHeight() / 2;\r\n\r\n\t\treturn new Vector2( Math.round( vector.x * halfWidth + halfWidth ),\r\n\t\t\tMath.round( - vector.y * halfHeight + halfHeight ) );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport {\r\n\tApp\r\n};\r\n","class Bind {\r\n\r\n\tconstructor( obj ) {\r\n\r\n\t\tfor ( let i in obj ) {\r\n\r\n\t\t\tthis[ i ] = obj[ i ];\r\n\t\t\tthis.bindMap = new Map();\r\n\t\t\tthis.defineReactive( this, i, this[ i ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tadd( obj, funcs = {} ) {\r\n\r\n\t\tthis.bindMap.set( obj, funcs );\r\n\r\n\t}\r\n\r\n\tremove( obj ) {\r\n\r\n\t\tthis.bindMap.delete( obj );\r\n\r\n\t}\r\n\r\n\tdefineReactive( data, key, val ) {\r\n\r\n\t\tObject.defineProperty( data, key, {\r\n\t\t\tenumerable: true,\r\n\t\t\tconfigurable: false,\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn val;\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( newVal ) {\r\n\r\n\t\t\t\tval = newVal;\r\n\t\t\t\tlet bindMap = data.bindMap;\r\n\t\t\t\tfor ( let [ obj, funcs ] of bindMap ) {\r\n\r\n\t\t\t\t\tif ( obj[ key ] !== undefined ) {\r\n\r\n\t\t\t\t\t\tobj[ key ] = funcs[ key ] ? funcs[ key ]( val, obj ) : val;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t}\r\n\r\n}\r\nexport {\r\n\tBind\r\n};\r\n","import { LoopManager } from './LoopManager';\r\nimport { Scene, PerspectiveCamera, LinearFilter, WebGLRenderTarget, RGBFormat } from \"three\";\r\n\r\nclass FBOWorld {\r\n\r\n\tconstructor( app, camera, width, height ) {\r\n\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\t\tthis.app = app;\r\n\t\tthis.scene = new Scene();\r\n\t\tthis.logicLoop = new LoopManager();\r\n\t\tthis.renderLoop = new LoopManager();\r\n\t\tthis.camera = camera || new PerspectiveCamera( 45, this.width /\r\n      this.height, 0.01, 5000 );\r\n\t\tthis.receivers = this.scene.children;\r\n\r\n\t\tthis.renderTargetParameters = {\r\n\t\t\tminFilter: LinearFilter,\r\n\t\t\tmagFilter: LinearFilter,\r\n\t\t\tformat: RGBFormat,\r\n\t\t\tstencilBuffer: false\r\n\t\t};\r\n\t\tthis.clearColor = 0;\r\n\t\tthis.fbo = new WebGLRenderTarget( this.width,\r\n\t\t\tthis.height, this.renderTargetParameters );\r\n\t\tthis.defaultRenderID = Symbol();\r\n\t\tthis.defaultUpdateID = Symbol();\r\n\t\tthis.resize();\r\n\t\tthis.renderLoop.add( () => {\r\n\r\n\t\t\tthis.app.renderer.render( this.scene, this.camera, this.fbo, true );\r\n\r\n\t\t}, this.defaultRenderID );\r\n\r\n\t}\r\n\r\n\tupdate( time ) {\r\n\r\n\t\tthis.logicLoop.update( time );\r\n\t\tthis.renderLoop.update( time );\r\n\r\n\t}\r\n\r\n\tresize() {\r\n\r\n\t\tif ( this.camera.type === 'PerspectiveCamera' ) {\r\n\r\n\t\t\tthis.camera.aspect = this.width / this.height;\r\n\t\t\tthis.camera.updateProjectionMatrix();\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.camera.left = - this.width / 2;\r\n\t\t\tthis.camera.right = this.width / 2;\r\n\t\t\tthis.camera.top = this.height / 2;\r\n\t\t\tthis.camera.bottom = - this.height / 2;\r\n\t\t\tthis.camera.updateProjectionMatrix();\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport {\r\n\tFBOWorld\r\n};\r\n","import { WebGLRenderer } from \"three\";\r\n\r\nclass Monitor {\r\n\r\n\tconstructor( world, option ) {\r\n\r\n\t\tthis.option = option;\r\n\t\tthis.fullWidth = world.app.getWorldWidth();\r\n\t\tthis.fullHeight = world.app.getWorldHeight();\r\n\t\tthis.renderer = new WebGLRenderer();\r\n\t\tthis.world = world;\r\n\t\tthis.canvas = this.renderer.domElement;\r\n\t\tthis.renderer.setSize( this.fullWidth * option.width, this.fullHeight *\r\n\t\t\toption.height );\r\n\t\tthis.renderer.setPixelRatio( window.devicePixelRatio );\r\n\r\n\t}\r\n\r\n\tresize( option ) {\r\n\r\n\t\tthis.option = option;\r\n\t\tthis.fullWidth = this.world.app.getWorldWidth();\r\n\t\tthis.fullHeight = this.world.app.getWorldHeight();\r\n\t\tthis.renderer.setSize( this.fullWidth * option.width, this.fullHeight *\r\n\t\t\toption.height );\r\n\t\tthis.setViewOffset();\r\n\r\n\t}\r\n\r\n\tsetViewOffset() {\r\n\r\n\t\tlet viewX = this.fullWidth * this.option.left;\r\n\t\tlet viewY = this.fullHeight * this.option.top;\r\n\t\tlet viewWidth = this.fullWidth * this.option.width;\r\n\t\tlet viewHeight = this.fullHeight * this.option.height;\r\n\t\tthis.world.camera.setViewOffset( this.fullWidth, this.fullHeight, viewX,\r\n\t\t\tviewY, viewWidth, viewHeight );\r\n\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\tthis.setViewOffset();\r\n\t\tthis.renderer.render( this.world.scene, this.world.camera );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport {\r\n\tMonitor\r\n};\r\n","const QRMode = {\r\n\tMODE_NUMBER: 1 << 0,\r\n\tMODE_ALPHA_NUM: 1 << 1,\r\n\tMODE_8BIT_BYTE: 1 << 2,\r\n\tMODE_KANJI: 1 << 3\r\n};\r\n\r\nclass QR8bitByte {\r\n\r\n\tconstructor( data ) {\r\n\r\n\t\tthis.mode = QRMode.MODE_8BIT_BYTE;\r\n\t\tthis.data = data;\r\n\t\tthis.parsedData = [];\r\n\r\n\t\tfor ( let i = 0, l = this.data.length; i < l; i ++ ) {\r\n\r\n\t\t\tlet byteArray = [];\r\n\t\t\tlet code = this.data.charCodeAt( i );\r\n\r\n\t\t\tif ( code > 0x10000 ) {\r\n\r\n\t\t\t\tbyteArray[ 0 ] = 0xF0 | ( ( code & 0x1C0000 ) >>> 18 );\r\n\t\t\t\tbyteArray[ 1 ] = 0x80 | ( ( code & 0x3F000 ) >>> 12 );\r\n\t\t\t\tbyteArray[ 2 ] = 0x80 | ( ( code & 0xFC0 ) >>> 6 );\r\n\t\t\t\tbyteArray[ 3 ] = 0x80 | ( code & 0x3F );\r\n\r\n\t\t\t} else if ( code > 0x800 ) {\r\n\r\n\t\t\t\tbyteArray[ 0 ] = 0xE0 | ( ( code & 0xF000 ) >>> 12 );\r\n\t\t\t\tbyteArray[ 1 ] = 0x80 | ( ( code & 0xFC0 ) >>> 6 );\r\n\t\t\t\tbyteArray[ 2 ] = 0x80 | ( code & 0x3F );\r\n\r\n\t\t\t} else if ( code > 0x80 ) {\r\n\r\n\t\t\t\tbyteArray[ 0 ] = 0xC0 | ( ( code & 0x7C0 ) >>> 6 );\r\n\t\t\t\tbyteArray[ 1 ] = 0x80 | ( code & 0x3F );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tbyteArray[ 0 ] = code;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.parsedData.push( byteArray );\r\n\r\n\t\t}\r\n\r\n\t\tthis.parsedData = Array.prototype.concat.apply( [], this.parsedData );\r\n\r\n\t\tif ( this.parsedData.length !== this.data.length ) {\r\n\r\n\t\t\tthis.parsedData.unshift( 191 );\r\n\t\t\tthis.parsedData.unshift( 187 );\r\n\t\t\tthis.parsedData.unshift( 239 );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgetLength() {\r\n\r\n\t\treturn this.parsedData.length;\r\n\r\n\t}\r\n\r\n\twrite( buffer ) {\r\n\r\n\t\tfor ( let i = 0, l = this.parsedData.length; i < l; i ++ ) {\r\n\r\n\t\t\tbuffer.put( this.parsedData[ i ], 8 );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass QRCodeModel {\r\n\r\n\tconstructor( typeNumber, errorCorrectLevel ) {\r\n\r\n\t\tthis.typeNumber = typeNumber;\r\n\t\tthis.errorCorrectLevel = errorCorrectLevel;\r\n\t\tthis.modules = undefined;\r\n\t\tthis.moduleCount = 0;\r\n\t\tthis.dataCache = undefined;\r\n\t\tthis.dataList = [];\r\n\r\n\t}\r\n\taddData( data ) {\r\n\r\n\t\tlet newData = new QR8bitByte( data );\r\n\t\tthis.dataList.push( newData );\r\n\t\tthis.dataCache = undefined;\r\n\r\n\t}\r\n\r\n\tisDark( row, col ) {\r\n\r\n\t\tif ( row < 0 || this.moduleCount <= row || col < 0 || this.moduleCount <=\r\n      col ) {\r\n\r\n\t\t\tthrow new Error( row + \",\" + col );\r\n\r\n\t\t}\r\n\t\treturn this.modules[ row ][ col ];\r\n\r\n\t}\r\n\r\n\tgetModuleCount() {\r\n\r\n\t\treturn this.moduleCount;\r\n\r\n\t}\r\n\r\n\tmake() {\r\n\r\n\t\tthis.makeImpl( false, this.getBestMaskPattern() );\r\n\r\n\t}\r\n\r\n\tmakeImpl( test, maskPattern ) {\r\n\r\n\t\tthis.moduleCount = this.typeNumber * 4 + 17;\r\n\t\tthis.modules = new Array( this.moduleCount );\r\n\t\tfor ( let row = 0; row < this.moduleCount; row ++ ) {\r\n\r\n\t\t\tthis.modules[ row ] = new Array( this.moduleCount );\r\n\t\t\tfor ( let col = 0; col < this.moduleCount; col ++ ) {\r\n\r\n\t\t\t\tthis.modules[ row ][ col ] = undefined;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\tthis.setupPositionProbePattern( 0, 0 );\r\n\t\tthis.setupPositionProbePattern( this.moduleCount - 7, 0 );\r\n\t\tthis.setupPositionProbePattern( 0, this.moduleCount - 7 );\r\n\t\tthis.setupPositionAdjustPattern();\r\n\t\tthis.setupTimingPattern();\r\n\t\tthis.setupTypeInfo( test, maskPattern );\r\n\t\tif ( this.typeNumber >= 7 ) {\r\n\r\n\t\t\tthis.setupTypeNumber( test );\r\n\r\n\t\t}\r\n\t\tif ( this.dataCache === undefined ) {\r\n\r\n\t\t\tthis.dataCache = QRCodeModel.createData( this.typeNumber, this.errorCorrectLevel,\r\n\t\t\t\tthis.dataList );\r\n\r\n\t\t}\r\n\t\tthis.mapData( this.dataCache, maskPattern );\r\n\r\n\t}\r\n\r\n\tsetupPositionProbePattern( row, col ) {\r\n\r\n\t\tfor ( let r = - 1; r <= 7; r ++ ) {\r\n\r\n\t\t\tif ( row + r <= - 1 || this.moduleCount <= row + r ) continue;\r\n\t\t\tfor ( let c = - 1; c <= 7; c ++ ) {\r\n\r\n\t\t\t\tif ( col + c <= - 1 || this.moduleCount <= col + c ) continue;\r\n\t\t\t\tif ( ( 0 <= r && r <= 6 && ( c === 0 || c === 6 ) ) || ( 0 <= c && c <=\r\n            6 && ( r === 0 || r === 6 ) ) || ( 2 <= r && r <= 4 && 2 <= c &&\r\n            c <= 4 ) ) {\r\n\r\n\t\t\t\t\tthis.modules[ row + r ][ col + c ] = true;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthis.modules[ row + r ][ col + c ] = false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgetBestMaskPattern() {\r\n\r\n\t\tlet minLostPoint = 0;\r\n\t\tlet pattern = 0;\r\n\t\tfor ( let i = 0; i < 8; i ++ ) {\r\n\r\n\t\t\tthis.makeImpl( true, i );\r\n\t\t\tlet lostPoint = QRUtil.getLostPoint( this );\r\n\t\t\tif ( i === 0 || minLostPoint > lostPoint ) {\r\n\r\n\t\t\t\tminLostPoint = lostPoint;\r\n\t\t\t\tpattern = i;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\treturn pattern;\r\n\r\n\t}\r\n\r\n\tcreateMovieClip( target_mc, instance_name, depth ) {\r\n\r\n\t\tlet qr_mc = target_mc.createEmptyMovieClip( instance_name, depth );\r\n\t\tlet cs = 1;\r\n\t\tthis.make();\r\n\t\tfor ( let row = 0; row < this.modules.length; row ++ ) {\r\n\r\n\t\t\tlet y = row * cs;\r\n\t\t\tfor ( let col = 0; col < this.modules[ row ].length; col ++ ) {\r\n\r\n\t\t\t\tlet x = col * cs;\r\n\t\t\t\tlet dark = this.modules[ row ][ col ];\r\n\t\t\t\tif ( dark ) {\r\n\r\n\t\t\t\t\tqr_mc.beginFill( 0, 100 );\r\n\t\t\t\t\tqr_mc.moveTo( x, y );\r\n\t\t\t\t\tqr_mc.lineTo( x + cs, y );\r\n\t\t\t\t\tqr_mc.lineTo( x + cs, y + cs );\r\n\t\t\t\t\tqr_mc.lineTo( x, y + cs );\r\n\t\t\t\t\tqr_mc.endFill();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\treturn qr_mc;\r\n\r\n\t}\r\n\r\n\tsetupTimingPattern() {\r\n\r\n\t\tfor ( let r = 8; r < this.moduleCount - 8; r ++ ) {\r\n\r\n\t\t\tif ( this.modules[ r ][ 6 ] !== undefined ) {\r\n\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t}\r\n\t\t\tthis.modules[ r ][ 6 ] = ( r % 2 === 0 );\r\n\r\n\t\t}\r\n\t\tfor ( let c = 8; c < this.moduleCount - 8; c ++ ) {\r\n\r\n\t\t\tif ( this.modules[ 6 ][ c ] !== undefined ) {\r\n\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t}\r\n\t\t\tthis.modules[ 6 ][ c ] = ( c % 2 === 0 );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tsetupPositionAdjustPattern() {\r\n\r\n\t\tlet pos = QRUtil.getPatternPosition( this.typeNumber );\r\n\t\tfor ( let i = 0; i < pos.length; i ++ ) {\r\n\r\n\t\t\tfor ( let j = 0; j < pos.length; j ++ ) {\r\n\r\n\t\t\t\tlet row = pos[ i ];\r\n\t\t\t\tlet col = pos[ j ];\r\n\t\t\t\tif ( this.modules[ row ][ col ] !== undefined ) {\r\n\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t}\r\n\t\t\t\tfor ( let r = - 2; r <= 2; r ++ ) {\r\n\r\n\t\t\t\t\tfor ( let c = - 2; c <= 2; c ++ ) {\r\n\r\n\t\t\t\t\t\tif ( r === - 2 || r === 2 || c === - 2 || c === 2 || ( r === 0 && c ==\r\n                0 ) ) {\r\n\r\n\t\t\t\t\t\t\tthis.modules[ row + r ][ col + c ] = true;\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tthis.modules[ row + r ][ col + c ] = false;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tsetupTypeNumber( test ) {\r\n\r\n\t\tlet bits = QRUtil.getBCHTypeNumber( this.typeNumber );\r\n\t\tfor ( let i = 0; i < 18; i ++ ) {\r\n\r\n\t\t\tlet mod = ( ! test && ( ( bits >> i ) & 1 ) === 1 );\r\n\t\t\tthis.modules[ Math.floor( i / 3 ) ][ i % 3 + this.moduleCount - 8 - 3 ] =\r\n        mod;\r\n\r\n\t\t}\r\n\t\tfor ( let i = 0; i < 18; i ++ ) {\r\n\r\n\t\t\tlet mod = ( ! test && ( ( bits >> i ) & 1 ) === 1 );\r\n\t\t\tthis.modules[ i % 3 + this.moduleCount - 8 - 3 ][ Math.floor( i / 3 ) ] =\r\n        mod;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tsetupTypeInfo( test, maskPattern ) {\r\n\r\n\t\tlet data = ( this.errorCorrectLevel << 3 ) | maskPattern;\r\n\t\tlet bits = QRUtil.getBCHTypeInfo( data );\r\n\t\tfor ( let i = 0; i < 15; i ++ ) {\r\n\r\n\t\t\tlet mod = ( ! test && ( ( bits >> i ) & 1 ) === 1 );\r\n\t\t\tif ( i < 6 ) {\r\n\r\n\t\t\t\tthis.modules[ i ][ 8 ] = mod;\r\n\r\n\t\t\t} else if ( i < 8 ) {\r\n\r\n\t\t\t\tthis.modules[ i + 1 ][ 8 ] = mod;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.modules[ this.moduleCount - 15 + i ][ 8 ] = mod;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\tfor ( let i = 0; i < 15; i ++ ) {\r\n\r\n\t\t\tlet mod = ( ! test && ( ( bits >> i ) & 1 ) === 1 );\r\n\t\t\tif ( i < 8 ) {\r\n\r\n\t\t\t\tthis.modules[ 8 ][ this.moduleCount - i - 1 ] = mod;\r\n\r\n\t\t\t} else if ( i < 9 ) {\r\n\r\n\t\t\t\tthis.modules[ 8 ][ 15 - i - 1 + 1 ] = mod;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.modules[ 8 ][ 15 - i - 1 ] = mod;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\tthis.modules[ this.moduleCount - 8 ][ 8 ] = ( ! test );\r\n\r\n\t}\r\n\r\n\tmapData( data, maskPattern ) {\r\n\r\n\t\tlet inc = - 1;\r\n\t\tlet row = this.moduleCount - 1;\r\n\t\tlet bitIndex = 7;\r\n\t\tlet byteIndex = 0;\r\n\t\tfor ( let col = this.moduleCount - 1; col > 0; col -= 2 ) {\r\n\r\n\t\t\tif ( col === 6 ) col --;\r\n\t\t\twhile ( true ) {\r\n\r\n\t\t\t\tfor ( let c = 0; c < 2; c ++ ) {\r\n\r\n\t\t\t\t\tif ( this.modules[ row ][ col - c ] === undefined ) {\r\n\r\n\t\t\t\t\t\tlet dark = false;\r\n\t\t\t\t\t\tif ( byteIndex < data.length ) {\r\n\r\n\t\t\t\t\t\t\tdark = ( ( ( data[ byteIndex ] >>> bitIndex ) & 1 ) === 1 );\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tlet mask = QRUtil.getMask( maskPattern, row, col - c );\r\n\t\t\t\t\t\tif ( mask ) {\r\n\r\n\t\t\t\t\t\t\tdark = ! dark;\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.modules[ row ][ col - c ] = dark;\r\n\t\t\t\t\t\tbitIndex --;\r\n\t\t\t\t\t\tif ( bitIndex === - 1 ) {\r\n\r\n\t\t\t\t\t\t\tbyteIndex ++;\r\n\t\t\t\t\t\t\tbitIndex = 7;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t\trow += inc;\r\n\t\t\t\tif ( row < 0 || this.moduleCount <= row ) {\r\n\r\n\t\t\t\t\trow -= inc;\r\n\t\t\t\t\tinc = - inc;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nQRCodeModel.PAD0 = 0xEC;\r\nQRCodeModel.PAD1 = 0x11;\r\nQRCodeModel.createData = function ( typeNumber, errorCorrectLevel, dataList ) {\r\n\r\n\tlet rsBlocks = QRRSBlock.getRSBlocks( typeNumber, errorCorrectLevel );\r\n\tlet buffer = new QRBitBuffer();\r\n\tfor ( let i = 0; i < dataList.length; i ++ ) {\r\n\r\n\t\tlet data = dataList[ i ];\r\n\t\tbuffer.put( data.mode, 4 );\r\n\t\tbuffer.put( data.getLength(), QRUtil.getLengthInBits( data.mode,\r\n\t\t\ttypeNumber ) );\r\n\t\tdata.write( buffer );\r\n\r\n\t}\r\n\tlet totalDataCount = 0;\r\n\tfor ( let i = 0; i < rsBlocks.length; i ++ ) {\r\n\r\n\t\ttotalDataCount += rsBlocks[ i ].dataCount;\r\n\r\n\t}\r\n\tif ( buffer.getLengthInBits() > totalDataCount * 8 ) {\r\n\r\n\t\tthrow new Error( \"code length overflow. (\" +\r\n      buffer.getLengthInBits() +\r\n      \">\" +\r\n      totalDataCount * 8 +\r\n      \")\" );\r\n\r\n\t}\r\n\tif ( buffer.getLengthInBits() + 4 <= totalDataCount * 8 ) {\r\n\r\n\t\tbuffer.put( 0, 4 );\r\n\r\n\t}\r\n\twhile ( buffer.getLengthInBits() % 8 !== 0 ) {\r\n\r\n\t\tbuffer.putBit( false );\r\n\r\n\t}\r\n\twhile ( true ) {\r\n\r\n\t\tif ( buffer.getLengthInBits() >= totalDataCount * 8 ) {\r\n\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\t\tbuffer.put( QRCodeModel.PAD0, 8 );\r\n\t\tif ( buffer.getLengthInBits() >= totalDataCount * 8 ) {\r\n\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\t\tbuffer.put( QRCodeModel.PAD1, 8 );\r\n\r\n\t}\r\n\treturn QRCodeModel.createBytes( buffer, rsBlocks );\r\n\r\n};\r\nQRCodeModel.createBytes = function ( buffer, rsBlocks ) {\r\n\r\n\tlet offset = 0;\r\n\tlet maxDcCount = 0;\r\n\tlet maxEcCount = 0;\r\n\tlet dcdata = new Array( rsBlocks.length );\r\n\tlet ecdata = new Array( rsBlocks.length );\r\n\tfor ( let r = 0; r < rsBlocks.length; r ++ ) {\r\n\r\n\t\tlet dcCount = rsBlocks[ r ].dataCount;\r\n\t\tlet ecCount = rsBlocks[ r ].totalCount - dcCount;\r\n\t\tmaxDcCount = Math.max( maxDcCount, dcCount );\r\n\t\tmaxEcCount = Math.max( maxEcCount, ecCount );\r\n\t\tdcdata[ r ] = new Array( dcCount );\r\n\t\tfor ( let i = 0; i < dcdata[ r ].length; i ++ ) {\r\n\r\n\t\t\tdcdata[ r ][ i ] = 0xff & buffer.buffer[ i + offset ];\r\n\r\n\t\t}\r\n\t\toffset += dcCount;\r\n\t\tlet rsPoly = QRUtil.getErrorCorrectPolynomial( ecCount );\r\n\t\tlet rawPoly = new QRPolynomial( dcdata[ r ], rsPoly.getLength() - 1 );\r\n\t\tlet modPoly = rawPoly.mod( rsPoly );\r\n\t\tecdata[ r ] = new Array( rsPoly.getLength() - 1 );\r\n\t\tfor ( let i = 0; i < ecdata[ r ].length; i ++ ) {\r\n\r\n\t\t\tlet modIndex = i + modPoly.getLength() - ecdata[ r ].length;\r\n\t\t\tecdata[ r ][ i ] = ( modIndex >= 0 ) ? modPoly.get( modIndex ) : 0;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tlet totalCodeCount = 0;\r\n\tfor ( let i = 0; i < rsBlocks.length; i ++ ) {\r\n\r\n\t\ttotalCodeCount += rsBlocks[ i ].totalCount;\r\n\r\n\t}\r\n\tlet data = new Array( totalCodeCount );\r\n\tlet index = 0;\r\n\tfor ( let i = 0; i < maxDcCount; i ++ ) {\r\n\r\n\t\tfor ( let r = 0; r < rsBlocks.length; r ++ ) {\r\n\r\n\t\t\tif ( i < dcdata[ r ].length ) {\r\n\r\n\t\t\t\tdata[ index ++ ] = dcdata[ r ][ i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tfor ( let i = 0; i < maxEcCount; i ++ ) {\r\n\r\n\t\tfor ( let r = 0; r < rsBlocks.length; r ++ ) {\r\n\r\n\t\t\tif ( i < ecdata[ r ].length ) {\r\n\r\n\t\t\t\tdata[ index ++ ] = ecdata[ r ][ i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\treturn data;\r\n\r\n};\r\n\r\nconst QRErrorCorrectLevel = {\r\n\tL: 1,\r\n\tM: 0,\r\n\tQ: 3,\r\n\tH: 2\r\n};\r\nconst QRMaskPattern = {\r\n\tPATTERN000: 0,\r\n\tPATTERN001: 1,\r\n\tPATTERN010: 2,\r\n\tPATTERN011: 3,\r\n\tPATTERN100: 4,\r\n\tPATTERN101: 5,\r\n\tPATTERN110: 6,\r\n\tPATTERN111: 7\r\n};\r\nlet QRUtil = {\r\n\tPATTERN_POSITION_TABLE: [\r\n\t\t[],\r\n\t\t[ 6, 18 ],\r\n\t\t[ 6, 22 ],\r\n\t\t[ 6, 26 ],\r\n\t\t[ 6, 30 ],\r\n\t\t[ 6, 34 ],\r\n\t\t[ 6, 22, 38 ],\r\n\t\t[ 6, 24, 42 ],\r\n\t\t[ 6, 26, 46 ],\r\n\t\t[ 6, 28, 50 ],\r\n\t\t[ 6, 30, 54 ],\r\n\t\t[ 6, 32, 58 ],\r\n\t\t[ 6, 34, 62 ],\r\n\t\t[ 6, 26, 46, 66 ],\r\n\t\t[ 6, 26, 48, 70 ],\r\n\t\t[ 6, 26, 50, 74 ],\r\n\t\t[ 6, 30, 54, 78 ],\r\n\t\t[ 6, 30, 56, 82 ],\r\n\t\t[ 6, 30, 58, 86 ],\r\n\t\t[ 6, 34, 62, 90 ],\r\n\t\t[ 6, 28, 50, 72, 94 ],\r\n\t\t[ 6, 26, 50, 74, 98 ],\r\n\t\t[ 6, 30, 54, 78, 102 ],\r\n\t\t[ 6, 28, 54, 80, 106 ],\r\n\t\t[ 6, 32, 58, 84, 110 ],\r\n\t\t[ 6, 30, 58, 86, 114 ],\r\n\t\t[ 6, 34, 62, 90, 118 ],\r\n\t\t[ 6, 26, 50, 74, 98, 122 ],\r\n\t\t[ 6, 30, 54, 78, 102, 126 ],\r\n\t\t[ 6, 26, 52, 78, 104, 130 ],\r\n\t\t[ 6, 30, 56, 82, 108, 134 ],\r\n\t\t[ 6, 34, 60, 86, 112, 138 ],\r\n\t\t[ 6, 30, 58, 86, 114, 142 ],\r\n\t\t[ 6, 34, 62, 90, 118, 146 ],\r\n\t\t[ 6, 30, 54, 78, 102, 126, 150 ],\r\n\t\t[ 6, 24, 50, 76, 102, 128, 154 ],\r\n\t\t[ 6, 28, 54, 80, 106, 132, 158 ],\r\n\t\t[ 6, 32, 58, 84, 110, 136, 162 ],\r\n\t\t[ 6, 26, 54, 82, 110, 138, 166 ],\r\n\t\t[ 6, 30, 58, 86, 114, 142, 170 ]\r\n\t],\r\n\tG15: ( 1 << 10 ) | ( 1 << 8 ) | ( 1 << 5 ) | ( 1 << 4 ) | ( 1 << 2 ) | ( 1 << 1 ) |\r\n    ( 1 << 0 ),\r\n\tG18: ( 1 << 12 ) | ( 1 << 11 ) | ( 1 << 10 ) | ( 1 << 9 ) | ( 1 << 8 ) | ( 1 << 5 ) |\r\n    ( 1 << 2 ) | ( 1 << 0 ),\r\n\tG15_MASK: ( 1 << 14 ) | ( 1 << 12 ) | ( 1 << 10 ) | ( 1 << 4 ) | ( 1 << 1 ),\r\n\tgetBCHTypeInfo: function ( data ) {\r\n\r\n\t\tlet d = data << 10;\r\n\t\twhile ( QRUtil.getBCHDigit( d ) - QRUtil.getBCHDigit( QRUtil.G15 ) >= 0 ) {\r\n\r\n\t\t\td ^= ( QRUtil.G15 << ( QRUtil.getBCHDigit( d ) - QRUtil.getBCHDigit(\r\n\t\t\t\tQRUtil.G15 ) ) );\r\n\r\n\t\t}\r\n\t\treturn ( ( data << 10 ) | d ) ^ QRUtil.G15_MASK;\r\n\r\n\t},\r\n\tgetBCHTypeNumber: function ( data ) {\r\n\r\n\t\tlet d = data << 12;\r\n\t\twhile ( QRUtil.getBCHDigit( d ) - QRUtil.getBCHDigit( QRUtil.G18 ) >= 0 ) {\r\n\r\n\t\t\td ^= ( QRUtil.G18 << ( QRUtil.getBCHDigit( d ) - QRUtil.getBCHDigit(\r\n\t\t\t\tQRUtil.G18 ) ) );\r\n\r\n\t\t}\r\n\t\treturn ( data << 12 ) | d;\r\n\r\n\t},\r\n\tgetBCHDigit: function ( data ) {\r\n\r\n\t\tlet digit = 0;\r\n\t\twhile ( data !== 0 ) {\r\n\r\n\t\t\tdigit ++;\r\n\t\t\tdata >>>= 1;\r\n\r\n\t\t}\r\n\t\treturn digit;\r\n\r\n\t},\r\n\tgetPatternPosition: function ( typeNumber ) {\r\n\r\n\t\treturn QRUtil.PATTERN_POSITION_TABLE[ typeNumber - 1 ];\r\n\r\n\t},\r\n\tgetMask: function ( maskPattern, i, j ) {\r\n\r\n\t\tswitch ( maskPattern ) {\r\n\r\n\t\t\tcase QRMaskPattern.PATTERN000:\r\n\t\t\t\treturn ( i + j ) % 2 === 0;\r\n\t\t\tcase QRMaskPattern.PATTERN001:\r\n\t\t\t\treturn i % 2 === 0;\r\n\t\t\tcase QRMaskPattern.PATTERN010:\r\n\t\t\t\treturn j % 3 === 0;\r\n\t\t\tcase QRMaskPattern.PATTERN011:\r\n\t\t\t\treturn ( i + j ) % 3 === 0;\r\n\t\t\tcase QRMaskPattern.PATTERN100:\r\n\t\t\t\treturn ( Math.floor( i / 2 ) + Math.floor( j / 3 ) ) % 2 === 0;\r\n\t\t\tcase QRMaskPattern.PATTERN101:\r\n\t\t\t\treturn ( i * j ) % 2 + ( i * j ) % 3 === 0;\r\n\t\t\tcase QRMaskPattern.PATTERN110:\r\n\t\t\t\treturn ( ( i * j ) % 2 + ( i * j ) % 3 ) % 2 === 0;\r\n\t\t\tcase QRMaskPattern.PATTERN111:\r\n\t\t\t\treturn ( ( i * j ) % 3 + ( i + j ) % 2 ) % 2 === 0;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error( \"bad maskPattern:\" + maskPattern );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\tgetErrorCorrectPolynomial: function ( errorCorrectLength ) {\r\n\r\n\t\tlet a = new QRPolynomial( [ 1 ], 0 );\r\n\t\tfor ( let i = 0; i < errorCorrectLength; i ++ ) {\r\n\r\n\t\t\ta = a.multiply( new QRPolynomial( [ 1, QRMath.gexp( i ) ], 0 ) );\r\n\r\n\t\t}\r\n\t\treturn a;\r\n\r\n\t},\r\n\tgetLengthInBits: function ( mode, type ) {\r\n\r\n\t\tif ( 1 <= type && type < 10 ) {\r\n\r\n\t\t\tswitch ( mode ) {\r\n\r\n\t\t\t\tcase QRMode.MODE_NUMBER:\r\n\t\t\t\t\treturn 10;\r\n\t\t\t\tcase QRMode.MODE_ALPHA_NUM:\r\n\t\t\t\t\treturn 9;\r\n\t\t\t\tcase QRMode.MODE_8BIT_BYTE:\r\n\t\t\t\t\treturn 8;\r\n\t\t\t\tcase QRMode.MODE_KANJI:\r\n\t\t\t\t\treturn 8;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthrow new Error( \"mode:\" + mode );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( type < 27 ) {\r\n\r\n\t\t\tswitch ( mode ) {\r\n\r\n\t\t\t\tcase QRMode.MODE_NUMBER:\r\n\t\t\t\t\treturn 12;\r\n\t\t\t\tcase QRMode.MODE_ALPHA_NUM:\r\n\t\t\t\t\treturn 11;\r\n\t\t\t\tcase QRMode.MODE_8BIT_BYTE:\r\n\t\t\t\t\treturn 16;\r\n\t\t\t\tcase QRMode.MODE_KANJI:\r\n\t\t\t\t\treturn 10;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthrow new Error( \"mode:\" + mode );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( type < 41 ) {\r\n\r\n\t\t\tswitch ( mode ) {\r\n\r\n\t\t\t\tcase QRMode.MODE_NUMBER:\r\n\t\t\t\t\treturn 14;\r\n\t\t\t\tcase QRMode.MODE_ALPHA_NUM:\r\n\t\t\t\t\treturn 13;\r\n\t\t\t\tcase QRMode.MODE_8BIT_BYTE:\r\n\t\t\t\t\treturn 16;\r\n\t\t\t\tcase QRMode.MODE_KANJI:\r\n\t\t\t\t\treturn 12;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthrow new Error( \"mode:\" + mode );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthrow new Error( \"type:\" + type );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\tgetLostPoint: function ( qrCode ) {\r\n\r\n\t\tlet moduleCount = qrCode.getModuleCount();\r\n\t\tlet lostPoint = 0;\r\n\t\tfor ( let row = 0; row < moduleCount; row ++ ) {\r\n\r\n\t\t\tfor ( let col = 0; col < moduleCount; col ++ ) {\r\n\r\n\t\t\t\tlet sameCount = 0;\r\n\t\t\t\tlet dark = qrCode.isDark( row, col );\r\n\t\t\t\tfor ( let r = - 1; r <= 1; r ++ ) {\r\n\r\n\t\t\t\t\tif ( row + r < 0 || moduleCount <= row + r ) {\r\n\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfor ( let c = - 1; c <= 1; c ++ ) {\r\n\r\n\t\t\t\t\t\tif ( col + c < 0 || moduleCount <= col + c ) {\r\n\r\n\t\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ( r === 0 && c === 0 ) {\r\n\r\n\t\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ( dark === qrCode.isDark( row + r, col + c ) ) {\r\n\r\n\t\t\t\t\t\t\tsameCount ++;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t\tif ( sameCount > 5 ) {\r\n\r\n\t\t\t\t\tlostPoint += ( 3 + sameCount - 5 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\tfor ( let row = 0; row < moduleCount - 1; row ++ ) {\r\n\r\n\t\t\tfor ( let col = 0; col < moduleCount - 1; col ++ ) {\r\n\r\n\t\t\t\tlet count = 0;\r\n\t\t\t\tif ( qrCode.isDark( row, col ) ) count ++;\r\n\t\t\t\tif ( qrCode.isDark( row + 1, col ) ) count ++;\r\n\t\t\t\tif ( qrCode.isDark( row, col + 1 ) ) count ++;\r\n\t\t\t\tif ( qrCode.isDark( row + 1, col + 1 ) ) count ++;\r\n\t\t\t\tif ( count === 0 || count === 4 ) {\r\n\r\n\t\t\t\t\tlostPoint += 3;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\tfor ( let row = 0; row < moduleCount; row ++ ) {\r\n\r\n\t\t\tfor ( let col = 0; col < moduleCount - 6; col ++ ) {\r\n\r\n\t\t\t\tif ( qrCode.isDark( row, col ) && ! qrCode.isDark( row, col + 1 ) &&\r\n          qrCode.isDark( row, col + 2 ) && qrCode.isDark( row, col + 3 ) &&\r\n          qrCode.isDark( row, col + 4 ) && ! qrCode.isDark( row, col + 5 ) &&\r\n          qrCode.isDark( row, col + 6 ) ) {\r\n\r\n\t\t\t\t\tlostPoint += 40;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\tfor ( let col = 0; col < moduleCount; col ++ ) {\r\n\r\n\t\t\tfor ( let row = 0; row < moduleCount - 6; row ++ ) {\r\n\r\n\t\t\t\tif ( qrCode.isDark( row, col ) && ! qrCode.isDark( row + 1, col ) &&\r\n          qrCode.isDark( row + 2, col ) && qrCode.isDark( row + 3, col ) &&\r\n          qrCode.isDark( row + 4, col ) && ! qrCode.isDark( row + 5, col ) &&\r\n          qrCode.isDark( row + 6, col ) ) {\r\n\r\n\t\t\t\t\tlostPoint += 40;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\tlet darkCount = 0;\r\n\t\tfor ( let col = 0; col < moduleCount; col ++ ) {\r\n\r\n\t\t\tfor ( let row = 0; row < moduleCount; row ++ ) {\r\n\r\n\t\t\t\tif ( qrCode.isDark( row, col ) ) {\r\n\r\n\t\t\t\t\tdarkCount ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\tlet ratio = Math.abs( 100 * darkCount / moduleCount / moduleCount -\r\n      50 ) / 5;\r\n\t\tlostPoint += ratio * 10;\r\n\t\treturn lostPoint;\r\n\r\n\t}\r\n};\r\nlet QRMath = {\r\n\tglog: function ( n ) {\r\n\r\n\t\tif ( n < 1 ) {\r\n\r\n\t\t\tthrow new Error( \"glog(\" + n + \")\" );\r\n\r\n\t\t}\r\n\t\treturn QRMath.LOG_TABLE[ n ];\r\n\r\n\t},\r\n\tgexp: function ( n ) {\r\n\r\n\t\twhile ( n < 0 ) {\r\n\r\n\t\t\tn += 255;\r\n\r\n\t\t}\r\n\t\twhile ( n >= 256 ) {\r\n\r\n\t\t\tn -= 255;\r\n\r\n\t\t}\r\n\t\treturn QRMath.EXP_TABLE[ n ];\r\n\r\n\t},\r\n\tEXP_TABLE: new Array( 256 ),\r\n\tLOG_TABLE: new Array( 256 )\r\n};\r\nfor ( let i = 0; i < 8; i ++ ) {\r\n\r\n\tQRMath.EXP_TABLE[ i ] = 1 << i;\r\n\r\n}\r\nfor ( let i = 8; i < 256; i ++ ) {\r\n\r\n\tQRMath.EXP_TABLE[ i ] = QRMath.EXP_TABLE[ i - 4 ] ^ QRMath.EXP_TABLE[ i - 5 ] ^\r\n    QRMath.EXP_TABLE[ i - 6 ] ^ QRMath.EXP_TABLE[ i - 8 ];\r\n\r\n}\r\nfor ( let i = 0; i < 255; i ++ ) {\r\n\r\n\tQRMath.LOG_TABLE[ QRMath.EXP_TABLE[ i ] ] = i;\r\n\r\n}\r\n\r\nfunction QRPolynomial( num, shift ) {\r\n\r\n\tif ( num.length === undefined ) {\r\n\r\n\t\tthrow new Error( num.length + \"/\" + shift );\r\n\r\n\t}\r\n\tlet offset = 0;\r\n\twhile ( offset < num.length && num[ offset ] === 0 ) {\r\n\r\n\t\toffset ++;\r\n\r\n\t}\r\n\tthis.num = new Array( num.length - offset + shift );\r\n\tfor ( let i = 0; i < num.length - offset; i ++ ) {\r\n\r\n\t\tthis.num[ i ] = num[ i + offset ];\r\n\r\n\t}\r\n\r\n}\r\nQRPolynomial.prototype = {\r\n\tget: function ( index ) {\r\n\r\n\t\treturn this.num[ index ];\r\n\r\n\t},\r\n\tgetLength: function () {\r\n\r\n\t\treturn this.num.length;\r\n\r\n\t},\r\n\tmultiply: function ( e ) {\r\n\r\n\t\tlet num = new Array( this.getLength() + e.getLength() - 1 );\r\n\t\tfor ( let i = 0; i < this.getLength(); i ++ ) {\r\n\r\n\t\t\tfor ( let j = 0; j < e.getLength(); j ++ ) {\r\n\r\n\t\t\t\tnum[ i + j ] ^= QRMath.gexp( QRMath.glog( this.get( i ) ) + QRMath.glog(\r\n\t\t\t\t\te.get( j ) ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\treturn new QRPolynomial( num, 0 );\r\n\r\n\t},\r\n\tmod: function ( e ) {\r\n\r\n\t\tif ( this.getLength() - e.getLength() < 0 ) {\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\t\tlet ratio = QRMath.glog( this.get( 0 ) ) - QRMath.glog( e.get( 0 ) );\r\n\t\tlet num = new Array( this.getLength() );\r\n\t\tfor ( let i = 0; i < this.getLength(); i ++ ) {\r\n\r\n\t\t\tnum[ i ] = this.get( i );\r\n\r\n\t\t}\r\n\t\tfor ( let i = 0; i < e.getLength(); i ++ ) {\r\n\r\n\t\t\tnum[ i ] ^= QRMath.gexp( QRMath.glog( e.get( i ) ) + ratio );\r\n\r\n\t\t}\r\n\t\treturn new QRPolynomial( num, 0 )\r\n\t\t\t.mod( e );\r\n\r\n\t}\r\n};\r\n\r\nfunction QRRSBlock( totalCount, dataCount ) {\r\n\r\n\tthis.totalCount = totalCount;\r\n\tthis.dataCount = dataCount;\r\n\r\n}\r\nQRRSBlock.RS_BLOCK_TABLE = [\r\n\t[ 1, 26, 19 ],\r\n\t[ 1, 26, 16 ],\r\n\t[ 1, 26, 13 ],\r\n\t[ 1, 26, 9 ],\r\n\t[ 1, 44, 34 ],\r\n\t[ 1, 44, 28 ],\r\n\t[ 1, 44, 22 ],\r\n\t[ 1, 44, 16 ],\r\n\t[ 1, 70, 55 ],\r\n\t[ 1, 70, 44 ],\r\n\t[ 2, 35, 17 ],\r\n\t[ 2, 35, 13 ],\r\n\t[ 1, 100, 80 ],\r\n\t[ 2, 50, 32 ],\r\n\t[ 2, 50, 24 ],\r\n\t[ 4, 25, 9 ],\r\n\t[ 1, 134, 108 ],\r\n\t[ 2, 67, 43 ],\r\n\t[ 2, 33, 15, 2, 34, 16 ],\r\n\t[ 2, 33, 11, 2, 34, 12 ],\r\n\t[ 2, 86, 68 ],\r\n\t[ 4, 43, 27 ],\r\n\t[ 4, 43, 19 ],\r\n\t[ 4, 43, 15 ],\r\n\t[ 2, 98, 78 ],\r\n\t[ 4, 49, 31 ],\r\n\t[ 2, 32, 14, 4, 33, 15 ],\r\n\t[ 4, 39, 13, 1, 40, 14 ],\r\n\t[ 2, 121, 97 ],\r\n\t[ 2, 60, 38, 2, 61, 39 ],\r\n\t[ 4, 40, 18, 2, 41, 19 ],\r\n\t[ 4, 40, 14, 2, 41, 15 ],\r\n\t[ 2, 146, 116 ],\r\n\t[ 3, 58, 36, 2, 59, 37 ],\r\n\t[ 4, 36, 16, 4, 37, 17 ],\r\n\t[ 4, 36, 12, 4, 37, 13 ],\r\n\t[ 2, 86, 68, 2, 87, 69 ],\r\n\t[ 4, 69, 43, 1, 70, 44 ],\r\n\t[ 6, 43, 19, 2, 44, 20 ],\r\n\t[ 6, 43, 15, 2, 44, 16 ],\r\n\t[ 4, 101, 81 ],\r\n\t[ 1, 80, 50, 4, 81, 51 ],\r\n\t[ 4, 50, 22, 4, 51, 23 ],\r\n\t[ 3, 36, 12, 8, 37, 13 ],\r\n\t[ 2, 116, 92, 2, 117, 93 ],\r\n\t[ 6, 58, 36, 2, 59, 37 ],\r\n\t[ 4, 46, 20, 6, 47, 21 ],\r\n\t[ 7, 42, 14, 4, 43, 15 ],\r\n\t[ 4, 133, 107 ],\r\n\t[ 8, 59, 37, 1, 60, 38 ],\r\n\t[ 8, 44, 20, 4, 45, 21 ],\r\n\t[ 12, 33, 11, 4, 34, 12 ],\r\n\t[ 3, 145, 115, 1, 146, 116 ],\r\n\t[ 4, 64, 40, 5, 65, 41 ],\r\n\t[ 11, 36, 16, 5, 37, 17 ],\r\n\t[ 11, 36, 12, 5, 37, 13 ],\r\n\t[ 5, 109, 87, 1, 110, 88 ],\r\n\t[ 5, 65, 41, 5, 66, 42 ],\r\n\t[ 5, 54, 24, 7, 55, 25 ],\r\n\t[ 11, 36, 12 ],\r\n\t[ 5, 122, 98, 1, 123, 99 ],\r\n\t[ 7, 73, 45, 3, 74, 46 ],\r\n\t[ 15, 43, 19, 2, 44, 20 ],\r\n\t[ 3, 45, 15, 13, 46, 16 ],\r\n\t[ 1, 135, 107, 5, 136, 108 ],\r\n\t[ 10, 74, 46, 1, 75, 47 ],\r\n\t[ 1, 50, 22, 15, 51, 23 ],\r\n\t[ 2, 42, 14, 17, 43, 15 ],\r\n\t[ 5, 150, 120, 1, 151, 121 ],\r\n\t[ 9, 69, 43, 4, 70, 44 ],\r\n\t[ 17, 50, 22, 1, 51, 23 ],\r\n\t[ 2, 42, 14, 19, 43, 15 ],\r\n\t[ 3, 141, 113, 4, 142, 114 ],\r\n\t[ 3, 70, 44, 11, 71, 45 ],\r\n\t[ 17, 47, 21, 4, 48, 22 ],\r\n\t[ 9, 39, 13, 16, 40, 14 ],\r\n\t[ 3, 135, 107, 5, 136, 108 ],\r\n\t[ 3, 67, 41, 13, 68, 42 ],\r\n\t[ 15, 54, 24, 5, 55, 25 ],\r\n\t[ 15, 43, 15, 10, 44, 16 ],\r\n\t[ 4, 144, 116, 4, 145, 117 ],\r\n\t[ 17, 68, 42 ],\r\n\t[ 17, 50, 22, 6, 51, 23 ],\r\n\t[ 19, 46, 16, 6, 47, 17 ],\r\n\t[ 2, 139, 111, 7, 140, 112 ],\r\n\t[ 17, 74, 46 ],\r\n\t[ 7, 54, 24, 16, 55, 25 ],\r\n\t[ 34, 37, 13 ],\r\n\t[ 4, 151, 121, 5, 152, 122 ],\r\n\t[ 4, 75, 47, 14, 76, 48 ],\r\n\t[ 11, 54, 24, 14, 55, 25 ],\r\n\t[ 16, 45, 15, 14, 46, 16 ],\r\n\t[ 6, 147, 117, 4, 148, 118 ],\r\n\t[ 6, 73, 45, 14, 74, 46 ],\r\n\t[ 11, 54, 24, 16, 55, 25 ],\r\n\t[ 30, 46, 16, 2, 47, 17 ],\r\n\t[ 8, 132, 106, 4, 133, 107 ],\r\n\t[ 8, 75, 47, 13, 76, 48 ],\r\n\t[ 7, 54, 24, 22, 55, 25 ],\r\n\t[ 22, 45, 15, 13, 46, 16 ],\r\n\t[ 10, 142, 114, 2, 143, 115 ],\r\n\t[ 19, 74, 46, 4, 75, 47 ],\r\n\t[ 28, 50, 22, 6, 51, 23 ],\r\n\t[ 33, 46, 16, 4, 47, 17 ],\r\n\t[ 8, 152, 122, 4, 153, 123 ],\r\n\t[ 22, 73, 45, 3, 74, 46 ],\r\n\t[ 8, 53, 23, 26, 54, 24 ],\r\n\t[ 12, 45, 15, 28, 46, 16 ],\r\n\t[ 3, 147, 117, 10, 148, 118 ],\r\n\t[ 3, 73, 45, 23, 74, 46 ],\r\n\t[ 4, 54, 24, 31, 55, 25 ],\r\n\t[ 11, 45, 15, 31, 46, 16 ],\r\n\t[ 7, 146, 116, 7, 147, 117 ],\r\n\t[ 21, 73, 45, 7, 74, 46 ],\r\n\t[ 1, 53, 23, 37, 54, 24 ],\r\n\t[ 19, 45, 15, 26, 46, 16 ],\r\n\t[ 5, 145, 115, 10, 146, 116 ],\r\n\t[ 19, 75, 47, 10, 76, 48 ],\r\n\t[ 15, 54, 24, 25, 55, 25 ],\r\n\t[ 23, 45, 15, 25, 46, 16 ],\r\n\t[ 13, 145, 115, 3, 146, 116 ],\r\n\t[ 2, 74, 46, 29, 75, 47 ],\r\n\t[ 42, 54, 24, 1, 55, 25 ],\r\n\t[ 23, 45, 15, 28, 46, 16 ],\r\n\t[ 17, 145, 115 ],\r\n\t[ 10, 74, 46, 23, 75, 47 ],\r\n\t[ 10, 54, 24, 35, 55, 25 ],\r\n\t[ 19, 45, 15, 35, 46, 16 ],\r\n\t[ 17, 145, 115, 1, 146, 116 ],\r\n\t[ 14, 74, 46, 21, 75, 47 ],\r\n\t[ 29, 54, 24, 19, 55, 25 ],\r\n\t[ 11, 45, 15, 46, 46, 16 ],\r\n\t[ 13, 145, 115, 6, 146, 116 ],\r\n\t[ 14, 74, 46, 23, 75, 47 ],\r\n\t[ 44, 54, 24, 7, 55, 25 ],\r\n\t[ 59, 46, 16, 1, 47, 17 ],\r\n\t[ 12, 151, 121, 7, 152, 122 ],\r\n\t[ 12, 75, 47, 26, 76, 48 ],\r\n\t[ 39, 54, 24, 14, 55, 25 ],\r\n\t[ 22, 45, 15, 41, 46, 16 ],\r\n\t[ 6, 151, 121, 14, 152, 122 ],\r\n\t[ 6, 75, 47, 34, 76, 48 ],\r\n\t[ 46, 54, 24, 10, 55, 25 ],\r\n\t[ 2, 45, 15, 64, 46, 16 ],\r\n\t[ 17, 152, 122, 4, 153, 123 ],\r\n\t[ 29, 74, 46, 14, 75, 47 ],\r\n\t[ 49, 54, 24, 10, 55, 25 ],\r\n\t[ 24, 45, 15, 46, 46, 16 ],\r\n\t[ 4, 152, 122, 18, 153, 123 ],\r\n\t[ 13, 74, 46, 32, 75, 47 ],\r\n\t[ 48, 54, 24, 14, 55, 25 ],\r\n\t[ 42, 45, 15, 32, 46, 16 ],\r\n\t[ 20, 147, 117, 4, 148, 118 ],\r\n\t[ 40, 75, 47, 7, 76, 48 ],\r\n\t[ 43, 54, 24, 22, 55, 25 ],\r\n\t[ 10, 45, 15, 67, 46, 16 ],\r\n\t[ 19, 148, 118, 6, 149, 119 ],\r\n\t[ 18, 75, 47, 31, 76, 48 ],\r\n\t[ 34, 54, 24, 34, 55, 25 ],\r\n\t[ 20, 45, 15, 61, 46, 16 ]\r\n];\r\nQRRSBlock.getRSBlocks = function ( typeNumber, errorCorrectLevel ) {\r\n\r\n\tlet rsBlock = QRRSBlock.getRsBlockTable( typeNumber, errorCorrectLevel );\r\n\tif ( rsBlock === undefined ) {\r\n\r\n\t\tthrow new Error( \"bad rs block @ typeNumber:\" + typeNumber +\r\n      \"/errorCorrectLevel:\" + errorCorrectLevel );\r\n\r\n\t}\r\n\tlet length = rsBlock.length / 3;\r\n\tlet list = [];\r\n\tfor ( let i = 0; i < length; i ++ ) {\r\n\r\n\t\tlet count = rsBlock[ i * 3 + 0 ];\r\n\t\tlet totalCount = rsBlock[ i * 3 + 1 ];\r\n\t\tlet dataCount = rsBlock[ i * 3 + 2 ];\r\n\t\tfor ( let j = 0; j < count; j ++ ) {\r\n\r\n\t\t\tlist.push( new QRRSBlock( totalCount, dataCount ) );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\treturn list;\r\n\r\n};\r\nQRRSBlock.getRsBlockTable = function ( typeNumber, errorCorrectLevel ) {\r\n\r\n\tswitch ( errorCorrectLevel ) {\r\n\r\n\t\tcase QRErrorCorrectLevel.L:\r\n\t\t\treturn QRRSBlock.RS_BLOCK_TABLE[ ( typeNumber - 1 ) * 4 + 0 ];\r\n\t\tcase QRErrorCorrectLevel.M:\r\n\t\t\treturn QRRSBlock.RS_BLOCK_TABLE[ ( typeNumber - 1 ) * 4 + 1 ];\r\n\t\tcase QRErrorCorrectLevel.Q:\r\n\t\t\treturn QRRSBlock.RS_BLOCK_TABLE[ ( typeNumber - 1 ) * 4 + 2 ];\r\n\t\tcase QRErrorCorrectLevel.H:\r\n\t\t\treturn QRRSBlock.RS_BLOCK_TABLE[ ( typeNumber - 1 ) * 4 + 3 ];\r\n\t\tdefault:\r\n\t\t\treturn undefined;\r\n\r\n\t}\r\n\r\n};\r\n\r\nfunction QRBitBuffer() {\r\n\r\n\tthis.buffer = [];\r\n\tthis.length = 0;\r\n\r\n}\r\nQRBitBuffer.prototype = {\r\n\tget: function ( index ) {\r\n\r\n\t\tlet bufIndex = Math.floor( index / 8 );\r\n\t\treturn ( ( this.buffer[ bufIndex ] >>> ( 7 - index % 8 ) ) & 1 ) === 1;\r\n\r\n\t},\r\n\tput: function ( num, length ) {\r\n\r\n\t\tfor ( let i = 0; i < length; i ++ ) {\r\n\r\n\t\t\tthis.putBit( ( ( num >>> ( length - i - 1 ) ) & 1 ) === 1 );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\tgetLengthInBits: function () {\r\n\r\n\t\treturn this.length;\r\n\r\n\t},\r\n\tputBit: function ( bit ) {\r\n\r\n\t\tlet bufIndex = Math.floor( this.length / 8 );\r\n\t\tif ( this.buffer.length <= bufIndex ) {\r\n\r\n\t\t\tthis.buffer.push( 0 );\r\n\r\n\t\t}\r\n\t\tif ( bit ) {\r\n\r\n\t\t\tthis.buffer[ bufIndex ] |= ( 0x80 >>> ( this.length % 8 ) );\r\n\r\n\t\t}\r\n\t\tthis.length ++;\r\n\r\n\t}\r\n};\r\nlet QRCodeLimitLength = [\r\n\t[ 17, 14, 11, 7 ],\r\n\t[ 32, 26, 20, 14 ],\r\n\t[ 53, 42, 32, 24 ],\r\n\t[ 78, 62, 46, 34 ],\r\n\t[ 106, 84, 60, 44 ],\r\n\t[ 134, 106, 74, 58 ],\r\n\t[ 154, 122, 86, 64 ],\r\n\t[ 192, 152, 108, 84 ],\r\n\t[ 230, 180, 130, 98 ],\r\n\t[ 271, 213, 151, 119 ],\r\n\t[ 321, 251, 177, 137 ],\r\n\t[ 367, 287, 203, 155 ],\r\n\t[ 425, 331, 241, 177 ],\r\n\t[ 458, 362, 258, 194 ],\r\n\t[ 520, 412, 292, 220 ],\r\n\t[ 586, 450, 322, 250 ],\r\n\t[ 644, 504, 364, 280 ],\r\n\t[ 718, 560, 394, 310 ],\r\n\t[ 792, 624, 442, 338 ],\r\n\t[ 858, 666, 482, 382 ],\r\n\t[ 929, 711, 509, 403 ],\r\n\t[ 1003, 779, 565, 439 ],\r\n\t[ 1091, 857, 611, 461 ],\r\n\t[ 1171, 911, 661, 511 ],\r\n\t[ 1273, 997, 715, 535 ],\r\n\t[ 1367, 1059, 751, 593 ],\r\n\t[ 1465, 1125, 805, 625 ],\r\n\t[ 1528, 1190, 868, 658 ],\r\n\t[ 1628, 1264, 908, 698 ],\r\n\t[ 1732, 1370, 982, 742 ],\r\n\t[ 1840, 1452, 1030, 790 ],\r\n\t[ 1952, 1538, 1112, 842 ],\r\n\t[ 2068, 1628, 1168, 898 ],\r\n\t[ 2188, 1722, 1228, 958 ],\r\n\t[ 2303, 1809, 1283, 983 ],\r\n\t[ 2431, 1911, 1351, 1051 ],\r\n\t[ 2563, 1989, 1423, 1093 ],\r\n\t[ 2699, 2099, 1499, 1139 ],\r\n\t[ 2809, 2213, 1579, 1219 ],\r\n\t[ 2953, 2331, 1663, 1273 ]\r\n];\r\n\r\n/**\r\n * Get the type by string length\r\n *\r\n * @private\r\n * @param {String} sText\r\n * @param {Number} nCorrectLevel\r\n * @return {Number} type\r\n */\r\nfunction _getTypeNumber( sText, nCorrectLevel ) {\r\n\r\n\tlet nType = 1;\r\n\tlet length = _getUTF8Length( sText );\r\n\r\n\tfor ( let i = 0, len = QRCodeLimitLength.length; i <= len; i ++ ) {\r\n\r\n\t\tlet nLimit = 0;\r\n\r\n\t\tswitch ( nCorrectLevel ) {\r\n\r\n\t\t\tcase QRErrorCorrectLevel.L:\r\n\t\t\t\tnLimit = QRCodeLimitLength[ i ][ 0 ];\r\n\t\t\t\tbreak;\r\n\t\t\tcase QRErrorCorrectLevel.M:\r\n\t\t\t\tnLimit = QRCodeLimitLength[ i ][ 1 ];\r\n\t\t\t\tbreak;\r\n\t\t\tcase QRErrorCorrectLevel.Q:\r\n\t\t\t\tnLimit = QRCodeLimitLength[ i ][ 2 ];\r\n\t\t\t\tbreak;\r\n\t\t\tcase QRErrorCorrectLevel.H:\r\n\t\t\t\tnLimit = QRCodeLimitLength[ i ][ 3 ];\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tnLimit = QRCodeLimitLength[ i ][ 1 ];\r\n\r\n\t\t}\r\n\r\n\t\tif ( length <= nLimit ) {\r\n\r\n\t\t\tbreak;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tnType ++;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tif ( nType > QRCodeLimitLength.length ) {\r\n\r\n\t\tthrow new Error( \"Too long data\" );\r\n\r\n\t}\r\n\r\n\treturn nType;\r\n\r\n}\r\n\r\nfunction _getUTF8Length( sText ) {\r\n\r\n\tlet replacedText = encodeURI( sText )\r\n\t\t.toString()\r\n\t\t.replace( /\\%[0-9a-fA-F]{2}/g, 'a' );\r\n\treturn replacedText.length + ( replacedText.length !== sText ? 3 : 0 );\r\n\r\n}\r\n\r\nlet QRCode = function ( str, correctLevel = QRErrorCorrectLevel.H ) {\r\n\r\n\tthis.correctLevel = correctLevel;\r\n\tif ( str ) {\r\n\r\n\t\tthis.makeCode( str );\r\n\r\n\t}\r\n\r\n};\r\n\r\n/**\r\n * Make the QRCode\r\n *\r\n * @param {String} sText link data\r\n */\r\nQRCode.prototype.makeCode = function ( sText ) {\r\n\r\n\tlet oQRCode = new QRCodeModel( _getTypeNumber( sText, this.correctLevel ),\r\n\t\tthis.correctLevel );\r\n\toQRCode.addData( sText );\r\n\toQRCode.make();\r\n\tthis.size = oQRCode.moduleCount;\r\n\tthis.data = oQRCode.modules;\r\n\r\n};\r\n\r\n/**\r\n * @name QRCode.CorrectLevel\r\n */\r\nQRCode.CorrectLevel = QRErrorCorrectLevel;\r\n\r\nexport {\r\n\tQRCode\r\n};\r\n","import { World } from './World';\r\nimport { ShaderMaterial, OrthographicCamera, PlaneBufferGeometry, Mesh } from \"three\";\r\nimport { defaults } from \"lodash\";\r\n\r\nclass Transitioner {\r\n\r\n\tconstructor( app, world, texture, options = {} ) {\r\n\r\n\t\tthis.options = defaults( options, {\r\n\t\t\t'useTexture': true,\r\n\t\t\t'transition': 0,\r\n\t\t\t'speed': 10,\r\n\t\t\t'texture': 5,\r\n\t\t\t'loopTexture': true,\r\n\t\t\t'isAnimate': true,\r\n\t\t\t'threshold': 0.3\r\n\t\t} );\r\n\t\tthis.app = app;\r\n\t\tthis.targetWorld = world;\r\n\t\tthis.maskTexture = texture;\r\n\t\tthis.material = new ShaderMaterial( {\r\n\t\t\tuniforms: {\r\n\t\t\t\ttDiffuse1: {\r\n\t\t\t\t\tvalue: null\r\n\t\t\t\t},\r\n\t\t\t\ttDiffuse2: {\r\n\t\t\t\t\tvalue: null\r\n\t\t\t\t},\r\n\t\t\t\tmixRatio: {\r\n\t\t\t\t\tvalue: 0.0\r\n\t\t\t\t},\r\n\t\t\t\tthreshold: {\r\n\t\t\t\t\tvalue: 0.1\r\n\t\t\t\t},\r\n\t\t\t\tuseTexture: {\r\n\t\t\t\t\tvalue: 1\r\n\t\t\t\t},\r\n\t\t\t\ttMixTexture: {\r\n\t\t\t\t\tvalue: this.maskTexture\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tvertexShader: `varying vec2 vUv;\r\n        void main() {\r\n        vUv = vec2( uv.x, uv.y );\r\n        gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\r\n        }`,\r\n\t\t\tfragmentShader: `uniform float mixRatio;\r\n        uniform sampler2D tDiffuse1;\r\n        uniform sampler2D tDiffuse2;\r\n        uniform sampler2D tMixTexture;\r\n        uniform int useTexture;\r\n        uniform float threshold;\r\n        varying vec2 vUv;\r\n        \r\n        void main() {\r\n\r\n        vec4 texel1 = texture2D( tDiffuse1, vUv );\r\n        vec4 texel2 = texture2D( tDiffuse2, vUv );\r\n\r\n        if (useTexture==1) {\r\n\r\n        vec4 transitionTexel = texture2D( tMixTexture, vUv );\r\n        float r = mixRatio * (1.0 + threshold * 2.0) - threshold;\r\n        float mixf=clamp((transitionTexel.r - r)*(1.0/threshold), 0.0, 1.0);\r\n\r\n        gl_FragColor = mix( texel1, texel2, mixf );\r\n        } else {\r\n\r\n        gl_FragColor = mix( texel2, texel1, mixRatio );\r\n\r\n        }\r\n        }`\r\n\t\t} );\r\n\t\tlet halfWidth = app.getWorldWidth() / 2;\r\n\t\tlet halfHeight = app.getWorldHeight() / 2;\r\n\t\tthis.world = new World( app, new OrthographicCamera( - halfWidth,\r\n\t\t\thalfWidth, halfHeight, - halfHeight, - 10, 10 ) );\r\n\r\n\t\tlet geometry = new PlaneBufferGeometry( halfWidth * 2,\r\n\t\t\thalfHeight * 2 );\r\n\r\n\t\tlet quad = new Mesh( geometry, this.material );\r\n\t\tthis.world.scene.add( quad );\r\n\r\n\t\tthis.sceneA = world;\r\n\t\tthis.sceneB = app.world;\r\n\r\n\t\tthis.material.uniforms.tDiffuse1.value = this.sceneA.fbo.texture;\r\n\t\tthis.material.uniforms.tDiffuse2.value = this.sceneB.fbo.texture;\r\n\r\n\t\tthis.needChange = false;\r\n\r\n\t}\r\n\r\n\tsetThreshold( value ) {\r\n\r\n\t\tthis.material.uniforms.threshold.value = value;\r\n\r\n\t}\r\n\r\n\tuseTexture( value ) {\r\n\r\n\t\tthis.material.uniforms.useTexture.value = value ? 1 : 0;\r\n\r\n\t}\r\n\r\n\tsetTexture() {\r\n\r\n\t\tthis.material.uniforms.tMixTexture.value = this.texture;\r\n\r\n\t}\r\n\r\n\tupdate() {\r\n\r\n\t\tlet value = Math.min( this.options.transition, 1 );\r\n\t\tvalue = Math.max( value, 0 );\r\n\t\tthis.material.uniforms.mixRatio.value = value;\r\n\t\tthis.app.renderer.setClearColor( this.sceneB.clearColor || 0 );\r\n\t\tthis.sceneB.update();\r\n\t\tthis.app.renderer.render( this.sceneB.scene, this.sceneB.camera, this.sceneB\r\n\t\t\t.fbo, true );\r\n\t\tthis.app.renderer.setClearColor( this.sceneA.clearColor || 0 );\r\n\t\tthis.sceneA.update();\r\n\t\tthis.app.renderer.render( this.sceneA.scene, this.sceneA.camera, this.sceneA\r\n\t\t\t.fbo, true );\r\n\t\tthis.app.renderer.render( this.world.scene, this.world.camera, null, true );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport {\r\n\tTransitioner\r\n};\r\n","import { PerspectiveCamera, WebGLRenderTarget, LinearFilter, RGBFormat } from \"three\";\r\n\r\nclass View {\r\n\r\n\tconstructor( world, camera, {\r\n\t\tclearColor = 0x000000,\r\n\t\ttop = 0,\r\n\t\tleft = 0,\r\n\t\twidth = 1,\r\n\t\theight = 1\r\n\t} ) {\r\n\r\n\t\tthis.world = world;\r\n\t\tthis.scene = world.scene;\r\n\t\tthis.worldWidth = world.app.getWorldWidth();\r\n\t\tthis.worldHeight = world.app.getWorldHeight();\r\n\t\tthis.renderer = world.app.renderer;\r\n\t\tthis.camera = camera || PerspectiveCamera( 45, this.worldWidth /\r\n      this.worldHeight, 0.01, 1000 );\r\n\t\tthis.renderTargetParameters = {\r\n\t\t\tminFilter: LinearFilter,\r\n\t\t\tmagFilter: LinearFilter,\r\n\t\t\tformat: RGBFormat,\r\n\t\t\tstencilBuffer: false\r\n\t\t};\r\n\t\tthis.isRTT = false;\r\n\t\tthis.clearColor = clearColor;\r\n\t\tthis.left = left;\r\n\t\tthis.top = top;\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\r\n\t\tthis.fbo = new WebGLRenderTarget(\r\n\t\t\tthis.worldWidth * this.width,\r\n\t\t\tthis.worldHeight * this.height, this.renderTargetParameters\r\n\t\t);\r\n\r\n\t\tthis.resize();\r\n\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\tvar left = Math.floor( this.worldWidth * this.left );\r\n\t\tvar top = Math.floor( this.worldHeight * this.top );\r\n\t\tvar width = Math.floor( this.worldWidth * this.width );\r\n\t\tvar height = Math.floor( this.worldHeight * this.height );\r\n\t\tthis.renderer.setViewport( left, top, width, height );\r\n\t\tthis.renderer.setScissor( left, top, width, height );\r\n\t\tthis.renderer.setScissorTest( true );\r\n\t\tthis.renderer.setClearColor( this.clearColor );\r\n\t\tthis.renderer.render( this.scene, this.camera );\r\n\r\n\t}\r\n\r\n\tresize() {\r\n\r\n\t\tthis.worldWidth = this.world.app.getWorldWidth();\r\n\t\tthis.worldHeight = this.world.app.getWorldHeight();\r\n\t\tlet width = Math.floor( this.worldWidth * this.width );\r\n\t\tlet height = Math.floor( this.worldHeight * this.height );\r\n\t\tif ( this.camera.type === 'PerspectiveCamera' ) {\r\n\r\n\t\t\tthis.camera.aspect = width / height;\r\n\t\t\tthis.camera.updateProjectionMatrix();\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.camera.left = - width / 2;\r\n\t\t\tthis.camera.right = width / 2;\r\n\t\t\tthis.camera.top = height / 2;\r\n\t\t\tthis.camera.bottom = - height / 2;\r\n\t\t\tthis.camera.updateProjectionMatrix();\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport {\r\n\tView\r\n};\r\n","import { NotFunctionError } from './../error/NotFunctionError';\r\nimport { remove } from \"lodash\";\r\n/**\r\n * 用于事件处理\r\n *\r\n * */\r\nclass Signal {\r\n\r\n\tconstructor( type ) {\r\n\r\n\t\tthis.type = type;\r\n\t\tthis.functionArr = [];\r\n\r\n\t}\r\n\r\n\tadd( func ) {\r\n\r\n\t\tif ( typeof func !== 'function' ) {\r\n\r\n\t\t\tthrow new NotFunctionError();\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.functionArr.push( func );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tremove( func ) {\r\n\r\n\t\treturn remove( this.functionArr, function ( n ) {\r\n\r\n\t\t\treturn n === func;\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\trun( event, intersect ) {\r\n\r\n\t\tthis.functionArr.forEach(\r\n\t\t\t( func ) => {\r\n\r\n\t\t\t\tfunc( event, intersect );\r\n\r\n\t\t\t} );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport {\r\n\tSignal\r\n};\r\n","import { Raycaster, Vector2 } from \"three\";\r\n\r\nclass FBOEventMapper {\r\n\r\n\tconstructor( fboWorld, mesh, faceIndexArr ) {\r\n\r\n\t\tthis.world = fboWorld;\r\n\t\tthis.disable = false;\r\n\t\tthis.isDeep = true;\r\n\t\tthis.receivers = fboWorld.receivers;\r\n\t\tthis.raycaster = new Raycaster();\r\n\t\tthis.mesh = mesh;\r\n\t\tthis.faceIndexArr = faceIndexArr || [];\r\n\r\n\t}\r\n\r\n\tdispatch( event, intersect ) {\r\n\r\n\t\tif ( intersect.object === this.mesh ) {\r\n\r\n\t\t\tif ( this.faceIndexArr && this.faceIndexArr.length === 0 ) {\r\n\r\n\t\t\t\tthis.raycastCheck( event, intersect );\r\n\r\n\t\t\t} else if ( ! this.faceIndexArr ) {\r\n\r\n\t\t\t\tthis.raycastCheck( event, intersect );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( this.faceIndexArr.includes( intersect.faceIndex ) ) {\r\n\r\n\t\t\t\t\tthis.raycastCheck( event, intersect );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\ttoNovaEvent( event ) {\r\n\r\n\t\treturn {\r\n\t\t\tchangedPointers: [ event ],\r\n\t\t\tcenter: new Vector2( event.clientX, event.clientY ),\r\n\t\t\ttype: event.type,\r\n\t\t\ttarget: event.target\r\n\t\t};\r\n\r\n\t}\r\n\r\n\traycastCheck( event, intersect ) {\r\n\r\n\t\tlet uv = intersect.uv;\r\n\t\tlet vec2 = new Vector2( uv.x * 2 - 1, uv.y * 2 - 1 );\r\n\t\tthis.raycaster.setFromCamera( vec2, this.world.camera );\r\n\t\tintersect = undefined;\r\n\r\n\t\tlet intersects = this.raycaster.intersectObjects( this.world.receivers, this.isDeep );\r\n\t\tfor ( let i = 0; i < intersects.length; i ++ ) {\r\n\r\n\t\t\tif ( intersects[ i ].object.isPenetrated ) {\r\n\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tintersect = intersects[ i ];\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( intersect && intersect.object.events && intersect.object.events[ event\r\n\t\t\t.type ] ) {\r\n\r\n\t\t\tintersect.object.events[ event.type ].run( event, intersect );\r\n\r\n\t\t}\r\n\t\treturn intersect;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport {\r\n\tFBOEventMapper\r\n};\r\n","import { Group, Sprite, Vector3, SpriteMaterial, CanvasTexture, LinearFilter, Mesh, MeshBasicMaterial, PlaneBufferGeometry } from \"three\";\r\nimport { defaultsDeep } from \"lodash\";\r\n\r\nclass GUI extends Group {\r\n\r\n\tconstructor() {\r\n\r\n\t\tsuper();\r\n\t\tthis.css = {\r\n\t\t\tbackgroundColor: \"rgba(0,0,0,0)\",\r\n\t\t\topacity: 1,\r\n\t\t\twidth: 1,\r\n\t\t\theight: 1\r\n\t\t};\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass Body extends GUI {\r\n\r\n\tconstructor( world, css ) {\r\n\r\n\t\tsuper();\r\n\t\tthis.world = world;\r\n\t\tthis.distanceFromCamera = 50;\r\n\t\tthis.css = defaultsDeep( css || {}, this.css );\r\n\t\tthis.canvas = document.createElement( \"canvas\" );\r\n\t\tvar spriteMaterial = new SpriteMaterial( {\r\n\t\t\tmap: this.canvas,\r\n\t\t\tcolor: 0xffffff\r\n\t\t} );\r\n\t\tthis.element = new Sprite( spriteMaterial );\r\n\t\tthis.vector = new Vector3();\r\n\t\tthis.update();\r\n\t\tthis.add( this.element );\r\n\r\n\t}\r\n\r\n\tlockToScreen() {\r\n\r\n\t\tvar c = this.world.camera;\r\n\t\tc.getWorldDirection( this.vector );\r\n\t\tthis.rotation.set( c.rotation.x, c.rotation.y, c.rotation.z );\r\n\t\tthis.position.set( c.position.x + this.vector.x * this.distanceFromCamera,\r\n\t\t\tc.position.y +\r\n      this.vector.y * this.distanceFromCamera, c.position.z + this.vector.z *\r\n      this.distanceFromCamera\r\n\t\t);\r\n\r\n\t}\r\n\r\n\tupdate() {\r\n\r\n\t\tthis.canvas.width = this.css.width;\r\n\t\tthis.canvas.height = this.css.height;\r\n\t\tlet ctx = this.canvas.getContext( \"2d\" );\r\n\t\tctx.fillStyle = this.css.backgroundColor;\r\n\t\tctx.fillRect( 0, 0, this.css.width, this.css.height );\r\n\t\tvar texture = new CanvasTexture( this.canvas );\r\n\t\ttexture.generateMipmaps = false;\r\n\t\ttexture.minFilter = LinearFilter;\r\n\t\ttexture.magFilter = LinearFilter;\r\n\t\tvar spriteMaterial = new SpriteMaterial( {\r\n\t\t\tmap: texture,\r\n\t\t\tcolor: 0xffffff\r\n\t\t} );\r\n\t\tthis.element.material.dispose();\r\n\t\tthis.element.material = spriteMaterial;\r\n\t\tthis.element.scale.set( this.css.width / 4, this.css.height / 4, 1 );\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass Div extends GUI {\r\n\r\n\tconstructor( world, css ) {\r\n\r\n\t\tsuper();\r\n\t\tthis.world = world;\r\n\t\tthis.css = defaultsDeep( css || {}, this.css );\r\n\t\tthis.canvas = document.createElement( \"canvas\" );\r\n\t\tvar spriteMaterial = new SpriteMaterial( {\r\n\t\t\tmap: this.canvas,\r\n\t\t\tcolor: 0xffffff\r\n\t\t} );\r\n\t\tthis.element = new Sprite( spriteMaterial );\r\n\t\tthis.vector = new Vector3();\r\n\t\tthis.update();\r\n\t\tthis.add( this.element );\r\n\r\n\t}\r\n\r\n\tupdate() {\r\n\r\n\t\tthis.canvas.width = this.css.width;\r\n\t\tthis.canvas.height = this.css.height;\r\n\t\tlet ctx = this.canvas.getContext( \"2d\" );\r\n\t\tctx.fillStyle = this.css.backgroundColor;\r\n\t\tctx.fillRect( 0, 0, this.css.width, this.css.height );\r\n\t\tvar texture = new CanvasTexture( this.canvas );\r\n\t\ttexture.generateMipmaps = false;\r\n\t\ttexture.minFilter = LinearFilter;\r\n\t\ttexture.magFilter = LinearFilter;\r\n\t\tvar spriteMaterial = new SpriteMaterial( {\r\n\t\t\tmap: texture,\r\n\t\t\tcolor: 0xffffff\r\n\t\t} );\r\n\t\tthis.element.material.dispose();\r\n\t\tthis.element.material = spriteMaterial;\r\n\t\tthis.element.scale.set( this.css.width / 4, this.css.height / 4, 1 );\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass Txt extends Mesh {\r\n\r\n\tconstructor( text, css ) {\r\n\r\n\t\tcss = defaultsDeep( css || {}, {\r\n\t\t\tfontStyle: \"normal\",\r\n\t\t\tfontVariant: \"normal\",\r\n\t\t\tfontSize: 12,\r\n\t\t\tfontWeight: \"normal\",\r\n\t\t\tfontFamily: \"微软雅黑\",\r\n\t\t\tcolor: \"#ffffff\",\r\n\t\t\ttextAlign: \"center\",\r\n\t\t\tbackgroundColor: \"rgba(0,0,0,0)\",\r\n\t\t\topacity: 1,\r\n\t\t\twidth: 1,\r\n\t\t\theight: 1,\r\n\t\t\tscale: {\r\n\t\t\t\tx: 0.25,\r\n\t\t\t\ty: 0.25,\r\n\t\t\t\tz: 1,\r\n\t\t\t}\r\n\t\t} );\r\n\t\tlet canvas = document.createElement( \"canvas\" );\r\n\t\tvar material = new MeshBasicMaterial( {\r\n\t\t\ttransparent: true,\r\n\t\t\tneedsUpdate: false,\r\n\t\t\tcolor: 0xffffff\r\n\t\t} );\r\n\t\tsuper( new PlaneBufferGeometry( css.width / 8, css.height / 8 ),\r\n\t\t\tmaterial );\r\n\t\tthis.text = text;\r\n\t\tthis.canvas = canvas;\r\n\t\tthis.css = css;\r\n\t\tthis.update();\r\n\r\n\t}\r\n\r\n\tupdate() {\r\n\r\n\t\tthis.material.map.dispose();\r\n\t\tthis.canvas.width = this.css.width;\r\n\t\tthis.canvas.height = this.css.height;\r\n\t\tlet ctx = this.canvas.getContext( \"2d\" );\r\n\t\tctx.fillStyle = this.css.backgroundColor;\r\n\t\tctx.fillRect( 0, 0, this.css.width, this.css.height );\r\n\t\tctx.textAlign = this.css.textAlign;\r\n\t\tctx.font = this.css.fontStyle + \" \" + this.css.fontVariant + \" \" + this\r\n\t\t\t.css.fontWeight + \" \" + this.css.fontSize + \"px \" + this.css.fontFamily;\r\n\t\tctx.fillStyle = this.css.color;\r\n\t\t// let width = ctx.measureText( this.text ).width;\r\n\t\tctx.fillText( this.text, this.css.width / 2, this.css.height / 2 + this.css\r\n\t\t\t.fontSize / 4 );\r\n\t\tlet texture = new CanvasTexture( this.canvas );\r\n\t\ttexture.generateMipmaps = false;\r\n\t\ttexture.minFilter = LinearFilter;\r\n\t\ttexture.magFilter = LinearFilter;\r\n\t\tthis.material.map = texture;\r\n\t\tthis.scale.set( this.css.scale.x, this.css.scale.y, this.css.scale.z );\r\n\t\tthis.material.opacity = this.css.opacity;\r\n\r\n\t}\r\n\r\n}\r\n\r\n//$$.Img = function(url, css, callback) {\r\n//$$.DOM.call(this);\r\n//var that = this;\r\n//if ($$.Loader.RESOURCE.textures[url]) {\r\n//  var spriteMaterial = new THREE.SpriteMaterial({\r\n//    map: $$.Loader.RESOURCE.textures[url],\r\n//    color: 0xffffff\r\n//  });\r\n//  var sprite = new THREE.Sprite(spriteMaterial);\r\n//  that.element = sprite;\r\n//  that.add(that.element);\r\n//  this.css = $$.extends({}, [this.css, {\r\n//    width: $$.Loader.RESOURCE.textures[url].image.naturalWidth,\r\n//    height: $$.Loader.RESOURCE.textures[url].image.naturalHeight\r\n//  }, css]);\r\n//  sprite.scale.set(this.css.width / 4, this.css.height / 4, 1);\r\n//  sprite.material.opacity = that.css.opacity;\r\n//  if (callback) {\r\n//    callback();\r\n//  }\r\n//} else {\r\n//  that.element = {};\r\n//  $$.Loader.loadTexture([url], function(texture) {\r\n//    texture.generateMipmaps = false;\r\n//    texture.minFilter = THREE.LinearFilter;\r\n//    texture.magFilter = THREE.LinearFilter;\r\n//    var tmpProperty = that.element;\r\n//    var spriteMaterial = new THREE.SpriteMaterial({\r\n//      map: texture,\r\n//      color: 0xffffff\r\n//    });\r\n//    var sprite = new THREE.Sprite(spriteMaterial);\r\n//    that.element = sprite;\r\n//    that.add(that.element);\r\n//    this.css = $$.extends({}, [this.css, {\r\n//      width: texture.image.naturalWidth,\r\n//      height: texture.image.naturalHeight\r\n//    }, css]);\r\n//    if (css.opacity != null) {\r\n//      that.css.opacity = css.opacity;\r\n//    }\r\n//    sprite.scale.set(this.css.width / 4, this.css.height / 4, 1);\r\n//\r\n//    for (var i in tmpProperty) {\r\n//      that.element[i] = tmpProperty[i];\r\n//    }\r\n//    sprite.material.opacity = that.css.opacity;\r\n//    if (callback) {\r\n//      callback();\r\n//    }\r\n//  });\r\n//}\r\n//};\r\n//(function() {\r\n//var Super = function() {};\r\n//Super.prototype = $$.DOM.prototype;\r\n//$$.Img.prototype = new Super();\r\n//})();\r\n//\r\n//$$.Video = function(url, css) {\r\n//$$.DOM.call(this);\r\n//var that = this;\r\n//this.video = document.createElement(\"video\");\r\n//this.video.src = url;\r\n//var texture = new THREE.VideoTexture(this.video);\r\n//texture.generateMipmaps = false;\r\n//texture.minFilter = THREE.LinearFilter;\r\n//texture.magFilter = THREE.LinearFilter;\r\n//var spriteMaterial = new THREE.SpriteMaterial({\r\n//  map: texture,\r\n//  color: 0xffffff\r\n//});\r\n//var sprite = new THREE.Sprite(spriteMaterial);\r\n//that.element = sprite;\r\n//that.add(that.element);\r\n//this.css = $$.extends({}, [this.css, {\r\n//  width: texture.image.naturalWidth,\r\n//  height: texture.image.naturalHeight,\r\n//}, css]);\r\n//sprite.scale.set(this.css.width / 4, this.css.height / 4, 1);\r\n//};\r\n//(function() {\r\n//var Super = function() {};\r\n//Super.prototype = $$.DOM.prototype;\r\n//$$.Video.prototype = new Super();\r\n//})();\r\n\r\nexport {\r\n\tGUI,\r\n\tBody,\r\n\tTxt,\r\n\tDiv\r\n};\r\n","import { LoadingManager, ImageLoader, TextureLoader, AudioListener } from \"three\";\r\n\r\nclass LoaderFactory {\r\n\r\n\tconstructor() {\r\n\r\n\t\tthis.manager = new LoadingManager();\r\n\t\tthis.Resource = {\r\n\t\t\timages: {},\r\n\t\t\tmaterials: {},\r\n\t\t\ttextures: {},\r\n\t\t\tmodels: {},\r\n\t\t\tsounds: {},\r\n\t\t\tfonts: {},\r\n\t\t\tunloaded: {\r\n\t\t\t\ttextures: [],\r\n\t\t\t\tmodels: [],\r\n\t\t\t\tsounds: [],\r\n\t\t\t\tfonts: [],\r\n\t\t\t\timages: []\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.manager.onStart = ( url, itemsLoaded, itemsTotal ) => {\r\n\r\n\t\t\tif ( this.onStart && typeof this.onStart === 'function' ) {\r\n\r\n\t\t\t\tthis.onStart( url, itemsLoaded, itemsTotal );\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tthis.manager.onLoad = () => {\r\n\r\n\t\t\tif ( this.onLoad && typeof this.onLoad === 'function' ) {\r\n\r\n\t\t\t\tthis.onLoad();\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tthis.manager.onProgress = ( url, itemsLoaded, itemsTotal ) => {\r\n\r\n\t\t\tif ( this.onProgress && typeof this.onProgress === 'function' ) {\r\n\r\n\t\t\t\tthis.onProgress( url, itemsLoaded, itemsTotal );\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tthis.manager.onError = ( url ) => {\r\n\r\n\t\t\tif ( this.onError && typeof this.onError === 'function' ) {\r\n\r\n\t\t\t\tthis.onError( url );\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tthis.imageLoader = new ImageLoader( this.manager );\r\n\t\tthis.textureLoader = new TextureLoader( this.manager );\r\n\t\tthis.audioListener = new AudioListener( this.manager );\r\n\r\n\t}\r\n\r\n\tloadImage( key, src, sucFunc, errFunc ) {\r\n\r\n\t\treturn this.imageLoader.load( src,\r\n\t\t\t( data ) => {\r\n\r\n\t\t\t\tthis.Resource.images[ key ] = data;\r\n\t\t\t\tif ( sucFunc ) sucFunc( data );\r\n\r\n\t\t\t}, undefined, ( err ) => {\r\n\r\n\t\t\t\tthis.Resource.unloaded.images.push( src );\r\n\t\t\t\tif ( errFunc ) errFunc( err );\r\n\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t}\r\n\r\n\tloadTexture( key, src, sucFunc, errFunc ) {\r\n\r\n\t\treturn this.textureLoader.load( src,\r\n\t\t\t( data ) => {\r\n\r\n\t\t\t\tthis.Resource.textures[ key ] = data;\r\n\t\t\t\tif ( sucFunc ) sucFunc( data );\r\n\r\n\t\t\t}, undefined, ( err ) => {\r\n\r\n\t\t\t\tthis.Resource.unloaded.textures.push( src );\r\n\t\t\t\tif ( errFunc ) errFunc( err );\r\n\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport {\r\n\tLoaderFactory\r\n};\r\n","let CopyShader = {\r\n\tuniforms: {\r\n\t\t'tDiffuse': { value: null },\r\n\t\t'opacity': { value: 1.0 }\r\n\t},\r\n\r\n\tvertexShader: `\r\n    varying vec2 vUv;\r\n    void main() {\r\n      vUv = uv;\r\n      gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\r\n    }`,\r\n\r\n\tfragmentShader: `\r\n    uniform float opacity;\r\n    uniform sampler2D tDiffuse;\r\n    varying vec2 vUv;\r\n    void main() {\r\n      vec4 texel = texture2D( tDiffuse, vUv );\r\n      gl_FragColor = opacity * texel;\r\n    }`\r\n};\r\n\r\nexport {\r\n\tCopyShader\r\n};\r\n","class Pass {\r\n\r\n\tconstructor( effectComposer, renderToScreen = false ) {\r\n\r\n\t\t// if set to true, the pass is processed by the composer\r\n\t\tthis.enabled = true;\r\n\t\t// if set to true, the pass indicates to swap read and write buffer after rendering\r\n\t\tthis.needsSwap = true;\r\n\t\t// if set to true, the pass clears its buffer before rendering\r\n\t\tthis.clear = false;\r\n\t\t// if set to true, the result of the pass is rendered to screen\r\n\t\tthis.renderToScreen = renderToScreen;\r\n\t\tif ( effectComposer ) {\r\n\r\n\t\t\teffectComposer.addPass( this );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tsetSize() {} // width, height\r\n\trender() {} // renderer, writeBuffer, readBuffer, delta, maskActive\r\n\r\n}\r\n\r\nexport {\r\n\tPass\r\n};\r\n","import { Pass } from './Pass.js';\r\nimport { UniformsUtils, ShaderMaterial, OrthographicCamera, Scene, Mesh, PlaneBufferGeometry } from \"three\";\r\nclass ShaderPass extends Pass {\r\n\r\n\tconstructor( shader, effectComposer, renderToScreen = false,\r\n\t\ttextureID = \"tDiffuse\" ) {\r\n\r\n\t\tsuper( effectComposer, renderToScreen );\r\n\t\tthis.textureID = textureID;\r\n\r\n\t\tif ( shader instanceof ShaderMaterial ) {\r\n\r\n\t\t\tthis.uniforms = shader.uniforms;\r\n\t\t\tthis.material = shader;\r\n\r\n\t\t} else if ( shader ) {\r\n\r\n\t\t\tthis.uniforms = UniformsUtils.clone( shader.uniforms );\r\n\t\t\tthis.material = new ShaderMaterial( {\r\n\t\t\t\tdefines: shader.defines || {},\r\n\t\t\t\tuniforms: this.uniforms,\r\n\t\t\t\tvertexShader: shader.vertexShader,\r\n\t\t\t\tfragmentShader: shader.fragmentShader\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t\tthis.camera = new OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\r\n\t\tthis.scene = new Scene();\r\n\t\tthis.quad = new Mesh( new PlaneBufferGeometry( 2, 2 ), null );\r\n\t\tthis.quad.frustumCulled = false;\r\n\t\tthis.scene.add( this.quad );\r\n\r\n\t}\r\n\r\n\trender( renderer, writeBuffer, readBuffer ) {\r\n\r\n\t\tif ( this.uniforms[ this.textureID ] ) {\r\n\r\n\t\t\tthis.uniforms[ this.textureID ].value = readBuffer.texture;\r\n\r\n\t\t}\r\n\r\n\t\tthis.quad.material = this.material;\r\n\t\tif ( this.renderToScreen ) {\r\n\r\n\t\t\trenderer.render( this.scene, this.camera );\r\n\r\n\t\t} else {\r\n\r\n\t\t\trenderer.render( this.scene, this.camera, writeBuffer, this.clear );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport {\r\n\tShaderPass\r\n};\r\n","import { Pass } from './Pass.js';\r\n\r\nclass RenderPass extends Pass {\r\n\r\n\tconstructor( scene, camera, overrideMaterial, clearColor, clearAlpha = 0 ) {\r\n\r\n\t\tsuper();\r\n\t\tthis.scene = scene;\r\n\t\tthis.camera = camera;\r\n\t\tthis.overrideMaterial = overrideMaterial;\r\n\t\tthis.clearColor = clearColor;\r\n\t\tthis.clearAlpha = clearAlpha;\r\n\t\tthis.clear = true;\r\n\t\tthis.clearDepth = false;\r\n\t\tthis.needsSwap = false;\r\n\r\n\t}\r\n\r\n\trender( renderer, writeBuffer, readBuffer ) {\r\n\r\n\t\tlet oldAutoClear = renderer.autoClear;\r\n\t\trenderer.autoClear = false;\r\n\t\tthis.scene.overrideMaterial = this.overrideMaterial;\r\n\t\tthis.writeBuffer = writeBuffer;\r\n\t\tlet oldClearColor, oldClearAlpha;\r\n\t\tif ( this.clearColor ) {\r\n\r\n\t\t\toldClearColor = renderer.getClearColor()\r\n\t\t\t\t.getHex();\r\n\t\t\toldClearAlpha = renderer.getClearAlpha();\r\n\t\t\trenderer.setClearColor( this.clearColor, this.clearAlpha );\r\n\r\n\t\t}\r\n\t\tif ( this.clearDepth ) {\r\n\r\n\t\t\trenderer.clearDepth();\r\n\r\n\t\t}\r\n\t\trenderer.render( this.scene, this.camera, this.renderToScreen ? undefined :\r\n\t\t\treadBuffer, this.clear );\r\n\t\tif ( this.clearColor ) {\r\n\r\n\t\t\trenderer.setClearColor( oldClearColor, oldClearAlpha );\r\n\r\n\t\t}\r\n\t\tthis.scene.overrideMaterial = undefined;\r\n\t\trenderer.autoClear = oldAutoClear;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport {\r\n\tRenderPass\r\n};\r\n","import { Pass } from './Pass.js';\r\n\r\nclass MaskPass extends Pass {\r\n\r\n\tconstructor( scene, camera ) {\r\n\r\n\t\tsuper();\r\n\t\tthis.scene = scene;\r\n\t\tthis.camera = camera;\r\n\r\n\t\tthis.clear = true;\r\n\t\tthis.needsSwap = false;\r\n\r\n\t\tthis.inverse = false;\r\n\r\n\t}\r\n\r\n\trender( renderer, writeBuffer, readBuffer ) {\r\n\r\n\t\tvar context = renderer.context;\r\n\t\tvar state = renderer.state;\r\n\r\n\t\t// don't update color or depth\r\n\r\n\t\tstate.buffers.color.setMask( false );\r\n\t\tstate.buffers.depth.setMask( false );\r\n\r\n\t\t// lock buffers\r\n\r\n\t\tstate.buffers.color.setLocked( true );\r\n\t\tstate.buffers.depth.setLocked( true );\r\n\r\n\t\t// set up stencil\r\n\r\n\t\tvar writeValue, clearValue;\r\n\r\n\t\tif ( this.inverse ) {\r\n\r\n\t\t\twriteValue = 0;\r\n\t\t\tclearValue = 1;\r\n\r\n\t\t} else {\r\n\r\n\t\t\twriteValue = 1;\r\n\t\t\tclearValue = 0;\r\n\r\n\t\t}\r\n\r\n\t\tstate.buffers.stencil.setTest( true );\r\n\t\tstate.buffers.stencil.setOp( context.REPLACE, context.REPLACE, context.REPLACE );\r\n\t\tstate.buffers.stencil.setFunc( context.ALWAYS, writeValue, 0xffffffff );\r\n\t\tstate.buffers.stencil.setClear( clearValue );\r\n\r\n\t\t// draw into the stencil buffer\r\n\r\n\t\trenderer.render( this.scene, this.camera, readBuffer, this.clear );\r\n\t\trenderer.render( this.scene, this.camera, writeBuffer, this.clear );\r\n\r\n\t\t// unlock color and depth buffer for subsequent rendering\r\n\r\n\t\tstate.buffers.color.setLocked( false );\r\n\t\tstate.buffers.depth.setLocked( false );\r\n\r\n\t\t// only render where stencil is set to 1\r\n\r\n\t\tstate.buffers.stencil.setFunc( context.EQUAL, 1, 0xffffffff ); // draw if == 1\r\n\t\tstate.buffers.stencil.setOp( context.KEEP, context.KEEP, context.KEEP );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport {\r\n\tMaskPass\r\n};\r\n","import { Pass } from './Pass.js';\r\n\r\nclass ClearMaskPass extends Pass {\r\n\r\n\tconstructor() {\r\n\r\n\t\tsuper();\r\n\t\tthis.needsSwap = false;\r\n\r\n\t}\r\n\r\n\trender( renderer ) {\r\n\r\n\t\trenderer.state.buffers.stencil.setTest( false );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport {\r\n\tClearMaskPass\r\n};\r\n","import { CopyShader } from './shader/CopyShader.js';\r\nimport { ShaderPass } from './ShaderPass.js';\r\nimport { RenderPass } from './RenderPass.js';\r\nimport { MaskPass } from './MaskPass';\r\nimport { ClearMaskPass } from './ClearMaskPass';\r\nimport { defaults } from \"lodash\";\r\nimport { WebGLRenderTarget, LinearFilter, RGBAFormat } from \"three\";\r\n\r\nclass EffectComposer {\r\n\r\n\tconstructor( world, options = {}, renderTarget ) {\r\n\r\n\t\toptions = defaults( options, {\r\n\t\t\trenderer: undefined,\r\n\t\t\tcamera: undefined,\r\n\t\t\tscene: undefined,\r\n\t\t\toverrideMaterial: undefined,\r\n\t\t\tclearColor: undefined,\r\n\t\t\tclearAlpha: 0\r\n\t\t} );\r\n\t\tthis.renderer = options.renderer || world.app.renderer;\r\n\t\tif ( renderTarget === undefined ) {\r\n\r\n\t\t\tlet parameters = {\r\n\t\t\t\tminFilter: LinearFilter,\r\n\t\t\t\tmagFilter: LinearFilter,\r\n\t\t\t\tformat: RGBAFormat,\r\n\t\t\t\tstencilBuffer: false\r\n\t\t\t};\r\n\t\t\tlet size = this.renderer.getDrawingBufferSize();\r\n\t\t\trenderTarget = new WebGLRenderTarget( size.width, size.height,\r\n\t\t\t\tparameters );\r\n\t\t\trenderTarget.texture.name = 'EffectComposer.rt1';\r\n\r\n\t\t}\r\n\r\n\t\tthis.renderTarget1 = renderTarget;\r\n\t\tthis.renderTarget2 = renderTarget.clone();\r\n\t\tthis.renderTarget2.texture.name = 'EffectComposer.rt2';\r\n\t\tthis.writeBuffer = this.renderTarget1;\r\n\t\tthis.readBuffer = this.renderTarget2;\r\n\r\n\t\tthis.passes = [];\r\n\t\tthis.copyPass = new ShaderPass( CopyShader );\r\n\r\n\t\tthis.addPass( new RenderPass( options.scene || world.scene,\r\n\t\t\toptions.scene || world.camera ) );\r\n\r\n\t}\r\n\r\n\tswapBuffers() {\r\n\r\n\t\tlet tmp = this.readBuffer;\r\n\t\tthis.readBuffer = this.writeBuffer;\r\n\t\tthis.writeBuffer = tmp;\r\n\r\n\t}\r\n\r\n\taddPass( pass ) {\r\n\r\n\t\tthis.passes.push( pass );\r\n\t\tlet size = this.renderer.getDrawingBufferSize();\r\n\t\tpass.setSize( size.width, size.height );\r\n\r\n\t}\r\n\r\n\tinsertPass( pass, index ) {\r\n\r\n\t\tthis.passes.splice( index, 0, pass );\r\n\r\n\t}\r\n\r\n\trender( delta ) {\r\n\r\n\t\tlet maskActive = false;\r\n\t\tlet pass, i, il = this.passes.length;\r\n\t\tfor ( i = 0; i < il; i ++ ) {\r\n\r\n\t\t\tpass = this.passes[ i ];\r\n\t\t\tif ( pass.enabled === false ) continue;\r\n\t\t\tpass.render( this.renderer, this.writeBuffer, this.readBuffer, delta,\r\n\t\t\t\tmaskActive );\r\n\r\n\t\t\tif ( pass.needsSwap ) {\r\n\r\n\t\t\t\tif ( maskActive ) {\r\n\r\n\t\t\t\t\tlet context = this.renderer.context;\r\n\t\t\t\t\tcontext.stencilFunc( context.NOTEQUAL, 1, 0xffffffff );\r\n\t\t\t\t\tthis.copyPass.render( this.renderer, this.writeBuffer, this.readBuffer,\r\n\t\t\t\t\t\tdelta );\r\n\t\t\t\t\tcontext.stencilFunc( context.EQUAL, 1, 0xffffffff );\r\n\r\n\t\t\t\t}\r\n\t\t\t\tthis.swapBuffers();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( MaskPass !== undefined ) {\r\n\r\n\t\t\t\tif ( pass instanceof MaskPass ) {\r\n\r\n\t\t\t\t\tmaskActive = true;\r\n\r\n\t\t\t\t} else if ( pass instanceof ClearMaskPass ) {\r\n\r\n\t\t\t\t\tmaskActive = false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treset( renderTarget ) {\r\n\r\n\t\tif ( renderTarget === undefined ) {\r\n\r\n\t\t\tlet size = this.renderer.getDrawingBufferSize();\r\n\t\t\trenderTarget = this.renderTarget1.clone();\r\n\t\t\trenderTarget.setSize( size.width, size.height );\r\n\r\n\t\t}\r\n\t\tthis.renderTarget1.dispose();\r\n\t\tthis.renderTarget2.dispose();\r\n\t\tthis.renderTarget1 = renderTarget;\r\n\t\tthis.renderTarget2 = renderTarget.clone();\r\n\t\tthis.writeBuffer = this.renderTarget1;\r\n\t\tthis.readBuffer = this.renderTarget2;\r\n\r\n\t}\r\n\r\n\tsetSize( width, height ) {\r\n\r\n\t\tthis.renderTarget1.setSize( width, height );\r\n\t\tthis.renderTarget2.setSize( width, height );\r\n\t\tfor ( let i = 0; i < this.passes.length; i ++ ) {\r\n\r\n\t\t\tthis.passes[ i ].setSize( width, height );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport {\r\n\tEffectComposer\r\n};\r\n","let AfterimageShader = {\r\n\tuniforms: {\r\n\t\t\"damp\": { value: 0.96 },\r\n\t\t\"tOld\": { value: null },\r\n\t\t\"tNew\": { value: null }\r\n\t},\r\n\r\n\tvertexShader: `\r\n    varying vec2 vUv;\r\n    void main() {\r\n      vUv = uv;\r\n      gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\r\n    }`,\r\n\r\n\tfragmentShader: `\r\n    uniform sampler2D tOld;\r\n    uniform sampler2D tNew;\r\n    uniform float damp;\r\n\r\n    varying vec2 vUv;\r\n\r\n    vec4 when_gt( vec4 texel, float y ) {\r\n      return max( sign( texel - y ), 0. );\r\n    }\r\n\r\n    void main() {\r\n      vec4 texelOld = texture2D( tOld, vUv );\r\n      vec4 texelNew = texture2D( tNew, vUv );\r\n\r\n      texelOld *= damp * when_gt( texelOld, 0.1 );\r\n\r\n      gl_FragColor = max( texelNew, texelOld );\r\n    }`\r\n};\r\n\r\nexport {\r\n\tAfterimageShader\r\n};\r\n","import { Pass } from './Pass.js';\r\nimport { AfterimageShader } from './shader/AfterimageShader.js';\r\nimport { WebGLRenderTarget, LinearFilter, NearestFilter, RGBAFormat, UniformsUtils, Scene, OrthographicCamera, PlaneBufferGeometry, Mesh, MeshBasicMaterial, ShaderMaterial } from \"three\";\r\n\r\nclass AfterimagePass extends Pass {\r\n\r\n\tconstructor( damp = 0.96, effectComposer, renderToScreen = false ) {\r\n\r\n\t\tsuper( effectComposer, renderToScreen );\r\n\t\tthis.uniforms = UniformsUtils.clone( AfterimageShader.uniforms );\r\n\t\tthis.uniforms[ \"damp\" ].value = damp;\r\n\r\n\t\tthis.textureComp = new WebGLRenderTarget( window.innerWidth, window.innerHeight, {\r\n\t\t\tminFilter: LinearFilter,\r\n\t\t\tmagFilter: NearestFilter,\r\n\t\t\tformat: RGBAFormat\r\n\t\t} );\r\n\r\n\t\tthis.textureOld = new WebGLRenderTarget( window.innerWidth, window.innerHeight, {\r\n\t\t\tminFilter: LinearFilter,\r\n\t\t\tmagFilter: NearestFilter,\r\n\t\t\tformat: RGBAFormat\r\n\t\t} );\r\n\r\n\t\tthis.shaderMaterial = new ShaderMaterial( {\r\n\t\t\tuniforms: this.uniforms,\r\n\t\t\tvertexShader: AfterimageShader.vertexShader,\r\n\t\t\tfragmentShader: AfterimageShader.fragmentShader\r\n\t\t} );\r\n\r\n\t\tthis.sceneComp = new Scene();\r\n\t\tthis.sceneScreen = new Scene();\r\n\r\n\t\tthis.camera = new OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\r\n\t\tthis.camera.position.z = 1;\r\n\t\tvar geometry = new PlaneBufferGeometry( 2, 2 );\r\n\r\n\t\tthis.quadComp = new Mesh( geometry, this.shaderMaterial );\r\n\t\tthis.sceneComp.add( this.quadComp );\r\n\r\n\t\tlet material = new MeshBasicMaterial( { map: this.textureComp.texture } );\r\n\t\tvar quadScreen = new Mesh( geometry, material );\r\n\t\tthis.sceneScreen.add( quadScreen );\r\n\r\n\t}\r\n\r\n\trender( renderer, writeBuffer, readBuffer ) {\r\n\r\n\t\tthis.uniforms[ \"tOld\" ].value = this.textureOld.texture;\r\n\t\tthis.uniforms[ \"tNew\" ].value = readBuffer.texture;\r\n\t\tthis.quadComp.material = this.shaderMaterial;\r\n\r\n\t\trenderer.render( this.sceneComp, this.camera, this.textureComp );\r\n\t\trenderer.render( this.sceneScreen, this.camera, this.textureOld );\r\n\t\tif ( this.renderToScreen ) {\r\n\r\n\t\t\trenderer.render( this.sceneScreen, this.camera );\r\n\r\n\t\t} else {\r\n\r\n\t\t\trenderer.render( this.sceneScreen, this.camera, writeBuffer, this.clear );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport {\r\n\tAfterimagePass\r\n};\r\n","import { Vector2 } from \"three\";\r\n\r\nlet DotScreenShader = {\r\n\tuniforms: {\r\n\t\t\"tDiffuse\": { value: null },\r\n\t\t\"tSize\": { value: new Vector2( 256, 256 ) },\r\n\t\t\"center\": { value: new Vector2( 0.5, 0.5 ) },\r\n\t\t\"angle\": { value: 1.57 },\r\n\t\t\"scale\": { value: 1.0 }\r\n\t},\r\n\r\n\tvertexShader: [\r\n\t\t\"varying vec2 vUv;\",\r\n\t\t\"void main() {\",\r\n\t\t\"vUv = uv;\",\r\n\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\r\n\t\t\"}\"\r\n\t].join( \"\\n\" ),\r\n\r\n\tfragmentShader: [\r\n\t\t\"uniform vec2 center;\",\r\n\t\t\"uniform float angle;\",\r\n\t\t\"uniform float scale;\",\r\n\t\t\"uniform vec2 tSize;\",\r\n\t\t\"uniform sampler2D tDiffuse;\",\r\n\t\t\"varying vec2 vUv;\",\r\n\t\t\"float pattern() {\",\r\n\t\t\"float s = sin( angle ), c = cos( angle );\",\r\n\t\t\"vec2 tex = vUv * tSize - center;\",\r\n\t\t\"vec2 point = vec2( c * tex.x - s * tex.y, s * tex.x + c * tex.y ) * scale;\",\r\n\t\t\"return ( sin( point.x ) * sin( point.y ) ) * 4.0;\",\r\n\t\t\"}\",\r\n\r\n\t\t\"void main() {\",\r\n\t\t\"vec4 color = texture2D( tDiffuse, vUv );\",\r\n\t\t\"float average = ( color.r + color.g + color.b ) / 3.0;\",\r\n\t\t\"gl_FragColor = vec4( vec3( average * 10.0 - 5.0 + pattern() ), color.a );\",\r\n\t\t\"}\"\r\n\t].join( \"\\n\" )\r\n};\r\n\r\nexport {\r\n\tDotScreenShader\r\n};\r\n","import { Pass } from './Pass.js';\r\nimport { DotScreenShader } from './shader/DotScreenShader.js';\r\nimport { Scene, OrthographicCamera, PlaneBufferGeometry, Mesh, ShaderMaterial, UniformsUtils } from \"three\";\r\n\r\nclass DotScreenPass extends Pass {\r\n\r\n\tconstructor( center, angle, scale, effectComposer, renderToScreen = false ) {\r\n\r\n\t\tsuper( effectComposer, renderToScreen );\r\n\t\tthis.uniforms = UniformsUtils.clone( DotScreenShader.uniforms );\r\n\t\tif ( center !== undefined ) this.uniforms[ \"center\" ].value.copy( center );\r\n\t\tif ( angle !== undefined ) this.uniforms[ \"angle\" ].value = angle;\r\n\t\tif ( scale !== undefined ) this.uniforms[ \"scale\" ].value = scale;\r\n\r\n\t\tthis.material = new ShaderMaterial( {\r\n\t\t\tuniforms: this.uniforms,\r\n\t\t\tvertexShader: DotScreenShader.vertexShader,\r\n\t\t\tfragmentShader: DotScreenShader.fragmentShader\r\n\t\t} );\r\n\r\n\t\tthis.camera = new OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\r\n\t\tthis.scene = new Scene();\r\n\t\tthis.quad = new Mesh( new PlaneBufferGeometry( 2, 2 ), undefined );\r\n\t\tthis.quad.frustumCulled = false; // Avoid getting clipped\r\n\t\tthis.scene.add( this.quad );\r\n\r\n\t}\r\n\r\n\trender( renderer, writeBuffer, readBuffer ) {\r\n\r\n\t\tthis.uniforms[ \"tDiffuse\" ].value = readBuffer.texture;\r\n\t\tthis.uniforms[ \"tSize\" ].value.set( readBuffer.width, readBuffer.height );\r\n\r\n\t\tthis.quad.material = this.material;\r\n\r\n\t\tif ( this.renderToScreen ) {\r\n\r\n\t\t\trenderer.render( this.scene, this.camera );\r\n\r\n\t\t} else {\r\n\r\n\t\t\trenderer.render( this.scene, this.camera, writeBuffer, this.clear );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport {\r\n\tDotScreenPass\r\n};\r\n","let GlitchShader = {\r\n\tuniforms: {\r\n\t\t\"tDiffuse\": { value: null }, //diffuse texture\r\n\t\t\"tDisp\": { value: null }, //displacement texture for digital glitch squares\r\n\t\t\"byp\": { value: 0 }, //apply the glitch ?\r\n\t\t\"amount\": { value: 0.08 },\r\n\t\t\"angle\": { value: 0.02 },\r\n\t\t\"seed\": { value: 0.02 },\r\n\t\t\"seed_x\": { value: 0.02 }, //-1,1\r\n\t\t\"seed_y\": { value: 0.02 }, //-1,1\r\n\t\t\"distortion_x\": { value: 0.5 },\r\n\t\t\"distortion_y\": { value: 0.6 },\r\n\t\t\"col_s\": { value: 0.05 }\r\n\t},\r\n\r\n\tvertexShader: [\r\n\t\t\"varying vec2 vUv;\",\r\n\t\t\"void main() {\",\r\n\t\t\"vUv = uv;\",\r\n\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\r\n\t\t\"}\"\r\n\t].join( \"\\n\" ),\r\n\r\n\tfragmentShader: [\r\n\t\t\"uniform int byp;\", //should we apply the glitch ?\r\n\t\t\"uniform sampler2D tDiffuse;\",\r\n\t\t\"uniform sampler2D tDisp;\",\r\n\r\n\t\t\"uniform float amount;\",\r\n\t\t\"uniform float angle;\",\r\n\t\t\"uniform float seed;\",\r\n\t\t\"uniform float seed_x;\",\r\n\t\t\"uniform float seed_y;\",\r\n\t\t\"uniform float distortion_x;\",\r\n\t\t\"uniform float distortion_y;\",\r\n\t\t\"uniform float col_s;\",\r\n\r\n\t\t\"varying vec2 vUv;\",\r\n\r\n\t\t\"float rand(vec2 co){\",\r\n\t\t\"return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\",\r\n\t\t\"}\",\r\n\r\n\t\t\"void main() {\",\r\n\t\t\"if(byp<1) {\",\r\n\t\t\"vec2 p = vUv;\",\r\n\t\t\"float xs = floor(gl_FragCoord.x / 0.5);\",\r\n\t\t\"float ys = floor(gl_FragCoord.y / 0.5);\",\r\n\t\t//based on staffantans glitch shader for unity https://github.com/staffantan/unityglitch\r\n\t\t\"vec4 normal = texture2D (tDisp, p*seed*seed);\",\r\n\t\t\"if(p.y<distortion_x+col_s && p.y>distortion_x-col_s*seed) {\",\r\n\t\t\"if(seed_x>0.){\",\r\n\t\t\"p.y = 1. - (p.y + distortion_y);\",\r\n\t\t\"}\",\r\n\t\t\"else {\",\r\n\t\t\"p.y = distortion_y;\",\r\n\t\t\"}\",\r\n\t\t\"}\",\r\n\t\t\"if(p.x<distortion_y+col_s && p.x>distortion_y-col_s*seed) {\",\r\n\t\t\"if(seed_y>0.){\",\r\n\t\t\"p.x=distortion_x;\",\r\n\t\t\"}\",\r\n\t\t\"else {\",\r\n\t\t\"p.x = 1. - (p.x + distortion_x);\",\r\n\t\t\"}\",\r\n\t\t\"}\",\r\n\t\t\"p.x+=normal.x*seed_x*(seed/5.);\",\r\n\t\t\"p.y+=normal.y*seed_y*(seed/5.);\",\r\n\t\t//base from RGB shift shader\r\n\t\t\"vec2 offset = amount * vec2( cos(angle), sin(angle));\",\r\n\t\t\"vec4 cr = texture2D(tDiffuse, p + offset);\",\r\n\t\t\"vec4 cga = texture2D(tDiffuse, p);\",\r\n\t\t\"vec4 cb = texture2D(tDiffuse, p - offset);\",\r\n\t\t\"gl_FragColor = vec4(cr.r, cga.g, cb.b, cga.a);\",\r\n\t\t//add noise\r\n\t\t\"vec4 snow = 200.*amount*vec4(rand(vec2(xs * seed,ys * seed*50.))*0.2);\",\r\n\t\t\"gl_FragColor = gl_FragColor+ snow;\",\r\n\t\t\"}\",\r\n\t\t\"else {\",\r\n\t\t\"gl_FragColor=texture2D (tDiffuse, vUv);\",\r\n\t\t\"}\",\r\n\t\t\"}\"\r\n\t].join( \"\\n\" )\r\n};\r\n\r\nexport {\r\n\tGlitchShader\r\n};\r\n","import { Pass } from './Pass.js';\r\nimport { GlitchShader } from './shader/GlitchShader.js';\r\nimport { FloatType, RGBFormat, DataTexture, UniformsUtils, Scene, OrthographicCamera, PlaneBufferGeometry, Mesh, ShaderMaterial, Math as THREEMath } from \"three\";\r\n\r\nclass GlitchPass extends Pass {\r\n\r\n\tconstructor( size = 64, goWild = false, effectComposer, renderToScreen = false ) {\r\n\r\n\t\tsuper( effectComposer, renderToScreen );\r\n\t\tthis.uniforms = UniformsUtils.clone( GlitchShader.uniforms );\r\n\t\tthis.uniforms[ \"tDisp\" ].value = this.generateHeightmap( size );\r\n\r\n\t\tthis.material = new ShaderMaterial( {\r\n\t\t\tuniforms: this.uniforms,\r\n\t\t\tvertexShader: GlitchShader.vertexShader,\r\n\t\t\tfragmentShader: GlitchShader.fragmentShader\r\n\t\t} );\r\n\r\n\t\tthis.camera = new OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\r\n\t\tthis.scene = new Scene();\r\n\r\n\t\tthis.quad = new Mesh( new PlaneBufferGeometry( 2, 2 ), null );\r\n\t\tthis.quad.frustumCulled = false;\r\n\t\tthis.scene.add( this.quad );\r\n\r\n\t\tthis.goWild = goWild;\r\n\t\tthis.curF = 0;\r\n\t\tthis.generateTrigger();\r\n\r\n\t}\r\n\r\n\trender( renderer, writeBuffer, readBuffer ) {\r\n\r\n\t\tthis.uniforms[ \"tDiffuse\" ].value = readBuffer.texture;\r\n\t\tthis.uniforms[ 'seed' ].value = Math.random();\r\n\t\tthis.uniforms[ 'byp' ].value = 0;\r\n\r\n\t\tif ( this.curF % this.randX === 0 || this.goWild === true ) {\r\n\r\n\t\t\tthis.uniforms[ 'amount' ].value = Math.random() / 30;\r\n\t\t\tthis.uniforms[ 'angle' ].value = THREEMath.randFloat( - Math.PI, Math.PI );\r\n\t\t\tthis.uniforms[ 'seed_x' ].value = THREEMath.randFloat( - 1, 1 );\r\n\t\t\tthis.uniforms[ 'seed_y' ].value = THREEMath.randFloat( - 1, 1 );\r\n\t\t\tthis.uniforms[ 'distortion_x' ].value = THREEMath.randFloat( 0, 1 );\r\n\t\t\tthis.uniforms[ 'distortion_y' ].value = THREEMath.randFloat( 0, 1 );\r\n\t\t\tthis.curF = 0;\r\n\t\t\tthis.generateTrigger();\r\n\r\n\t\t} else if ( this.curF % this.randX < this.randX / 5 ) {\r\n\r\n\t\t\tthis.uniforms[ 'amount' ].value = Math.random() / 90;\r\n\t\t\tthis.uniforms[ 'angle' ].value = THREEMath.randFloat( - Math.PI, Math.PI );\r\n\t\t\tthis.uniforms[ 'distortion_x' ].value = THREEMath.randFloat( 0, 1 );\r\n\t\t\tthis.uniforms[ 'distortion_y' ].value = THREEMath.randFloat( 0, 1 );\r\n\t\t\tthis.uniforms[ 'seed_x' ].value = THREEMath.randFloat( - 0.3, 0.3 );\r\n\t\t\tthis.uniforms[ 'seed_y' ].value = THREEMath.randFloat( - 0.3, 0.3 );\r\n\r\n\t\t} else if ( this.goWild === false ) {\r\n\r\n\t\t\tthis.uniforms[ 'byp' ].value = 1;\r\n\r\n\t\t}\r\n\r\n\t\tthis.curF ++;\r\n\t\tthis.quad.material = this.material;\r\n\r\n\t\tif ( this.renderToScreen ) {\r\n\r\n\t\t\trenderer.render( this.scene, this.camera );\r\n\r\n\t\t} else {\r\n\r\n\t\t\trenderer.render( this.scene, this.camera, writeBuffer, this.clear );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgenerateTrigger() {\r\n\r\n\t\tthis.randX = THREEMath.randInt( 120, 240 );\r\n\r\n\t}\r\n\r\n\tgenerateHeightmap( size ) {\r\n\r\n\t\tlet dataArr = new Float32Array( size * size * 3 );\r\n\t\tlet length = size * size;\r\n\r\n\t\tfor ( let i = 0; i < length; i ++ ) {\r\n\r\n\t\t\tlet val = THREEMath.randFloat( 0, 1 );\r\n\t\t\tdataArr[ i * 3 + 0 ] = val;\r\n\t\t\tdataArr[ i * 3 + 1 ] = val;\r\n\t\t\tdataArr[ i * 3 + 2 ] = val;\r\n\r\n\t\t}\r\n\r\n\t\tlet texture = new DataTexture( dataArr, size, size, RGBFormat, FloatType );\r\n\t\ttexture.needsUpdate = true;\r\n\t\treturn texture;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport {\r\n\tGlitchPass\r\n};\r\n","import { Pass } from \"./Pass.js\";\r\nimport { CopyShader } from \"./shader/CopyShader.js\";\r\nimport { AdditiveBlending, PlaneBufferGeometry, Vector3, ShaderMaterial, Mesh, Matrix4, Vector2, Color, MeshBasicMaterial, WebGLRenderTarget, MeshDepthMaterial, LinearFilter, RGBAFormat, DoubleSide, RGBADepthPacking, NoBlending, UniformsUtils, OrthographicCamera, Scene, Sprite, Line } from \"three\";\r\n\r\nclass OutlinePass extends Pass {\r\n\r\n\tconstructor( resolution, world, selectedObjects = [], effectComposer ) {\r\n\r\n\t\tsuper( undefined, false );\r\n\t\tthis.BlurDirectionX = new Vector2( 1.0, 0.0 );\r\n\t\tthis.BlurDirectionY = new Vector2( 0.0, 1.0 );\r\n\t\tthis.renderScene = world.scene;\r\n\t\tthis.renderCamera = world.camera;\r\n\t\tthis.selectedObjects = selectedObjects;\r\n\t\tthis.visibleEdgeColor = new Color( 1, 1, 1 );\r\n\t\tthis.hiddenEdgeColor = new Color( 0.1, 0.04, 0.02 );\r\n\t\tthis.edgeGlow = 0.0;\r\n\t\tthis.usePatternTexture = false;\r\n\t\tthis.edgeThickness = 1.0;\r\n\t\tthis.edgeStrength = 3.0;\r\n\t\tthis.downSampleRatio = 2;\r\n\t\tthis.pulsePeriod = 0;\r\n\r\n\t\tthis.resolution = ( resolution !== undefined ) ? new Vector2(\r\n\t\t\tresolution.x, resolution.y ) : new Vector2( 256, 256 );\r\n\r\n\t\tlet pars = {\r\n\t\t\tminFilter: LinearFilter,\r\n\t\t\tmagFilter: LinearFilter,\r\n\t\t\tformat: RGBAFormat\r\n\t\t};\r\n\r\n\t\tlet resx = Math.round( this.resolution.x / this.downSampleRatio );\r\n\t\tlet resy = Math.round( this.resolution.y / this.downSampleRatio );\r\n\r\n\t\tthis.maskBufferMaterial = new MeshBasicMaterial( { color: 0xffffff } );\r\n\t\tthis.maskBufferMaterial.side = DoubleSide;\r\n\t\tthis.renderTargetMaskBuffer = new WebGLRenderTarget(\r\n\t\t\tthis.resolution.x, this.resolution.y, pars );\r\n\t\tthis.renderTargetMaskBuffer.texture.name = \"OutlinePass.mask\";\r\n\t\tthis.renderTargetMaskBuffer.texture.generateMipmaps = false;\r\n\r\n\t\tthis.depthMaterial = new MeshDepthMaterial();\r\n\t\tthis.depthMaterial.side = DoubleSide;\r\n\t\tthis.depthMaterial.depthPacking = RGBADepthPacking;\r\n\t\tthis.depthMaterial.blending = NoBlending;\r\n\r\n\t\tthis.prepareMaskMaterial = this.getPrepareMaskMaterial();\r\n\t\tthis.prepareMaskMaterial.side = DoubleSide;\r\n\t\tthis.prepareMaskMaterial.fragmentShader = replaceDepthToViewZ( this.prepareMaskMaterial\r\n\t\t\t.fragmentShader, this.renderCamera );\r\n\r\n\t\tthis.renderTargetDepthBuffer = new WebGLRenderTarget( this.resolution\r\n\t\t\t.x,\r\n\t\tthis.resolution.y, pars );\r\n\t\tthis.renderTargetDepthBuffer.texture.name = \"OutlinePass.depth\";\r\n\t\tthis.renderTargetDepthBuffer.texture.generateMipmaps = false;\r\n\r\n\t\tthis.renderTargetMaskDownSampleBuffer = new WebGLRenderTarget( resx,\r\n\t\t\tresy, pars );\r\n\t\tthis.renderTargetMaskDownSampleBuffer.texture.name =\r\n\t\t\t\"OutlinePass.depthDownSample\";\r\n\t\tthis.renderTargetMaskDownSampleBuffer.texture.generateMipmaps = false;\r\n\r\n\t\tthis.renderTargetBlurBuffer1 = new WebGLRenderTarget( resx, resy,\r\n\t\t\tpars );\r\n\t\tthis.renderTargetBlurBuffer1.texture.name = \"OutlinePass.blur1\";\r\n\t\tthis.renderTargetBlurBuffer1.texture.generateMipmaps = false;\r\n\t\tthis.renderTargetBlurBuffer2 = new WebGLRenderTarget( Math.round(\r\n\t\t\tresx / 2 ), Math.round( resy / 2 ), pars );\r\n\t\tthis.renderTargetBlurBuffer2.texture.name = \"OutlinePass.blur2\";\r\n\t\tthis.renderTargetBlurBuffer2.texture.generateMipmaps = false;\r\n\r\n\t\tthis.edgeDetectionMaterial = this.getEdgeDetectionMaterial();\r\n\t\tthis.renderTargetEdgeBuffer1 = new WebGLRenderTarget( resx, resy,\r\n\t\t\tpars );\r\n\t\tthis.renderTargetEdgeBuffer1.texture.name = \"OutlinePass.edge1\";\r\n\t\tthis.renderTargetEdgeBuffer1.texture.generateMipmaps = false;\r\n\t\tthis.renderTargetEdgeBuffer2 = new WebGLRenderTarget( Math.round(\r\n\t\t\tresx /\r\n\t\t\t2 ), Math.round( resy / 2 ), pars );\r\n\t\tthis.renderTargetEdgeBuffer2.texture.name = \"OutlinePass.edge2\";\r\n\t\tthis.renderTargetEdgeBuffer2.texture.generateMipmaps = false;\r\n\r\n\t\tlet MAX_EDGE_THICKNESS = 4;\r\n\t\tlet MAX_EDGE_GLOW = 4;\r\n\r\n\t\tthis.separableBlurMaterial1 = this.getSeperableBlurMaterial(\r\n\t\t\tMAX_EDGE_THICKNESS );\r\n\t\tthis.separableBlurMaterial1.uniforms[ \"texSize\" ].value = new Vector2(\r\n\t\t\tresx, resy );\r\n\t\tthis.separableBlurMaterial1.uniforms[ \"kernelRadius\" ].value = 1;\r\n\t\tthis.separableBlurMaterial2 = this.getSeperableBlurMaterial( MAX_EDGE_GLOW );\r\n\t\tthis.separableBlurMaterial2.uniforms[ \"texSize\" ].value = new Vector2(\r\n\t\t\tMath.round( resx / 2 ), Math.round( resy / 2 ) );\r\n\t\tthis.separableBlurMaterial2.uniforms[ \"kernelRadius\" ].value =\r\n\t\t\tMAX_EDGE_GLOW;\r\n\r\n\t\t// Overlay material\r\n\t\tthis.overlayMaterial = this.getOverlayMaterial();\r\n\r\n\t\tthis.copyUniforms = UniformsUtils.clone( CopyShader.uniforms );\r\n\t\tthis.copyUniforms[ \"opacity\" ].value = 1.0;\r\n\r\n\t\tthis.materialCopy = new ShaderMaterial( {\r\n\t\t\tuniforms: this.copyUniforms,\r\n\t\t\tvertexShader: CopyShader.vertexShader,\r\n\t\t\tfragmentShader: CopyShader.fragmentShader,\r\n\t\t\tblending: NoBlending,\r\n\t\t\tdepthTest: false,\r\n\t\t\tdepthWrite: false,\r\n\t\t\ttransparent: true\r\n\t\t} );\r\n\r\n\t\tthis.enabled = true;\r\n\t\tthis.needsSwap = false;\r\n\r\n\t\tthis.oldClearColor = new Color();\r\n\t\tthis.oldClearAlpha = 1;\r\n\r\n\t\tthis.camera = new OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\r\n\t\tthis.scene = new Scene();\r\n\r\n\t\tthis.quad = new Mesh( new PlaneBufferGeometry( 2, 2 ), null );\r\n\t\tthis.quad.frustumCulled = false; // Avoid getting clipped\r\n\t\tthis.scene.add( this.quad );\r\n\r\n\t\tthis.tempPulseColor1 = new Color();\r\n\t\tthis.tempPulseColor2 = new Color();\r\n\t\tthis.textureMatrix = new Matrix4();\r\n\r\n\t\tfunction replaceDepthToViewZ( string, camera ) {\r\n\r\n\t\t\tlet type = camera.isPerspectiveCamera ? \"perspective\" : \"orthographic\";\r\n\t\t\treturn string.replace( /DEPTH_TO_VIEW_Z/g, type + \"DepthToViewZ\" );\r\n\r\n\t\t}\r\n\r\n\t\tif ( effectComposer ) {\r\n\r\n\t\t\teffectComposer.addPass( this );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\r\n\t\tthis.renderTargetMaskBuffer.dispose();\r\n\t\tthis.renderTargetDepthBuffer.dispose();\r\n\t\tthis.renderTargetMaskDownSampleBuffer.dispose();\r\n\t\tthis.renderTargetBlurBuffer1.dispose();\r\n\t\tthis.renderTargetBlurBuffer2.dispose();\r\n\t\tthis.renderTargetEdgeBuffer1.dispose();\r\n\t\tthis.renderTargetEdgeBuffer2.dispose();\r\n\r\n\t}\r\n\r\n\tsetSize( width, height ) {\r\n\r\n\t\tthis.renderTargetMaskBuffer.setSize( width, height );\r\n\r\n\t\tlet resx = Math.round( width / this.downSampleRatio );\r\n\t\tlet resy = Math.round( height / this.downSampleRatio );\r\n\t\tthis.renderTargetMaskDownSampleBuffer.setSize( resx, resy );\r\n\t\tthis.renderTargetBlurBuffer1.setSize( resx, resy );\r\n\t\tthis.renderTargetEdgeBuffer1.setSize( resx, resy );\r\n\t\tthis.separableBlurMaterial1.uniforms[ \"texSize\" ].value = new Vector2(\r\n\t\t\tresx, resy );\r\n\r\n\t\tresx = Math.round( resx / 2 );\r\n\t\tresy = Math.round( resy / 2 );\r\n\r\n\t\tthis.renderTargetBlurBuffer2.setSize( resx, resy );\r\n\t\tthis.renderTargetEdgeBuffer2.setSize( resx, resy );\r\n\r\n\t\tthis.separableBlurMaterial2.uniforms[ \"texSize\" ].value = new Vector2(\r\n\t\t\tresx, resy );\r\n\r\n\t}\r\n\r\n\tchangeVisibilityOfSelectedObjects( bVisible ) {\r\n\r\n\t\tfunction gatherSelectedMeshesCallBack( object ) {\r\n\r\n\t\t\tif ( object instanceof Mesh ) object.visible = bVisible;\r\n\r\n\t\t}\r\n\r\n\t\tfor ( let i = 0; i < this.selectedObjects.length; i ++ ) {\r\n\r\n\t\t\tlet selectedObject = this.selectedObjects[ i ];\r\n\t\t\tselectedObject.traverse( gatherSelectedMeshesCallBack );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tchangeVisibilityOfNonSelectedObjects( bVisible ) {\r\n\r\n\t\tlet selectedMeshes = [];\r\n\r\n\t\tfunction gatherSelectedMeshesCallBack( object ) {\r\n\r\n\t\t\tif ( object instanceof Mesh ) selectedMeshes.push( object );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( let i = 0; i < this.selectedObjects.length; i ++ ) {\r\n\r\n\t\t\tlet selectedObject = this.selectedObjects[ i ];\r\n\t\t\tselectedObject.traverse( gatherSelectedMeshesCallBack );\r\n\r\n\t\t}\r\n\r\n\t\tfunction VisibilityChangeCallBack( object ) {\r\n\r\n\t\t\tif ( object instanceof Mesh || object instanceof Line ||\r\n\t\t\t\tobject instanceof Sprite ) {\r\n\r\n\t\t\t\tlet bFound = false;\r\n\r\n\t\t\t\tfor ( let i = 0; i < selectedMeshes.length; i ++ ) {\r\n\r\n\t\t\t\t\tlet selectedObjectId = selectedMeshes[ i ].id;\r\n\t\t\t\t\tif ( selectedObjectId === object.id ) {\r\n\r\n\t\t\t\t\t\tbFound = true;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( ! bFound ) {\r\n\r\n\t\t\t\t\tlet visibility = object.visible;\r\n\t\t\t\t\tif ( ! bVisible || object.bVisible ) object.visible = bVisible;\r\n\t\t\t\t\tobject.bVisible = visibility;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.renderScene.traverse( VisibilityChangeCallBack );\r\n\r\n\t}\r\n\r\n\tupdateTextureMatrix() {\r\n\r\n\t\tthis.textureMatrix.set( 0.5, 0.0, 0.0, 0.5,\r\n\t\t\t0.0, 0.5, 0.0, 0.5,\r\n\t\t\t0.0, 0.0, 0.5, 0.5,\r\n\t\t\t0.0, 0.0, 0.0, 1.0 );\r\n\t\tthis.textureMatrix.multiply( this.renderCamera.projectionMatrix );\r\n\t\tthis.textureMatrix.multiply( this.renderCamera.matrixWorldInverse );\r\n\r\n\t}\r\n\r\n\trender( renderer, writeBuffer, readBuffer, delta, maskActive ) {\r\n\r\n\t\tif ( this.selectedObjects.length === 0 ) return;\r\n\r\n\t\tthis.oldClearColor.copy( renderer.getClearColor() );\r\n\t\tthis.oldClearAlpha = renderer.getClearAlpha();\r\n\t\tlet oldAutoClear = renderer.autoClear;\r\n\r\n\t\trenderer.autoClear = false;\r\n\r\n\t\tif ( maskActive ) renderer.context.disable( renderer.context.STENCIL_TEST );\r\n\r\n\t\trenderer.setClearColor( 0xffffff, 1 );\r\n\r\n\t\t// Make selected objects invisible\r\n\t\tthis.changeVisibilityOfSelectedObjects( false );\r\n\r\n\t\tlet currentBackground = this.renderScene.background;\r\n\t\tthis.renderScene.background = null;\r\n\r\n\t\t// 1. Draw Non Selected objects in the depth buffer\r\n\t\tthis.renderScene.overrideMaterial = this.depthMaterial;\r\n\t\trenderer.render( this.renderScene, this.renderCamera, this.renderTargetDepthBuffer,\r\n\t\t\ttrue );\r\n\r\n\t\t// Make selected objects visible\r\n\t\tthis.changeVisibilityOfSelectedObjects( true );\r\n\r\n\t\t// Update Texture Matrix for Depth compare\r\n\t\tthis.updateTextureMatrix();\r\n\r\n\t\t// Make non selected objects invisible, and draw only the selected objects, by comparing the depth buffer of non selected objects\r\n\t\tthis.changeVisibilityOfNonSelectedObjects( false );\r\n\t\tthis.renderScene.overrideMaterial = this.prepareMaskMaterial;\r\n\t\tthis.prepareMaskMaterial.uniforms[ \"cameraNearFar\" ].value = new Vector2(\r\n\t\t\tthis.renderCamera.near, this.renderCamera.far );\r\n\t\tthis.prepareMaskMaterial.uniforms[ \"depthTexture\" ].value = this.renderTargetDepthBuffer\r\n\t\t\t.texture;\r\n\t\tthis.prepareMaskMaterial.uniforms[ \"textureMatrix\" ].value = this.textureMatrix;\r\n\t\trenderer.render( this.renderScene, this.renderCamera, this.renderTargetMaskBuffer,\r\n\t\t\ttrue );\r\n\t\tthis.renderScene.overrideMaterial = null;\r\n\t\tthis.changeVisibilityOfNonSelectedObjects( true );\r\n\r\n\t\tthis.renderScene.background = currentBackground;\r\n\r\n\t\t// 2. Downsample to Half resolution\r\n\t\tthis.quad.material = this.materialCopy;\r\n\t\tthis.copyUniforms[ \"tDiffuse\" ].value = this.renderTargetMaskBuffer.texture;\r\n\t\trenderer.render( this.scene, this.camera, this.renderTargetMaskDownSampleBuffer,\r\n\t\t\ttrue );\r\n\r\n\t\tthis.tempPulseColor1.copy( this.visibleEdgeColor );\r\n\t\tthis.tempPulseColor2.copy( this.hiddenEdgeColor );\r\n\r\n\t\tif ( this.pulsePeriod > 0 ) {\r\n\r\n\t\t\tlet scalar = ( 1 + 0.25 ) / 2 + Math.cos( performance.now() * 0.01 /\r\n\t\t\t\tthis.pulsePeriod ) * ( 1.0 - 0.25 ) / 2;\r\n\t\t\tthis.tempPulseColor1.multiplyScalar( scalar );\r\n\t\t\tthis.tempPulseColor2.multiplyScalar( scalar );\r\n\r\n\t\t}\r\n\r\n\t\t// 3. Apply Edge Detection Pass\r\n\t\tthis.quad.material = this.edgeDetectionMaterial;\r\n\t\tthis.edgeDetectionMaterial.uniforms[ \"maskTexture\" ].value = this.renderTargetMaskDownSampleBuffer\r\n\t\t\t.texture;\r\n\t\tthis.edgeDetectionMaterial.uniforms[ \"texSize\" ].value = new Vector2(\r\n\t\t\tthis.renderTargetMaskDownSampleBuffer.width, this.renderTargetMaskDownSampleBuffer\r\n\t\t\t\t.height );\r\n\t\tthis.edgeDetectionMaterial.uniforms[ \"visibleEdgeColor\" ].value = this.tempPulseColor1;\r\n\t\tthis.edgeDetectionMaterial.uniforms[ \"hiddenEdgeColor\" ].value = this.tempPulseColor2;\r\n\t\trenderer.render( this.scene, this.camera, this.renderTargetEdgeBuffer1,\r\n\t\t\ttrue );\r\n\r\n\t\t// 4. Apply Blur on Half res\r\n\t\tthis.quad.material = this.separableBlurMaterial1;\r\n\t\tthis.separableBlurMaterial1.uniforms[ \"colorTexture\" ].value = this.renderTargetEdgeBuffer1\r\n\t\t\t.texture;\r\n\t\tthis.separableBlurMaterial1.uniforms[ \"direction\" ].value = this.BlurDirectionX;\r\n\t\tthis.separableBlurMaterial1.uniforms[ \"kernelRadius\" ].value = this.edgeThickness;\r\n\t\trenderer.render( this.scene, this.camera, this.renderTargetBlurBuffer1,\r\n\t\t\ttrue );\r\n\t\tthis.separableBlurMaterial1.uniforms[ \"colorTexture\" ].value = this.renderTargetBlurBuffer1\r\n\t\t\t.texture;\r\n\t\tthis.separableBlurMaterial1.uniforms[ \"direction\" ].value = this\r\n\t\t\t.BlurDirectionY;\r\n\t\trenderer.render( this.scene, this.camera, this.renderTargetEdgeBuffer1,\r\n\t\t\ttrue );\r\n\r\n\t\t// Apply Blur on quarter res\r\n\t\tthis.quad.material = this.separableBlurMaterial2;\r\n\t\tthis.separableBlurMaterial2.uniforms[ \"colorTexture\" ].value = this.renderTargetEdgeBuffer1.texture;\r\n\t\tthis.separableBlurMaterial2.uniforms[ \"direction\" ].value = this.BlurDirectionX;\r\n\t\trenderer.render( this.scene, this.camera, this.renderTargetBlurBuffer2, true );\r\n\t\tthis.separableBlurMaterial2.uniforms[ \"colorTexture\" ].value = this.renderTargetBlurBuffer2.texture;\r\n\t\tthis.separableBlurMaterial2.uniforms[ \"direction\" ].value = this.BlurDirectionY;\r\n\t\trenderer.render( this.scene, this.camera, this.renderTargetEdgeBuffer2, true );\r\n\r\n\t\t// Blend it additively over the input texture\r\n\t\tthis.quad.material = this.overlayMaterial;\r\n\t\tthis.overlayMaterial.uniforms[ \"maskTexture\" ].value = this.renderTargetMaskBuffer\r\n\t\t\t.texture;\r\n\t\tthis.overlayMaterial.uniforms[ \"edgeTexture1\" ].value = this.renderTargetEdgeBuffer1\r\n\t\t\t.texture;\r\n\t\tthis.overlayMaterial.uniforms[ \"edgeTexture2\" ].value = this.renderTargetEdgeBuffer2\r\n\t\t\t.texture;\r\n\t\tthis.overlayMaterial.uniforms[ \"patternTexture\" ].value = this.patternTexture;\r\n\t\tthis.overlayMaterial.uniforms[ \"edgeStrength\" ].value = this.edgeStrength;\r\n\t\tthis.overlayMaterial.uniforms[ \"edgeGlow\" ].value = this.edgeGlow;\r\n\t\tthis.overlayMaterial.uniforms[ \"usePatternTexture\" ].value = this.usePatternTexture;\r\n\r\n\t\tif ( maskActive ) renderer.context.enable( renderer.context.STENCIL_TEST );\r\n\r\n\t\trenderer.render( this.scene, this.camera, readBuffer, false );\r\n\r\n\t\trenderer.setClearColor( this.oldClearColor, this.oldClearAlpha );\r\n\t\trenderer.autoClear = oldAutoClear;\r\n\r\n\t}\r\n\r\n\tgetPrepareMaskMaterial() {\r\n\r\n\t\treturn new ShaderMaterial( {\r\n\t\t\tuniforms: {\r\n\t\t\t\t\"depthTexture\": { value: null },\r\n\t\t\t\t\"cameraNearFar\": { value: new Vector2( 0.5, 0.5 ) },\r\n\t\t\t\t\"textureMatrix\": { value: new Matrix4() }\r\n\t\t\t},\r\n\r\n\t\t\tvertexShader: [\r\n\t\t\t\t'varying vec4 projTexCoord;',\r\n\t\t\t\t'varying vec4 vPosition;',\r\n\t\t\t\t'uniform mat4 textureMatrix;',\r\n\r\n\t\t\t\t'void main() {',\r\n\r\n\t\t\t\t'\tvPosition = modelViewMatrix * vec4( position, 1.0 );',\r\n\t\t\t\t'\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );',\r\n\t\t\t\t'\tprojTexCoord = textureMatrix * worldPosition;',\r\n\t\t\t\t'\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\r\n\r\n\t\t\t\t'}'\r\n\t\t\t].join( '\\n' ),\r\n\r\n\t\t\tfragmentShader: [\r\n\t\t\t\t'#include <packing>',\r\n\t\t\t\t'varying vec4 vPosition;',\r\n\t\t\t\t'varying vec4 projTexCoord;',\r\n\t\t\t\t'uniform sampler2D depthTexture;',\r\n\t\t\t\t'uniform vec2 cameraNearFar;',\r\n\r\n\t\t\t\t'void main() {',\r\n\r\n\t\t\t\t'\tfloat depth = unpackRGBAToDepth(texture2DProj( depthTexture, projTexCoord ));',\r\n\t\t\t\t'\tfloat viewZ = - DEPTH_TO_VIEW_Z( depth, cameraNearFar.x, cameraNearFar.y );',\r\n\t\t\t\t'\tfloat depthTest = (-vPosition.z > viewZ) ? 1.0 : 0.0;',\r\n\t\t\t\t'\tgl_FragColor = vec4(0.0, depthTest, 1.0, 1.0);',\r\n\r\n\t\t\t\t'}'\r\n\t\t\t].join( '\\n' )\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\tgetEdgeDetectionMaterial() {\r\n\r\n\t\treturn new ShaderMaterial( {\r\n\t\t\tuniforms: {\r\n\t\t\t\t\"maskTexture\": { value: null },\r\n\t\t\t\t\"texSize\": { value: new Vector2( 0.5, 0.5 ) },\r\n\t\t\t\t\"visibleEdgeColor\": { value: new Vector3( 1.0, 1.0, 1.0 ) },\r\n\t\t\t\t\"hiddenEdgeColor\": { value: new Vector3( 1.0, 1.0, 1.0 ) },\r\n\t\t\t},\r\n\r\n\t\t\tvertexShader: `varying vec2 vUv;\r\n\t\t\t\tvoid main() {\r\n\t\t\t\t\tvUv = uv;\r\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\r\n\t\t\t\t}`,\r\n\r\n\t\t\tfragmentShader: `varying vec2 vUv;\r\n\t\t\t\tuniform sampler2D maskTexture;\r\n\t\t\t\tuniform vec2 texSize;\r\n\t\t\t\tuniform vec3 visibleEdgeColor;\r\n\t\t\t\tuniform vec3 hiddenEdgeColor;\r\n\r\n\t\t\t\tvoid main() {\r\n\t\t\t\t\tvec2 invSize = 1.0 / texSize;\r\n\t\t\t\t\tvec4 uvOffset = vec4(1.0, 0.0, 0.0, 1.0) * vec4(invSize, invSize);\r\n\t\t\t\t\tvec4 c1 = texture2D( maskTexture, vUv + uvOffset.xy);\r\n\t\t\t\t\tvec4 c2 = texture2D( maskTexture, vUv - uvOffset.xy);\r\n\t\t\t\t\tvec4 c3 = texture2D( maskTexture, vUv + uvOffset.yw);\r\n\t\t\t\t\tvec4 c4 = texture2D( maskTexture, vUv - uvOffset.yw);\r\n\t\t\t\t\tfloat diff1 = (c1.r - c2.r)*0.5;\r\n\t\t\t\t\tfloat diff2 = (c3.r - c4.r)*0.5;\r\n\t\t\t\t\tfloat d = length( vec2(diff1, diff2) );\r\n\t\t\t\t\tfloat a1 = min(c1.g, c2.g);\r\n\t\t\t\t\tfloat a2 = min(c3.g, c4.g);\r\n\t\t\t\t\tfloat visibilityFactor = min(a1, a2);\r\n\t\t\t\t\tvec3 edgeColor = 1.0 - visibilityFactor > 0.001 ? visibleEdgeColor : hiddenEdgeColor;\r\n\t\t\t\t\tgl_FragColor = vec4(edgeColor, 1.0) * vec4(d);\r\n\t\t\t\t}`\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\tgetSeperableBlurMaterial( maxRadius ) {\r\n\r\n\t\treturn new ShaderMaterial( {\r\n\t\t\tdefines: {\r\n\t\t\t\t\"MAX_RADIUS\": maxRadius,\r\n\t\t\t},\r\n\r\n\t\t\tuniforms: {\r\n\t\t\t\t\"colorTexture\": { value: null },\r\n\t\t\t\t\"texSize\": { value: new Vector2( 0.5, 0.5 ) },\r\n\t\t\t\t\"direction\": { value: new Vector2( 0.5, 0.5 ) },\r\n\t\t\t\t\"kernelRadius\": { value: 1.0 }\r\n\t\t\t},\r\n\r\n\t\t\tvertexShader: `varying vec2 vUv;\r\n\t\t\t\tvoid main() {\r\n\t\t\t\t\tvUv = uv;\r\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\r\n\t\t\t\t}`,\r\n\r\n\t\t\tfragmentShader: `#include <common>\r\n\t\t\t\tvarying vec2 vUv;\r\n\t\t\t\tuniform sampler2D colorTexture;\r\n\t\t\t\tuniform vec2 texSize;\r\n\t\t\t\tuniform vec2 direction;\r\n\t\t\t\tuniform float kernelRadius;\r\n\r\n\t\t\t\tfloat gaussianPdf(in float x, in float sigma) {\r\n\t\t\t\t\treturn 0.39894 * exp( -0.5 * x * x/( sigma * sigma))/sigma;\r\n\t\t\t\t}\r\n\t\t\t\tvoid main() {\r\n\t\t\t\t\tvec2 invSize = 1.0 / texSize;\r\n\t\t\t\t\tfloat weightSum = gaussianPdf(0.0, kernelRadius);\r\n\t\t\t\t\tvec3 diffuseSum = texture2D( colorTexture, vUv).rgb * weightSum;\r\n\t\t\t\t\tvec2 delta = direction * invSize * kernelRadius/float(MAX_RADIUS);\r\n\t\t\t\t\tvec2 uvOffset = delta;\r\n\t\t\t\t\tfor( int i = 1; i <= MAX_RADIUS; i ++ ) {\r\n\t\t\t\t\t\tfloat w = gaussianPdf(uvOffset.x, kernelRadius);\r\n\t\t\t\t\t\tvec3 sample1 = texture2D( colorTexture, vUv + uvOffset).rgb;\r\n\t\t\t\t\t\tvec3 sample2 = texture2D( colorTexture, vUv - uvOffset).rgb;\r\n\t\t\t\t\t\tdiffuseSum += ((sample1 + sample2) * w);\r\n\t\t\t\t\t\tweightSum += (2.0 * w);\r\n\t\t\t\t\t\tuvOffset += delta;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tgl_FragColor = vec4(diffuseSum/weightSum, 1.0);\r\n\t\t\t\t}`\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\tgetOverlayMaterial() {\r\n\r\n\t\treturn new ShaderMaterial( {\r\n\t\t\tuniforms: {\r\n\t\t\t\t\"maskTexture\": { value: null },\r\n\t\t\t\t\"edgeTexture1\": { value: null },\r\n\t\t\t\t\"edgeTexture2\": { value: null },\r\n\t\t\t\t\"patternTexture\": { value: null },\r\n\t\t\t\t\"edgeStrength\": { value: 1.0 },\r\n\t\t\t\t\"edgeGlow\": { value: 1.0 },\r\n\t\t\t\t\"usePatternTexture\": { value: 0.0 }\r\n\t\t\t},\r\n\r\n\t\t\tvertexShader: `varying vec2 vUv;\r\n\t\t\t\tvoid main() {\r\n\t\t\t\t\tvUv = uv;\r\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\r\n\t\t\t\t}`,\r\n\r\n\t\t\tfragmentShader: `varying vec2 vUv;\r\n\t\t\t\tuniform sampler2D maskTexture;\r\n\t\t\t\tuniform sampler2D edgeTexture1;\r\n\t\t\t\tuniform sampler2D edgeTexture2;\r\n\t\t\t\tuniform sampler2D patternTexture;\r\n\t\t\t\tuniform float edgeStrength;\r\n\t\t\t\tuniform float edgeGlow;\r\n\t\t\t\tuniform bool usePatternTexture;\r\n\r\n\t\t\t\tvoid main() {\r\n\t\t\t\t\tvec4 edgeValue1 = texture2D(edgeTexture1, vUv);\r\n\t\t\t\t\tvec4 edgeValue2 = texture2D(edgeTexture2, vUv);\r\n\t\t\t\t\tvec4 maskColor = texture2D(maskTexture, vUv);\r\n\t\t\t\t\tvec4 patternColor = texture2D(patternTexture, 6.0 * vUv);\r\n\t\t\t\t\tfloat visibilityFactor = 1.0 - maskColor.g > 0.0 ? 1.0 : 0.5;\r\n\t\t\t\t\tvec4 edgeValue = edgeValue1 + edgeValue2 * edgeGlow;\r\n\t\t\t\t\tvec4 finalColor = edgeStrength * maskColor.r * edgeValue;\r\n\t\t\t\t\tif(usePatternTexture)\r\n\t\t\t\t\t\tfinalColor += + visibilityFactor * (1.0 - maskColor.r) * (1.0 - patternColor.r);\r\n\t\t\t\t\tgl_FragColor = finalColor;\r\n\t\t\t\t}`,\r\n\t\t\tblending: AdditiveBlending,\r\n\t\t\tdepthTest: false,\r\n\t\t\tdepthWrite: false,\r\n\t\t\ttransparent: true\r\n\t\t} );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport {\r\n\tOutlinePass\r\n};\r\n","/**\r\n * @author mattatz / http://mattatz.github.io\r\n *\r\n * Based on\r\n * Charlotte Hoare MSc Project / http://nccastaff.bournemouth.ac.uk/jmacey/MastersProjects/MSc12/Hoare/index.html\r\n * and\r\n * Su et al. Real-Time rendering of watercolor effects for virtual environments. / http://dl.acm.org/citation.cfm?id=2131253\r\n */\r\n\r\nimport { Vector2 } from \"three\";\r\n\r\nlet WatercolorShader = {\r\n\r\n\tuniforms: {\r\n\t\t\"tDiffuse\": { type: \"t\", value: null }, // diffuse texture\r\n\t\t\"tPaper\": { type: \"t\", value: null }, // paper texture\r\n\t\t\"texel\": { type: \"v2\", value: new Vector2( 1.0 / 512, 1.0 / 512 ) },\r\n\t\t\"scale\": { type: \"f\", value: 0.03 }, // wobble scale\r\n\t\t\"threshold\": { type: \"f\", value: 0.7 }, // edge threshold\r\n\t\t\"darkening\": { type: \"f\", value: 1.75 }, // edge darkening\r\n\t\t\"pigment\": { type: \"f\", value: 1.2 }, // pigment dispersion\r\n\t},\r\n\r\n\tvertexShader: [\r\n\t\t\"varying vec2 vUv;\",\r\n\t\t\"void main() {\",\r\n\t\t\"vUv = uv;\",\r\n\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\r\n\t\t\"}\"\r\n\t].join( \"\\n\" ),\r\n\r\n\tfragmentShader: [\r\n\t\t\"uniform sampler2D tDiffuse;\",\r\n\t\t\"uniform sampler2D tPaper;\",\r\n\r\n\t\t\"uniform vec2 texel;\",\r\n\t\t\"uniform float scale;\",\r\n\t\t\"uniform float threshold;\",\r\n\t\t\"uniform float darkening;\",\r\n\t\t\"uniform float pigment;\",\r\n\r\n\t\t\"varying vec2 vUv;\",\r\n\r\n\t\t\"float sobel(sampler2D tex, vec2 uv) {\",\r\n\r\n\t\t\"vec3 hr = vec3(0., 0., 0.);\",\r\n\t\t\"hr += texture2D(tex, (uv + vec2(-1.0, -1.0) * texel)).rgb *  1.0;\",\r\n\t\t\"hr += texture2D(tex, (uv + vec2( 0.0, -1.0) * texel)).rgb *  0.0;\",\r\n\t\t\"hr += texture2D(tex, (uv + vec2( 1.0, -1.0) * texel)).rgb * -1.0;\",\r\n\t\t\"hr += texture2D(tex, (uv + vec2(-1.0,  0.0) * texel)).rgb *  2.0;\",\r\n\t\t\"hr += texture2D(tex, (uv + vec2( 0.0,  0.0) * texel)).rgb *  0.0;\",\r\n\t\t\"hr += texture2D(tex, (uv + vec2( 1.0,  0.0) * texel)).rgb * -2.0;\",\r\n\t\t\"hr += texture2D(tex, (uv + vec2(-1.0,  1.0) * texel)).rgb *  1.0;\",\r\n\t\t\"hr += texture2D(tex, (uv + vec2( 0.0,  1.0) * texel)).rgb *  0.0;\",\r\n\t\t\"hr += texture2D(tex, (uv + vec2( 1.0,  1.0) * texel)).rgb * -1.0;\",\r\n\r\n\t\t\"vec3 vt = vec3(0., 0., 0.);\",\r\n\t\t\"vt += texture2D(tex, (uv + vec2(-1.0, -1.0) * texel)).rgb *  1.0;\",\r\n\t\t\"vt += texture2D(tex, (uv + vec2( 0.0, -1.0) * texel)).rgb *  2.0;\",\r\n\t\t\"vt += texture2D(tex, (uv + vec2( 1.0, -1.0) * texel)).rgb *  1.0;\",\r\n\t\t\"vt += texture2D(tex, (uv + vec2(-1.0,  0.0) * texel)).rgb *  0.0;\",\r\n\t\t\"vt += texture2D(tex, (uv + vec2( 0.0,  0.0) * texel)).rgb *  0.0;\",\r\n\t\t\"vt += texture2D(tex, (uv + vec2( 1.0,  0.0) * texel)).rgb *  0.0;\",\r\n\t\t\"vt += texture2D(tex, (uv + vec2(-1.0,  1.0) * texel)).rgb * -1.0;\",\r\n\t\t\"vt += texture2D(tex, (uv + vec2( 0.0,  1.0) * texel)).rgb * -2.0;\",\r\n\t\t\"vt += texture2D(tex, (uv + vec2( 1.0,  1.0) * texel)).rgb * -1.0;\",\r\n\r\n\t\t\"return sqrt(dot(hr, hr) + dot(vt, vt));\",\r\n\t\t\"}\",\r\n\r\n\t\t\"vec2 wobble(sampler2D tex, vec2 uv) {\",\r\n\t\t\"return uv + (texture2D(tex, uv).xy - 0.5) * scale;\",\r\n\t\t\"}\",\r\n\r\n\t\t\"vec4 edgeDarkening(sampler2D tex, vec2 uv) {\",\r\n\t\t\"vec4 c = texture2D(tex, uv);\",\r\n\t\t\"return c * (1.0 - (1.0 - c) * (darkening - 1.0));\",\r\n\t\t\"}\",\r\n\r\n\t\t\"float granulation(sampler2D tex, vec2 uv, float beta) {\",\r\n\t\t\"vec4 c = texture2D(tex, uv);\",\r\n\t\t\"float intensity = (c.r + c.g + c.b) / 3.0;\",\r\n\t\t\"return 1.0 + beta * (intensity - 0.5);\",\r\n\t\t\"}\",\r\n\r\n\t\t\"void main() {\",\r\n\t\t\"vec2 uv = vUv;\",\r\n\t\t\"uv = wobble(tPaper, uv);\",\r\n\r\n\t\t\"float pd = granulation(tPaper, vUv, pigment);\", // pigment dispersion\r\n\r\n\t\t\"float edge = sobel(tDiffuse, uv);\",\r\n\t\t\"if (edge > threshold) {\",\r\n\t\t\"gl_FragColor = pd * edgeDarkening(tDiffuse, uv);\",\r\n\t\t\"} else {\",\r\n\t\t\"gl_FragColor = pd * texture2D(tDiffuse, uv);\",\r\n\t\t\"}\",\r\n\t\t\"}\"\r\n\r\n\t].join( \"\\n\" )\r\n\r\n};\r\n\r\nexport {\r\n\tWatercolorShader\r\n};\r\n","/**\r\n * @author mattatz / http://mattatz.github.io\r\n */\r\nimport { Pass } from './Pass.js';\r\nimport { WatercolorShader } from './shader/WatercolorShader.js';\r\nimport { PlaneBufferGeometry, ShaderMaterial, Mesh, Vector2, UniformsUtils, OrthographicCamera, Scene, RepeatWrapping } from \"three\";\r\n\r\nclass WatercolorPass extends Pass {\r\n\r\n\tconstructor( tPaper, effectComposer, renderToScreen ) {\r\n\r\n\t\tsuper( effectComposer, renderToScreen );\r\n\t\tlet shader = WatercolorShader;\r\n\t\tthis.uniforms = UniformsUtils.clone( shader.uniforms );\r\n\r\n\t\ttPaper.wrapS = tPaper.wrapT = RepeatWrapping;\r\n\t\tthis.uniforms[ \"tPaper\" ].value = tPaper;\r\n\r\n\t\tthis.material = new ShaderMaterial( {\r\n\t\t\tuniforms: this.uniforms,\r\n\t\t\tvertexShader: shader.vertexShader,\r\n\t\t\tfragmentShader: shader.fragmentShader\r\n\t\t} );\r\n\r\n\t\tthis.enabled = true;\r\n\t\tthis.renderToScreen = renderToScreen;\r\n\t\tthis.needsSwap = true;\r\n\r\n\t\tthis.camera = new OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\r\n\t\tthis.scene = new Scene();\r\n\r\n\t\tthis.quad = new Mesh( new PlaneBufferGeometry( 2, 2 ), undefined );\r\n\t\tthis.scene.add( this.quad );\r\n\r\n\t}\r\n\r\n\trender( renderer, writeBuffer, readBuffer ) {\r\n\r\n\t\tthis.uniforms[ \"tDiffuse\" ].value = readBuffer;\r\n\t\tthis.uniforms[ \"texel\" ].value = new Vector2( 1.0 / readBuffer.width,\r\n\t\t\t1.0 / readBuffer.height );\r\n\r\n\t\tthis.quad.material = this.material;\r\n\t\tif ( this.renderToScreen ) {\r\n\r\n\t\t\trenderer.render( this.scene, this.camera );\r\n\r\n\t\t} else {\r\n\r\n\t\t\trenderer.render( this.scene, this.camera, writeBuffer, false );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport {\r\n\tWatercolorPass\r\n};\r\n","import { Vector2 } from \"three\";\r\n\r\nlet TestShader = {\r\n\tuniforms: {\r\n\t\t\"tDiffuse\": { value: null },\r\n\t\t\"tSize\": { value: new Vector2( 256, 256 ) },\r\n\t\t\"center\": { value: new Vector2( 0.5, 0.5 ) },\r\n\t\t\"angle\": { value: 1.57 },\r\n\t\t\"scale\": { value: 1.0 }\r\n\t},\r\n\r\n\tvertexShader: [\r\n\t\t\"varying vec2 vUv;\",\r\n\t\t\"void main() {\",\r\n\t\t\"vUv = uv;\",\r\n\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\r\n\t\t\"}\"\r\n\t].join( \"\\n\" ),\r\n\r\n\tfragmentShader: [\r\n\t\t`uniform vec2 center;\r\n    uniform float angle;\r\n    uniform float scale;\r\n    uniform vec2 tSize;\r\n    uniform sampler2D tDiffuse;\r\n    varying vec2 vUv;\r\n    float pattern() {\r\n      float s = sin( angle ), c = cos( angle );\r\n      vec2 tex = vUv * tSize - center;\r\n      vec2 point = vec2( c * tex.x - s * tex.y, s * tex.x + c * tex.y ) * scale;\r\n      return ( sin( point.x ) * sin( point.y ) ) * 4.0;\r\n    }\r\n\r\nconst float PI = 3.1415926536;\r\nconst float PI2 = PI * 2.0; \r\nconst int mSize = 9;\r\nconst int kSize = (mSize-1)/2;\r\nconst float sigma = 3.0;\r\nfloat kernel[mSize];\r\n\r\nfloat normpdf(in float x, in float sigma) \r\n{\r\n\treturn 0.39894 * exp(-0.5 * x * x / (sigma * sigma)) / sigma;\r\n}\r\n\r\nvec3 colorDodge(in vec3 src, in vec3 dst)\r\n{\r\n    return step(0.0, dst) * mix(min(vec3(1.0), dst/ (1.0 - src)), vec3(1.0), step(1.0, src)); \r\n}\r\n\r\nfloat greyScale(in vec3 col) \r\n{\r\n    return dot(col, vec3(0.3, 0.59, 0.11));\r\n    //return dot(col, vec3(0.2126, 0.7152, 0.0722)); //sRGB\r\n}\r\n\r\nvec2 random(vec2 p){\r\n\tp = fract(p * vec2(443.897, 441.423));\r\n    p += dot(p, p.yx+19.19);\r\n    return fract((p.xx+p.yx)*p.xy);\r\n}\r\n\r\n\r\n    void main() {\r\n    \tvec2 q = -1.0 + 2.0 *vUv;\r\n      vec4 color = texture2D( tDiffuse, vUv );\r\n      vec3 col = color.rgb;\r\n      \r\n      vec2 r = random(q);\r\n      r.x *= PI2;\r\n      vec2 cr = vec2(sin(r.x),cos(r.x))*sqrt(r.y);\r\n    \r\n      vec3 blurred = color.rgb;\r\n    \r\n    \r\n    vec3 inv = vec3(1.0) - blurred; \r\n    // color dodge\r\n    vec3 lighten = colorDodge(col, inv);\r\n    // grey scale\r\n    vec3 res = vec3(greyScale(lighten));\r\n    \r\n    // more contrast\r\n    res = vec3(pow(res.x, 3.0)); \r\n      \r\n      \r\n      gl_FragColor = vec4( res,1.0 );\r\n    }`\r\n\t].join( \"\\n\" )\r\n};\r\n\r\nexport {\r\n\tTestShader\r\n};\r\n","import { Pass } from './Pass.js';\r\nimport { TestShader } from './shader/TestShader.js';\r\nimport { PlaneBufferGeometry, ShaderMaterial, Mesh, UniformsUtils, OrthographicCamera, Scene } from \"three\";\r\n\r\nclass TestPass extends Pass {\r\n\r\n\tconstructor( center, angle, scale, effectComposer, renderToScreen = false ) {\r\n\r\n\t\tsuper( effectComposer, renderToScreen );\r\n\t\tthis.uniforms = UniformsUtils.clone( TestShader.uniforms );\r\n\t\tif ( center !== undefined ) this.uniforms[ \"center\" ].value.copy( center );\r\n\t\tif ( angle !== undefined ) this.uniforms[ \"angle\" ].value = angle;\r\n\t\tif ( scale !== undefined ) this.uniforms[ \"scale\" ].value = scale;\r\n\r\n\t\tthis.material = new ShaderMaterial( {\r\n\t\t\tuniforms: this.uniforms,\r\n\t\t\tvertexShader: TestShader.vertexShader,\r\n\t\t\tfragmentShader: TestShader.fragmentShader\r\n\t\t} );\r\n\r\n\t\tthis.camera = new OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\r\n\t\tthis.scene = new Scene();\r\n\t\tthis.quad = new Mesh( new PlaneBufferGeometry( 2, 2 ), null );\r\n\t\tthis.quad.frustumCulled = false; // Avoid getting clipped\r\n\t\tthis.scene.add( this.quad );\r\n\r\n\t}\r\n\r\n\trender( renderer, writeBuffer, readBuffer ) {\r\n\r\n\t\tthis.uniforms[ \"tDiffuse\" ].value = readBuffer.texture;\r\n\t\tthis.uniforms[ \"tSize\" ].value.set( readBuffer.width, readBuffer.height );\r\n\r\n\t\tthis.quad.material = this.material;\r\n\r\n\t\tif ( this.renderToScreen ) {\r\n\r\n\t\t\trenderer.render( this.scene, this.camera );\r\n\r\n\t\t} else {\r\n\r\n\t\t\trenderer.render( this.scene, this.camera, writeBuffer, this.clear );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport {\r\n\tTestPass\r\n};\r\n","/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author davidedc / http://www.sketchpatch.net/\r\n *\r\n * NVIDIA FXAA by Timothy Lottes\r\n * http://timothylottes.blogspot.com/2011/06/fxaa3-source-released.html\r\n * - WebGL port by @supereggbert\r\n * http://www.glge.org/demos/fxaa/\r\n */\r\n\r\nimport { Vector2 } from \"three\";\r\n\r\nlet FXAAShader = {\r\n\r\n\tuniforms: {\r\n\r\n\t\t\"tDiffuse\": { value: null },\r\n\t\t\"resolution\": { value: new Vector2( 1 / 1024, 1 / 512 ) }\r\n\r\n\t},\r\n\r\n\tvertexShader: [\r\n\r\n\t\t\"varying vec2 vUv;\",\r\n\r\n\t\t\"void main() {\",\r\n\r\n\t\t\"vUv = uv;\",\r\n\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\r\n\r\n\t\t\"}\"\r\n\r\n\t].join( \"\\n\" ),\r\n\r\n\tfragmentShader: [\r\n\t\t\"precision highp float;\",\r\n\t\t\"\",\r\n\t\t\"uniform sampler2D tDiffuse;\",\r\n\t\t\"\",\r\n\t\t\"uniform vec2 resolution;\",\r\n\t\t\"\",\r\n\t\t\"varying vec2 vUv;\",\r\n\t\t\"\",\r\n\t\t\"// FXAA 3.11 implementation by NVIDIA, ported to WebGL by Agost Biro (biro@archilogic.com)\",\r\n\t\t\"\",\r\n\t\t\"//----------------------------------------------------------------------------------\",\r\n\t\t\"// File:        es3-kepler\\FXAA\\assets\\shaders/FXAA_DefaultES.frag\",\r\n\t\t\"// SDK Version: v3.00\",\r\n\t\t\"// Email:       gameworks@nvidia.com\",\r\n\t\t\"// Site:        http://developer.nvidia.com/\",\r\n\t\t\"//\",\r\n\t\t\"// Copyright (c) 2014-2015, NVIDIA CORPORATION. All rights reserved.\",\r\n\t\t\"//\",\r\n\t\t\"// Redistribution and use in source and binary forms, with or without\",\r\n\t\t\"// modification, are permitted provided that the following conditions\",\r\n\t\t\"// are met:\",\r\n\t\t\"//  * Redistributions of source code must retain the above copyright\",\r\n\t\t\"//    notice, this list of conditions and the following disclaimer.\",\r\n\t\t\"//  * Redistributions in binary form must reproduce the above copyright\",\r\n\t\t\"//    notice, this list of conditions and the following disclaimer in the\",\r\n\t\t\"//    documentation and/or other materials provided with the distribution.\",\r\n\t\t\"//  * Neither the name of NVIDIA CORPORATION nor the names of its\",\r\n\t\t\"//    contributors may be used to endorse or promote products derived\",\r\n\t\t\"//    from this software without specific prior written permission.\",\r\n\t\t\"//\",\r\n\t\t\"// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS ``AS IS'' AND ANY\",\r\n\t\t\"// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\",\r\n\t\t\"// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\",\r\n\t\t\"// PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR\",\r\n\t\t\"// CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\",\r\n\t\t\"// EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\",\r\n\t\t\"// PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\",\r\n\t\t\"// PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\",\r\n\t\t\"// OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\",\r\n\t\t\"// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\",\r\n\t\t\"// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\",\r\n\t\t\"//\",\r\n\t\t\"//----------------------------------------------------------------------------------\",\r\n\t\t\"\",\r\n\t\t\"#define FXAA_PC 1\",\r\n\t\t\"#define FXAA_GLSL_100 1\",\r\n\t\t\"#define FXAA_QUALITY_PRESET 12\",\r\n\t\t\"\",\r\n\t\t\"#define FXAA_GREEN_AS_LUMA 1\",\r\n\t\t\"\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"#ifndef FXAA_PC_CONSOLE\",\r\n\t\t\"    //\",\r\n\t\t\"    // The console algorithm for PC is included\",\r\n\t\t\"    // for developers targeting really low spec machines.\",\r\n\t\t\"    // Likely better to just run FXAA_PC, and use a really low preset.\",\r\n\t\t\"    //\",\r\n\t\t\"    #define FXAA_PC_CONSOLE 0\",\r\n\t\t\"#endif\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"#ifndef FXAA_GLSL_120\",\r\n\t\t\"    #define FXAA_GLSL_120 0\",\r\n\t\t\"#endif\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"#ifndef FXAA_GLSL_130\",\r\n\t\t\"    #define FXAA_GLSL_130 0\",\r\n\t\t\"#endif\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"#ifndef FXAA_HLSL_3\",\r\n\t\t\"    #define FXAA_HLSL_3 0\",\r\n\t\t\"#endif\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"#ifndef FXAA_HLSL_4\",\r\n\t\t\"    #define FXAA_HLSL_4 0\",\r\n\t\t\"#endif\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"#ifndef FXAA_HLSL_5\",\r\n\t\t\"    #define FXAA_HLSL_5 0\",\r\n\t\t\"#endif\",\r\n\t\t\"/*==========================================================================*/\",\r\n\t\t\"#ifndef FXAA_GREEN_AS_LUMA\",\r\n\t\t\"    //\",\r\n\t\t\"    // For those using non-linear color,\",\r\n\t\t\"    // and either not able to get luma in alpha, or not wanting to,\",\r\n\t\t\"    // this enables FXAA to run using green as a proxy for luma.\",\r\n\t\t\"    // So with this enabled, no need to pack luma in alpha.\",\r\n\t\t\"    //\",\r\n\t\t\"    // This will turn off AA on anything which lacks some amount of green.\",\r\n\t\t\"    // Pure red and blue or combination of only R and B, will get no AA.\",\r\n\t\t\"    //\",\r\n\t\t\"    // Might want to lower the settings for both,\",\r\n\t\t\"    //    fxaaConsoleEdgeThresholdMin\",\r\n\t\t\"    //    fxaaQualityEdgeThresholdMin\",\r\n\t\t\"    // In order to insure AA does not get turned off on colors\",\r\n\t\t\"    // which contain a minor amount of green.\",\r\n\t\t\"    //\",\r\n\t\t\"    // 1 = On.\",\r\n\t\t\"    // 0 = Off.\",\r\n\t\t\"    //\",\r\n\t\t\"    #define FXAA_GREEN_AS_LUMA 0\",\r\n\t\t\"#endif\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"#ifndef FXAA_EARLY_EXIT\",\r\n\t\t\"    //\",\r\n\t\t\"    // Controls algorithm's early exit path.\",\r\n\t\t\"    // On PS3 turning this ON adds 2 cycles to the shader.\",\r\n\t\t\"    // On 360 turning this OFF adds 10ths of a millisecond to the shader.\",\r\n\t\t\"    // Turning this off on console will result in a more blurry image.\",\r\n\t\t\"    // So this defaults to on.\",\r\n\t\t\"    //\",\r\n\t\t\"    // 1 = On.\",\r\n\t\t\"    // 0 = Off.\",\r\n\t\t\"    //\",\r\n\t\t\"    #define FXAA_EARLY_EXIT 1\",\r\n\t\t\"#endif\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"#ifndef FXAA_DISCARD\",\r\n\t\t\"    //\",\r\n\t\t\"    // Only valid for PC OpenGL currently.\",\r\n\t\t\"    // Probably will not work when FXAA_GREEN_AS_LUMA = 1.\",\r\n\t\t\"    //\",\r\n\t\t\"    // 1 = Use discard on pixels which don't need AA.\",\r\n\t\t\"    //     For APIs which enable concurrent TEX+ROP from same surface.\",\r\n\t\t\"    // 0 = Return unchanged color on pixels which don't need AA.\",\r\n\t\t\"    //\",\r\n\t\t\"    #define FXAA_DISCARD 0\",\r\n\t\t\"#endif\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"#ifndef FXAA_FAST_PIXEL_OFFSET\",\r\n\t\t\"    //\",\r\n\t\t\"    // Used for GLSL 120 only.\",\r\n\t\t\"    //\",\r\n\t\t\"    // 1 = GL API supports fast pixel offsets\",\r\n\t\t\"    // 0 = do not use fast pixel offsets\",\r\n\t\t\"    //\",\r\n\t\t\"    #ifdef GL_EXT_gpu_shader4\",\r\n\t\t\"        #define FXAA_FAST_PIXEL_OFFSET 1\",\r\n\t\t\"    #endif\",\r\n\t\t\"    #ifdef GL_NV_gpu_shader5\",\r\n\t\t\"        #define FXAA_FAST_PIXEL_OFFSET 1\",\r\n\t\t\"    #endif\",\r\n\t\t\"    #ifdef GL_ARB_gpu_shader5\",\r\n\t\t\"        #define FXAA_FAST_PIXEL_OFFSET 1\",\r\n\t\t\"    #endif\",\r\n\t\t\"    #ifndef FXAA_FAST_PIXEL_OFFSET\",\r\n\t\t\"        #define FXAA_FAST_PIXEL_OFFSET 0\",\r\n\t\t\"    #endif\",\r\n\t\t\"#endif\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"#ifndef FXAA_GATHER4_ALPHA\",\r\n\t\t\"    //\",\r\n\t\t\"    // 1 = API supports gather4 on alpha channel.\",\r\n\t\t\"    // 0 = API does not support gather4 on alpha channel.\",\r\n\t\t\"    //\",\r\n\t\t\"    #if (FXAA_HLSL_5 == 1)\",\r\n\t\t\"        #define FXAA_GATHER4_ALPHA 1\",\r\n\t\t\"    #endif\",\r\n\t\t\"    #ifdef GL_ARB_gpu_shader5\",\r\n\t\t\"        #define FXAA_GATHER4_ALPHA 1\",\r\n\t\t\"    #endif\",\r\n\t\t\"    #ifdef GL_NV_gpu_shader5\",\r\n\t\t\"        #define FXAA_GATHER4_ALPHA 1\",\r\n\t\t\"    #endif\",\r\n\t\t\"    #ifndef FXAA_GATHER4_ALPHA\",\r\n\t\t\"        #define FXAA_GATHER4_ALPHA 0\",\r\n\t\t\"    #endif\",\r\n\t\t\"#endif\",\r\n\t\t\"\",\r\n\t\t\"\",\r\n\t\t\"/*============================================================================\",\r\n\t\t\"                        FXAA QUALITY - TUNING KNOBS\",\r\n\t\t\"------------------------------------------------------------------------------\",\r\n\t\t\"NOTE the other tuning knobs are now in the shader function inputs!\",\r\n\t\t\"============================================================================*/\",\r\n\t\t\"#ifndef FXAA_QUALITY_PRESET\",\r\n\t\t\"    //\",\r\n\t\t\"    // Choose the quality preset.\",\r\n\t\t\"    // This needs to be compiled into the shader as it effects code.\",\r\n\t\t\"    // Best option to include multiple presets is to\",\r\n\t\t\"    // in each shader define the preset, then include this file.\",\r\n\t\t\"    //\",\r\n\t\t\"    // OPTIONS\",\r\n\t\t\"    // -----------------------------------------------------------------------\",\r\n\t\t\"    // 10 to 15 - default medium dither (10=fastest, 15=highest quality)\",\r\n\t\t\"    // 20 to 29 - less dither, more expensive (20=fastest, 29=highest quality)\",\r\n\t\t\"    // 39       - no dither, very expensive\",\r\n\t\t\"    //\",\r\n\t\t\"    // NOTES\",\r\n\t\t\"    // -----------------------------------------------------------------------\",\r\n\t\t\"    // 12 = slightly faster then FXAA 3.9 and higher edge quality (default)\",\r\n\t\t\"    // 13 = about same speed as FXAA 3.9 and better than 12\",\r\n\t\t\"    // 23 = closest to FXAA 3.9 visually and performance wise\",\r\n\t\t\"    //  _ = the lowest digit is directly related to performance\",\r\n\t\t\"    // _  = the highest digit is directly related to style\",\r\n\t\t\"    //\",\r\n\t\t\"    #define FXAA_QUALITY_PRESET 12\",\r\n\t\t\"#endif\",\r\n\t\t\"\",\r\n\t\t\"\",\r\n\t\t\"/*============================================================================\",\r\n\t\t\"\",\r\n\t\t\"                           FXAA QUALITY - PRESETS\",\r\n\t\t\"\",\r\n\t\t\"============================================================================*/\",\r\n\t\t\"\",\r\n\t\t\"/*============================================================================\",\r\n\t\t\"                     FXAA QUALITY - MEDIUM DITHER PRESETS\",\r\n\t\t\"============================================================================*/\",\r\n\t\t\"#if (FXAA_QUALITY_PRESET == 10)\",\r\n\t\t\"    #define FXAA_QUALITY_PS 3\",\r\n\t\t\"    #define FXAA_QUALITY_P0 1.5\",\r\n\t\t\"    #define FXAA_QUALITY_P1 3.0\",\r\n\t\t\"    #define FXAA_QUALITY_P2 12.0\",\r\n\t\t\"#endif\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"#if (FXAA_QUALITY_PRESET == 11)\",\r\n\t\t\"    #define FXAA_QUALITY_PS 4\",\r\n\t\t\"    #define FXAA_QUALITY_P0 1.0\",\r\n\t\t\"    #define FXAA_QUALITY_P1 1.5\",\r\n\t\t\"    #define FXAA_QUALITY_P2 3.0\",\r\n\t\t\"    #define FXAA_QUALITY_P3 12.0\",\r\n\t\t\"#endif\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"#if (FXAA_QUALITY_PRESET == 12)\",\r\n\t\t\"    #define FXAA_QUALITY_PS 5\",\r\n\t\t\"    #define FXAA_QUALITY_P0 1.0\",\r\n\t\t\"    #define FXAA_QUALITY_P1 1.5\",\r\n\t\t\"    #define FXAA_QUALITY_P2 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P3 4.0\",\r\n\t\t\"    #define FXAA_QUALITY_P4 12.0\",\r\n\t\t\"#endif\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"#if (FXAA_QUALITY_PRESET == 13)\",\r\n\t\t\"    #define FXAA_QUALITY_PS 6\",\r\n\t\t\"    #define FXAA_QUALITY_P0 1.0\",\r\n\t\t\"    #define FXAA_QUALITY_P1 1.5\",\r\n\t\t\"    #define FXAA_QUALITY_P2 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P3 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P4 4.0\",\r\n\t\t\"    #define FXAA_QUALITY_P5 12.0\",\r\n\t\t\"#endif\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"#if (FXAA_QUALITY_PRESET == 14)\",\r\n\t\t\"    #define FXAA_QUALITY_PS 7\",\r\n\t\t\"    #define FXAA_QUALITY_P0 1.0\",\r\n\t\t\"    #define FXAA_QUALITY_P1 1.5\",\r\n\t\t\"    #define FXAA_QUALITY_P2 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P3 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P4 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P5 4.0\",\r\n\t\t\"    #define FXAA_QUALITY_P6 12.0\",\r\n\t\t\"#endif\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"#if (FXAA_QUALITY_PRESET == 15)\",\r\n\t\t\"    #define FXAA_QUALITY_PS 8\",\r\n\t\t\"    #define FXAA_QUALITY_P0 1.0\",\r\n\t\t\"    #define FXAA_QUALITY_P1 1.5\",\r\n\t\t\"    #define FXAA_QUALITY_P2 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P3 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P4 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P5 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P6 4.0\",\r\n\t\t\"    #define FXAA_QUALITY_P7 12.0\",\r\n\t\t\"#endif\",\r\n\t\t\"\",\r\n\t\t\"/*============================================================================\",\r\n\t\t\"                     FXAA QUALITY - LOW DITHER PRESETS\",\r\n\t\t\"============================================================================*/\",\r\n\t\t\"#if (FXAA_QUALITY_PRESET == 20)\",\r\n\t\t\"    #define FXAA_QUALITY_PS 3\",\r\n\t\t\"    #define FXAA_QUALITY_P0 1.5\",\r\n\t\t\"    #define FXAA_QUALITY_P1 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P2 8.0\",\r\n\t\t\"#endif\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"#if (FXAA_QUALITY_PRESET == 21)\",\r\n\t\t\"    #define FXAA_QUALITY_PS 4\",\r\n\t\t\"    #define FXAA_QUALITY_P0 1.0\",\r\n\t\t\"    #define FXAA_QUALITY_P1 1.5\",\r\n\t\t\"    #define FXAA_QUALITY_P2 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P3 8.0\",\r\n\t\t\"#endif\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"#if (FXAA_QUALITY_PRESET == 22)\",\r\n\t\t\"    #define FXAA_QUALITY_PS 5\",\r\n\t\t\"    #define FXAA_QUALITY_P0 1.0\",\r\n\t\t\"    #define FXAA_QUALITY_P1 1.5\",\r\n\t\t\"    #define FXAA_QUALITY_P2 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P3 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P4 8.0\",\r\n\t\t\"#endif\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"#if (FXAA_QUALITY_PRESET == 23)\",\r\n\t\t\"    #define FXAA_QUALITY_PS 6\",\r\n\t\t\"    #define FXAA_QUALITY_P0 1.0\",\r\n\t\t\"    #define FXAA_QUALITY_P1 1.5\",\r\n\t\t\"    #define FXAA_QUALITY_P2 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P3 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P4 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P5 8.0\",\r\n\t\t\"#endif\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"#if (FXAA_QUALITY_PRESET == 24)\",\r\n\t\t\"    #define FXAA_QUALITY_PS 7\",\r\n\t\t\"    #define FXAA_QUALITY_P0 1.0\",\r\n\t\t\"    #define FXAA_QUALITY_P1 1.5\",\r\n\t\t\"    #define FXAA_QUALITY_P2 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P3 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P4 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P5 3.0\",\r\n\t\t\"    #define FXAA_QUALITY_P6 8.0\",\r\n\t\t\"#endif\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"#if (FXAA_QUALITY_PRESET == 25)\",\r\n\t\t\"    #define FXAA_QUALITY_PS 8\",\r\n\t\t\"    #define FXAA_QUALITY_P0 1.0\",\r\n\t\t\"    #define FXAA_QUALITY_P1 1.5\",\r\n\t\t\"    #define FXAA_QUALITY_P2 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P3 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P4 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P5 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P6 4.0\",\r\n\t\t\"    #define FXAA_QUALITY_P7 8.0\",\r\n\t\t\"#endif\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"#if (FXAA_QUALITY_PRESET == 26)\",\r\n\t\t\"    #define FXAA_QUALITY_PS 9\",\r\n\t\t\"    #define FXAA_QUALITY_P0 1.0\",\r\n\t\t\"    #define FXAA_QUALITY_P1 1.5\",\r\n\t\t\"    #define FXAA_QUALITY_P2 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P3 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P4 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P5 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P6 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P7 4.0\",\r\n\t\t\"    #define FXAA_QUALITY_P8 8.0\",\r\n\t\t\"#endif\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"#if (FXAA_QUALITY_PRESET == 27)\",\r\n\t\t\"    #define FXAA_QUALITY_PS 10\",\r\n\t\t\"    #define FXAA_QUALITY_P0 1.0\",\r\n\t\t\"    #define FXAA_QUALITY_P1 1.5\",\r\n\t\t\"    #define FXAA_QUALITY_P2 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P3 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P4 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P5 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P6 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P7 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P8 4.0\",\r\n\t\t\"    #define FXAA_QUALITY_P9 8.0\",\r\n\t\t\"#endif\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"#if (FXAA_QUALITY_PRESET == 28)\",\r\n\t\t\"    #define FXAA_QUALITY_PS 11\",\r\n\t\t\"    #define FXAA_QUALITY_P0 1.0\",\r\n\t\t\"    #define FXAA_QUALITY_P1 1.5\",\r\n\t\t\"    #define FXAA_QUALITY_P2 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P3 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P4 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P5 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P6 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P7 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P8 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P9 4.0\",\r\n\t\t\"    #define FXAA_QUALITY_P10 8.0\",\r\n\t\t\"#endif\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"#if (FXAA_QUALITY_PRESET == 29)\",\r\n\t\t\"    #define FXAA_QUALITY_PS 12\",\r\n\t\t\"    #define FXAA_QUALITY_P0 1.0\",\r\n\t\t\"    #define FXAA_QUALITY_P1 1.5\",\r\n\t\t\"    #define FXAA_QUALITY_P2 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P3 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P4 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P5 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P6 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P7 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P8 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P9 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P10 4.0\",\r\n\t\t\"    #define FXAA_QUALITY_P11 8.0\",\r\n\t\t\"#endif\",\r\n\t\t\"\",\r\n\t\t\"/*============================================================================\",\r\n\t\t\"                     FXAA QUALITY - EXTREME QUALITY\",\r\n\t\t\"============================================================================*/\",\r\n\t\t\"#if (FXAA_QUALITY_PRESET == 39)\",\r\n\t\t\"    #define FXAA_QUALITY_PS 12\",\r\n\t\t\"    #define FXAA_QUALITY_P0 1.0\",\r\n\t\t\"    #define FXAA_QUALITY_P1 1.0\",\r\n\t\t\"    #define FXAA_QUALITY_P2 1.0\",\r\n\t\t\"    #define FXAA_QUALITY_P3 1.0\",\r\n\t\t\"    #define FXAA_QUALITY_P4 1.0\",\r\n\t\t\"    #define FXAA_QUALITY_P5 1.5\",\r\n\t\t\"    #define FXAA_QUALITY_P6 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P7 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P8 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P9 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P10 4.0\",\r\n\t\t\"    #define FXAA_QUALITY_P11 8.0\",\r\n\t\t\"#endif\",\r\n\t\t\"\",\r\n\t\t\"\",\r\n\t\t\"\",\r\n\t\t\"/*============================================================================\",\r\n\t\t\"\",\r\n\t\t\"                                API PORTING\",\r\n\t\t\"\",\r\n\t\t\"============================================================================*/\",\r\n\t\t\"#if (FXAA_GLSL_100 == 1) || (FXAA_GLSL_120 == 1) || (FXAA_GLSL_130 == 1)\",\r\n\t\t\"    #define FxaaBool bool\",\r\n\t\t\"    #define FxaaDiscard discard\",\r\n\t\t\"    #define FxaaFloat float\",\r\n\t\t\"    #define FxaaFloat2 vec2\",\r\n\t\t\"    #define FxaaFloat3 vec3\",\r\n\t\t\"    #define FxaaFloat4 vec4\",\r\n\t\t\"    #define FxaaHalf float\",\r\n\t\t\"    #define FxaaHalf2 vec2\",\r\n\t\t\"    #define FxaaHalf3 vec3\",\r\n\t\t\"    #define FxaaHalf4 vec4\",\r\n\t\t\"    #define FxaaInt2 ivec2\",\r\n\t\t\"    #define FxaaSat(x) clamp(x, 0.0, 1.0)\",\r\n\t\t\"    #define FxaaTex sampler2D\",\r\n\t\t\"#else\",\r\n\t\t\"    #define FxaaBool bool\",\r\n\t\t\"    #define FxaaDiscard clip(-1)\",\r\n\t\t\"    #define FxaaFloat float\",\r\n\t\t\"    #define FxaaFloat2 float2\",\r\n\t\t\"    #define FxaaFloat3 float3\",\r\n\t\t\"    #define FxaaFloat4 float4\",\r\n\t\t\"    #define FxaaHalf half\",\r\n\t\t\"    #define FxaaHalf2 half2\",\r\n\t\t\"    #define FxaaHalf3 half3\",\r\n\t\t\"    #define FxaaHalf4 half4\",\r\n\t\t\"    #define FxaaSat(x) saturate(x)\",\r\n\t\t\"#endif\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"#if (FXAA_GLSL_100 == 1)\",\r\n\t\t\"  #define FxaaTexTop(t, p) texture2D(t, p, 0.0)\",\r\n\t\t\"  #define FxaaTexOff(t, p, o, r) texture2D(t, p + (o * r), 0.0)\",\r\n\t\t\"#endif\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"#if (FXAA_GLSL_120 == 1)\",\r\n\t\t\"    // Requires,\",\r\n\t\t\"    //  #version 120\",\r\n\t\t\"    // And at least,\",\r\n\t\t\"    //  #extension GL_EXT_gpu_shader4 : enable\",\r\n\t\t\"    //  (or set FXAA_FAST_PIXEL_OFFSET 1 to work like DX9)\",\r\n\t\t\"    #define FxaaTexTop(t, p) texture2DLod(t, p, 0.0)\",\r\n\t\t\"    #if (FXAA_FAST_PIXEL_OFFSET == 1)\",\r\n\t\t\"        #define FxaaTexOff(t, p, o, r) texture2DLodOffset(t, p, 0.0, o)\",\r\n\t\t\"    #else\",\r\n\t\t\"        #define FxaaTexOff(t, p, o, r) texture2DLod(t, p + (o * r), 0.0)\",\r\n\t\t\"    #endif\",\r\n\t\t\"    #if (FXAA_GATHER4_ALPHA == 1)\",\r\n\t\t\"        // use #extension GL_ARB_gpu_shader5 : enable\",\r\n\t\t\"        #define FxaaTexAlpha4(t, p) textureGather(t, p, 3)\",\r\n\t\t\"        #define FxaaTexOffAlpha4(t, p, o) textureGatherOffset(t, p, o, 3)\",\r\n\t\t\"        #define FxaaTexGreen4(t, p) textureGather(t, p, 1)\",\r\n\t\t\"        #define FxaaTexOffGreen4(t, p, o) textureGatherOffset(t, p, o, 1)\",\r\n\t\t\"    #endif\",\r\n\t\t\"#endif\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"#if (FXAA_GLSL_130 == 1)\",\r\n\t\t\"    // Requires \\\"#version 130\\\" or better\",\r\n\t\t\"    #define FxaaTexTop(t, p) textureLod(t, p, 0.0)\",\r\n\t\t\"    #define FxaaTexOff(t, p, o, r) textureLodOffset(t, p, 0.0, o)\",\r\n\t\t\"    #if (FXAA_GATHER4_ALPHA == 1)\",\r\n\t\t\"        // use #extension GL_ARB_gpu_shader5 : enable\",\r\n\t\t\"        #define FxaaTexAlpha4(t, p) textureGather(t, p, 3)\",\r\n\t\t\"        #define FxaaTexOffAlpha4(t, p, o) textureGatherOffset(t, p, o, 3)\",\r\n\t\t\"        #define FxaaTexGreen4(t, p) textureGather(t, p, 1)\",\r\n\t\t\"        #define FxaaTexOffGreen4(t, p, o) textureGatherOffset(t, p, o, 1)\",\r\n\t\t\"    #endif\",\r\n\t\t\"#endif\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"#if (FXAA_HLSL_3 == 1)\",\r\n\t\t\"    #define FxaaInt2 float2\",\r\n\t\t\"    #define FxaaTex sampler2D\",\r\n\t\t\"    #define FxaaTexTop(t, p) tex2Dlod(t, float4(p, 0.0, 0.0))\",\r\n\t\t\"    #define FxaaTexOff(t, p, o, r) tex2Dlod(t, float4(p + (o * r), 0, 0))\",\r\n\t\t\"#endif\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"#if (FXAA_HLSL_4 == 1)\",\r\n\t\t\"    #define FxaaInt2 int2\",\r\n\t\t\"    struct FxaaTex { SamplerState smpl; Texture2D tex; };\",\r\n\t\t\"    #define FxaaTexTop(t, p) t.tex.SampleLevel(t.smpl, p, 0.0)\",\r\n\t\t\"    #define FxaaTexOff(t, p, o, r) t.tex.SampleLevel(t.smpl, p, 0.0, o)\",\r\n\t\t\"#endif\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"#if (FXAA_HLSL_5 == 1)\",\r\n\t\t\"    #define FxaaInt2 int2\",\r\n\t\t\"    struct FxaaTex { SamplerState smpl; Texture2D tex; };\",\r\n\t\t\"    #define FxaaTexTop(t, p) t.tex.SampleLevel(t.smpl, p, 0.0)\",\r\n\t\t\"    #define FxaaTexOff(t, p, o, r) t.tex.SampleLevel(t.smpl, p, 0.0, o)\",\r\n\t\t\"    #define FxaaTexAlpha4(t, p) t.tex.GatherAlpha(t.smpl, p)\",\r\n\t\t\"    #define FxaaTexOffAlpha4(t, p, o) t.tex.GatherAlpha(t.smpl, p, o)\",\r\n\t\t\"    #define FxaaTexGreen4(t, p) t.tex.GatherGreen(t.smpl, p)\",\r\n\t\t\"    #define FxaaTexOffGreen4(t, p, o) t.tex.GatherGreen(t.smpl, p, o)\",\r\n\t\t\"#endif\",\r\n\t\t\"\",\r\n\t\t\"\",\r\n\t\t\"/*============================================================================\",\r\n\t\t\"                   GREEN AS LUMA OPTION SUPPORT FUNCTION\",\r\n\t\t\"============================================================================*/\",\r\n\t\t\"#if (FXAA_GREEN_AS_LUMA == 0)\",\r\n\t\t\"    FxaaFloat FxaaLuma(FxaaFloat4 rgba) { return rgba.w; }\",\r\n\t\t\"#else\",\r\n\t\t\"    FxaaFloat FxaaLuma(FxaaFloat4 rgba) { return rgba.y; }\",\r\n\t\t\"#endif\",\r\n\t\t\"\",\r\n\t\t\"\",\r\n\t\t\"\",\r\n\t\t\"\",\r\n\t\t\"/*============================================================================\",\r\n\t\t\"\",\r\n\t\t\"                             FXAA3 QUALITY - PC\",\r\n\t\t\"\",\r\n\t\t\"============================================================================*/\",\r\n\t\t\"#if (FXAA_PC == 1)\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"FxaaFloat4 FxaaPixelShader(\",\r\n\t\t\"    //\",\r\n\t\t\"    // Use noperspective interpolation here (turn off perspective interpolation).\",\r\n\t\t\"    // {xy} = center of pixel\",\r\n\t\t\"    FxaaFloat2 pos,\",\r\n\t\t\"    //\",\r\n\t\t\"    // Used only for FXAA Console, and not used on the 360 version.\",\r\n\t\t\"    // Use noperspective interpolation here (turn off perspective interpolation).\",\r\n\t\t\"    // {xy_} = upper left of pixel\",\r\n\t\t\"    // {_zw} = lower right of pixel\",\r\n\t\t\"    FxaaFloat4 fxaaConsolePosPos,\",\r\n\t\t\"    //\",\r\n\t\t\"    // Input color texture.\",\r\n\t\t\"    // {rgb_} = color in linear or perceptual color space\",\r\n\t\t\"    // if (FXAA_GREEN_AS_LUMA == 0)\",\r\n\t\t\"    //     {__a} = luma in perceptual color space (not linear)\",\r\n\t\t\"    FxaaTex tex,\",\r\n\t\t\"    //\",\r\n\t\t\"    // Only used on the optimized 360 version of FXAA Console.\",\r\n\t\t\"    // For everything but 360, just use the same input here as for \\\"tex\\\".\",\r\n\t\t\"    // For 360, same texture, just alias with a 2nd sampler.\",\r\n\t\t\"    // This sampler needs to have an exponent bias of -1.\",\r\n\t\t\"    FxaaTex fxaaConsole360TexExpBiasNegOne,\",\r\n\t\t\"    //\",\r\n\t\t\"    // Only used on the optimized 360 version of FXAA Console.\",\r\n\t\t\"    // For everything but 360, just use the same input here as for \\\"tex\\\".\",\r\n\t\t\"    // For 360, same texture, just alias with a 3nd sampler.\",\r\n\t\t\"    // This sampler needs to have an exponent bias of -2.\",\r\n\t\t\"    FxaaTex fxaaConsole360TexExpBiasNegTwo,\",\r\n\t\t\"    //\",\r\n\t\t\"    // Only used on FXAA Quality.\",\r\n\t\t\"    // This must be from a constant/uniform.\",\r\n\t\t\"    // {x_} = 1.0/screenWidthInPixels\",\r\n\t\t\"    // {_y} = 1.0/screenHeightInPixels\",\r\n\t\t\"    FxaaFloat2 fxaaQualityRcpFrame,\",\r\n\t\t\"    //\",\r\n\t\t\"    // Only used on FXAA Console.\",\r\n\t\t\"    // This must be from a constant/uniform.\",\r\n\t\t\"    // This effects sub-pixel AA quality and inversely sharpness.\",\r\n\t\t\"    //   Where N ranges between,\",\r\n\t\t\"    //     N = 0.50 (default)\",\r\n\t\t\"    //     N = 0.33 (sharper)\",\r\n\t\t\"    // {x__} = -N/screenWidthInPixels\",\r\n\t\t\"    // {_y_} = -N/screenHeightInPixels\",\r\n\t\t\"    // {_z_} =  N/screenWidthInPixels\",\r\n\t\t\"    // {__w} =  N/screenHeightInPixels\",\r\n\t\t\"    FxaaFloat4 fxaaConsoleRcpFrameOpt,\",\r\n\t\t\"    //\",\r\n\t\t\"    // Only used on FXAA Console.\",\r\n\t\t\"    // Not used on 360, but used on PS3 and PC.\",\r\n\t\t\"    // This must be from a constant/uniform.\",\r\n\t\t\"    // {x__} = -2.0/screenWidthInPixels\",\r\n\t\t\"    // {_y_} = -2.0/screenHeightInPixels\",\r\n\t\t\"    // {_z_} =  2.0/screenWidthInPixels\",\r\n\t\t\"    // {__w} =  2.0/screenHeightInPixels\",\r\n\t\t\"    FxaaFloat4 fxaaConsoleRcpFrameOpt2,\",\r\n\t\t\"    //\",\r\n\t\t\"    // Only used on FXAA Console.\",\r\n\t\t\"    // Only used on 360 in place of fxaaConsoleRcpFrameOpt2.\",\r\n\t\t\"    // This must be from a constant/uniform.\",\r\n\t\t\"    // {x__} =  8.0/screenWidthInPixels\",\r\n\t\t\"    // {_y_} =  8.0/screenHeightInPixels\",\r\n\t\t\"    // {_z_} = -4.0/screenWidthInPixels\",\r\n\t\t\"    // {__w} = -4.0/screenHeightInPixels\",\r\n\t\t\"    FxaaFloat4 fxaaConsole360RcpFrameOpt2,\",\r\n\t\t\"    //\",\r\n\t\t\"    // Only used on FXAA Quality.\",\r\n\t\t\"    // This used to be the FXAA_QUALITY_SUBPIX define.\",\r\n\t\t\"    // It is here now to allow easier tuning.\",\r\n\t\t\"    // Choose the amount of sub-pixel aliasing removal.\",\r\n\t\t\"    // This can effect sharpness.\",\r\n\t\t\"    //   1.00 - upper limit (softer)\",\r\n\t\t\"    //   0.75 - default amount of filtering\",\r\n\t\t\"    //   0.50 - lower limit (sharper, less sub-pixel aliasing removal)\",\r\n\t\t\"    //   0.25 - almost off\",\r\n\t\t\"    //   0.00 - completely off\",\r\n\t\t\"    FxaaFloat fxaaQualitySubpix,\",\r\n\t\t\"    //\",\r\n\t\t\"    // Only used on FXAA Quality.\",\r\n\t\t\"    // This used to be the FXAA_QUALITY_EDGE_THRESHOLD define.\",\r\n\t\t\"    // It is here now to allow easier tuning.\",\r\n\t\t\"    // The minimum amount of local contrast required to apply algorithm.\",\r\n\t\t\"    //   0.333 - too little (faster)\",\r\n\t\t\"    //   0.250 - low quality\",\r\n\t\t\"    //   0.166 - default\",\r\n\t\t\"    //   0.125 - high quality\",\r\n\t\t\"    //   0.063 - overkill (slower)\",\r\n\t\t\"    FxaaFloat fxaaQualityEdgeThreshold,\",\r\n\t\t\"    //\",\r\n\t\t\"    // Only used on FXAA Quality.\",\r\n\t\t\"    // This used to be the FXAA_QUALITY_EDGE_THRESHOLD_MIN define.\",\r\n\t\t\"    // It is here now to allow easier tuning.\",\r\n\t\t\"    // Trims the algorithm from processing darks.\",\r\n\t\t\"    //   0.0833 - upper limit (default, the start of visible unfiltered edges)\",\r\n\t\t\"    //   0.0625 - high quality (faster)\",\r\n\t\t\"    //   0.0312 - visible limit (slower)\",\r\n\t\t\"    // Special notes when using FXAA_GREEN_AS_LUMA,\",\r\n\t\t\"    //   Likely want to set this to zero.\",\r\n\t\t\"    //   As colors that are mostly not-green\",\r\n\t\t\"    //   will appear very dark in the green channel!\",\r\n\t\t\"    //   Tune by looking at mostly non-green content,\",\r\n\t\t\"    //   then start at zero and increase until aliasing is a problem.\",\r\n\t\t\"    FxaaFloat fxaaQualityEdgeThresholdMin,\",\r\n\t\t\"    //\",\r\n\t\t\"    // Only used on FXAA Console.\",\r\n\t\t\"    // This used to be the FXAA_CONSOLE_EDGE_SHARPNESS define.\",\r\n\t\t\"    // It is here now to allow easier tuning.\",\r\n\t\t\"    // This does not effect PS3, as this needs to be compiled in.\",\r\n\t\t\"    //   Use FXAA_CONSOLE_PS3_EDGE_SHARPNESS for PS3.\",\r\n\t\t\"    //   Due to the PS3 being ALU bound,\",\r\n\t\t\"    //   there are only three safe values here: 2 and 4 and 8.\",\r\n\t\t\"    //   These options use the shaders ability to a free *|/ by 2|4|8.\",\r\n\t\t\"    // For all other platforms can be a non-power of two.\",\r\n\t\t\"    //   8.0 is sharper (default!!!)\",\r\n\t\t\"    //   4.0 is softer\",\r\n\t\t\"    //   2.0 is really soft (good only for vector graphics inputs)\",\r\n\t\t\"    FxaaFloat fxaaConsoleEdgeSharpness,\",\r\n\t\t\"    //\",\r\n\t\t\"    // Only used on FXAA Console.\",\r\n\t\t\"    // This used to be the FXAA_CONSOLE_EDGE_THRESHOLD define.\",\r\n\t\t\"    // It is here now to allow easier tuning.\",\r\n\t\t\"    // This does not effect PS3, as this needs to be compiled in.\",\r\n\t\t\"    //   Use FXAA_CONSOLE_PS3_EDGE_THRESHOLD for PS3.\",\r\n\t\t\"    //   Due to the PS3 being ALU bound,\",\r\n\t\t\"    //   there are only two safe values here: 1/4 and 1/8.\",\r\n\t\t\"    //   These options use the shaders ability to a free *|/ by 2|4|8.\",\r\n\t\t\"    // The console setting has a different mapping than the quality setting.\",\r\n\t\t\"    // Other platforms can use other values.\",\r\n\t\t\"    //   0.125 leaves less aliasing, but is softer (default!!!)\",\r\n\t\t\"    //   0.25 leaves more aliasing, and is sharper\",\r\n\t\t\"    FxaaFloat fxaaConsoleEdgeThreshold,\",\r\n\t\t\"    //\",\r\n\t\t\"    // Only used on FXAA Console.\",\r\n\t\t\"    // This used to be the FXAA_CONSOLE_EDGE_THRESHOLD_MIN define.\",\r\n\t\t\"    // It is here now to allow easier tuning.\",\r\n\t\t\"    // Trims the algorithm from processing darks.\",\r\n\t\t\"    // The console setting has a different mapping than the quality setting.\",\r\n\t\t\"    // This only applies when FXAA_EARLY_EXIT is 1.\",\r\n\t\t\"    // This does not apply to PS3,\",\r\n\t\t\"    // PS3 was simplified to avoid more shader instructions.\",\r\n\t\t\"    //   0.06 - faster but more aliasing in darks\",\r\n\t\t\"    //   0.05 - default\",\r\n\t\t\"    //   0.04 - slower and less aliasing in darks\",\r\n\t\t\"    // Special notes when using FXAA_GREEN_AS_LUMA,\",\r\n\t\t\"    //   Likely want to set this to zero.\",\r\n\t\t\"    //   As colors that are mostly not-green\",\r\n\t\t\"    //   will appear very dark in the green channel!\",\r\n\t\t\"    //   Tune by looking at mostly non-green content,\",\r\n\t\t\"    //   then start at zero and increase until aliasing is a problem.\",\r\n\t\t\"    FxaaFloat fxaaConsoleEdgeThresholdMin,\",\r\n\t\t\"    //\",\r\n\t\t\"    // Extra constants for 360 FXAA Console only.\",\r\n\t\t\"    // Use zeros or anything else for other platforms.\",\r\n\t\t\"    // These must be in physical constant registers and NOT immedates.\",\r\n\t\t\"    // Immedates will result in compiler un-optimizing.\",\r\n\t\t\"    // {xyzw} = float4(1.0, -1.0, 0.25, -0.25)\",\r\n\t\t\"    FxaaFloat4 fxaaConsole360ConstDir\",\r\n\t\t\") {\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"    FxaaFloat2 posM;\",\r\n\t\t\"    posM.x = pos.x;\",\r\n\t\t\"    posM.y = pos.y;\",\r\n\t\t\"    #if (FXAA_GATHER4_ALPHA == 1)\",\r\n\t\t\"        #if (FXAA_DISCARD == 0)\",\r\n\t\t\"            FxaaFloat4 rgbyM = FxaaTexTop(tex, posM);\",\r\n\t\t\"            #if (FXAA_GREEN_AS_LUMA == 0)\",\r\n\t\t\"                #define lumaM rgbyM.w\",\r\n\t\t\"            #else\",\r\n\t\t\"                #define lumaM rgbyM.y\",\r\n\t\t\"            #endif\",\r\n\t\t\"        #endif\",\r\n\t\t\"        #if (FXAA_GREEN_AS_LUMA == 0)\",\r\n\t\t\"            FxaaFloat4 luma4A = FxaaTexAlpha4(tex, posM);\",\r\n\t\t\"            FxaaFloat4 luma4B = FxaaTexOffAlpha4(tex, posM, FxaaInt2(-1, -1));\",\r\n\t\t\"        #else\",\r\n\t\t\"            FxaaFloat4 luma4A = FxaaTexGreen4(tex, posM);\",\r\n\t\t\"            FxaaFloat4 luma4B = FxaaTexOffGreen4(tex, posM, FxaaInt2(-1, -1));\",\r\n\t\t\"        #endif\",\r\n\t\t\"        #if (FXAA_DISCARD == 1)\",\r\n\t\t\"            #define lumaM luma4A.w\",\r\n\t\t\"        #endif\",\r\n\t\t\"        #define lumaE luma4A.z\",\r\n\t\t\"        #define lumaS luma4A.x\",\r\n\t\t\"        #define lumaSE luma4A.y\",\r\n\t\t\"        #define lumaNW luma4B.w\",\r\n\t\t\"        #define lumaN luma4B.z\",\r\n\t\t\"        #define lumaW luma4B.x\",\r\n\t\t\"    #else\",\r\n\t\t\"        FxaaFloat4 rgbyM = FxaaTexTop(tex, posM);\",\r\n\t\t\"        #if (FXAA_GREEN_AS_LUMA == 0)\",\r\n\t\t\"            #define lumaM rgbyM.w\",\r\n\t\t\"        #else\",\r\n\t\t\"            #define lumaM rgbyM.y\",\r\n\t\t\"        #endif\",\r\n\t\t\"        #if (FXAA_GLSL_100 == 1)\",\r\n\t\t\"          FxaaFloat lumaS = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 0.0, 1.0), fxaaQualityRcpFrame.xy));\",\r\n\t\t\"          FxaaFloat lumaE = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 1.0, 0.0), fxaaQualityRcpFrame.xy));\",\r\n\t\t\"          FxaaFloat lumaN = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 0.0,-1.0), fxaaQualityRcpFrame.xy));\",\r\n\t\t\"          FxaaFloat lumaW = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2(-1.0, 0.0), fxaaQualityRcpFrame.xy));\",\r\n\t\t\"        #else\",\r\n\t\t\"          FxaaFloat lumaS = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 0, 1), fxaaQualityRcpFrame.xy));\",\r\n\t\t\"          FxaaFloat lumaE = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 1, 0), fxaaQualityRcpFrame.xy));\",\r\n\t\t\"          FxaaFloat lumaN = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 0,-1), fxaaQualityRcpFrame.xy));\",\r\n\t\t\"          FxaaFloat lumaW = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(-1, 0), fxaaQualityRcpFrame.xy));\",\r\n\t\t\"        #endif\",\r\n\t\t\"    #endif\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"    FxaaFloat maxSM = max(lumaS, lumaM);\",\r\n\t\t\"    FxaaFloat minSM = min(lumaS, lumaM);\",\r\n\t\t\"    FxaaFloat maxESM = max(lumaE, maxSM);\",\r\n\t\t\"    FxaaFloat minESM = min(lumaE, minSM);\",\r\n\t\t\"    FxaaFloat maxWN = max(lumaN, lumaW);\",\r\n\t\t\"    FxaaFloat minWN = min(lumaN, lumaW);\",\r\n\t\t\"    FxaaFloat rangeMax = max(maxWN, maxESM);\",\r\n\t\t\"    FxaaFloat rangeMin = min(minWN, minESM);\",\r\n\t\t\"    FxaaFloat rangeMaxScaled = rangeMax * fxaaQualityEdgeThreshold;\",\r\n\t\t\"    FxaaFloat range = rangeMax - rangeMin;\",\r\n\t\t\"    FxaaFloat rangeMaxClamped = max(fxaaQualityEdgeThresholdMin, rangeMaxScaled);\",\r\n\t\t\"    FxaaBool earlyExit = range < rangeMaxClamped;\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"    if(earlyExit)\",\r\n\t\t\"        #if (FXAA_DISCARD == 1)\",\r\n\t\t\"            FxaaDiscard;\",\r\n\t\t\"        #else\",\r\n\t\t\"            return rgbyM;\",\r\n\t\t\"        #endif\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"    #if (FXAA_GATHER4_ALPHA == 0)\",\r\n\t\t\"        #if (FXAA_GLSL_100 == 1)\",\r\n\t\t\"          FxaaFloat lumaNW = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2(-1.0,-1.0), fxaaQualityRcpFrame.xy));\",\r\n\t\t\"          FxaaFloat lumaSE = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 1.0, 1.0), fxaaQualityRcpFrame.xy));\",\r\n\t\t\"          FxaaFloat lumaNE = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 1.0,-1.0), fxaaQualityRcpFrame.xy));\",\r\n\t\t\"          FxaaFloat lumaSW = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2(-1.0, 1.0), fxaaQualityRcpFrame.xy));\",\r\n\t\t\"        #else\",\r\n\t\t\"          FxaaFloat lumaNW = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(-1,-1), fxaaQualityRcpFrame.xy));\",\r\n\t\t\"          FxaaFloat lumaSE = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 1, 1), fxaaQualityRcpFrame.xy));\",\r\n\t\t\"          FxaaFloat lumaNE = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 1,-1), fxaaQualityRcpFrame.xy));\",\r\n\t\t\"          FxaaFloat lumaSW = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(-1, 1), fxaaQualityRcpFrame.xy));\",\r\n\t\t\"        #endif\",\r\n\t\t\"    #else\",\r\n\t\t\"        FxaaFloat lumaNE = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(1, -1), fxaaQualityRcpFrame.xy));\",\r\n\t\t\"        FxaaFloat lumaSW = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(-1, 1), fxaaQualityRcpFrame.xy));\",\r\n\t\t\"    #endif\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"    FxaaFloat lumaNS = lumaN + lumaS;\",\r\n\t\t\"    FxaaFloat lumaWE = lumaW + lumaE;\",\r\n\t\t\"    FxaaFloat subpixRcpRange = 1.0/range;\",\r\n\t\t\"    FxaaFloat subpixNSWE = lumaNS + lumaWE;\",\r\n\t\t\"    FxaaFloat edgeHorz1 = (-2.0 * lumaM) + lumaNS;\",\r\n\t\t\"    FxaaFloat edgeVert1 = (-2.0 * lumaM) + lumaWE;\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"    FxaaFloat lumaNESE = lumaNE + lumaSE;\",\r\n\t\t\"    FxaaFloat lumaNWNE = lumaNW + lumaNE;\",\r\n\t\t\"    FxaaFloat edgeHorz2 = (-2.0 * lumaE) + lumaNESE;\",\r\n\t\t\"    FxaaFloat edgeVert2 = (-2.0 * lumaN) + lumaNWNE;\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"    FxaaFloat lumaNWSW = lumaNW + lumaSW;\",\r\n\t\t\"    FxaaFloat lumaSWSE = lumaSW + lumaSE;\",\r\n\t\t\"    FxaaFloat edgeHorz4 = (abs(edgeHorz1) * 2.0) + abs(edgeHorz2);\",\r\n\t\t\"    FxaaFloat edgeVert4 = (abs(edgeVert1) * 2.0) + abs(edgeVert2);\",\r\n\t\t\"    FxaaFloat edgeHorz3 = (-2.0 * lumaW) + lumaNWSW;\",\r\n\t\t\"    FxaaFloat edgeVert3 = (-2.0 * lumaS) + lumaSWSE;\",\r\n\t\t\"    FxaaFloat edgeHorz = abs(edgeHorz3) + edgeHorz4;\",\r\n\t\t\"    FxaaFloat edgeVert = abs(edgeVert3) + edgeVert4;\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"    FxaaFloat subpixNWSWNESE = lumaNWSW + lumaNESE;\",\r\n\t\t\"    FxaaFloat lengthSign = fxaaQualityRcpFrame.x;\",\r\n\t\t\"    FxaaBool horzSpan = edgeHorz >= edgeVert;\",\r\n\t\t\"    FxaaFloat subpixA = subpixNSWE * 2.0 + subpixNWSWNESE;\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"    if(!horzSpan) lumaN = lumaW;\",\r\n\t\t\"    if(!horzSpan) lumaS = lumaE;\",\r\n\t\t\"    if(horzSpan) lengthSign = fxaaQualityRcpFrame.y;\",\r\n\t\t\"    FxaaFloat subpixB = (subpixA * (1.0/12.0)) - lumaM;\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"    FxaaFloat gradientN = lumaN - lumaM;\",\r\n\t\t\"    FxaaFloat gradientS = lumaS - lumaM;\",\r\n\t\t\"    FxaaFloat lumaNN = lumaN + lumaM;\",\r\n\t\t\"    FxaaFloat lumaSS = lumaS + lumaM;\",\r\n\t\t\"    FxaaBool pairN = abs(gradientN) >= abs(gradientS);\",\r\n\t\t\"    FxaaFloat gradient = max(abs(gradientN), abs(gradientS));\",\r\n\t\t\"    if(pairN) lengthSign = -lengthSign;\",\r\n\t\t\"    FxaaFloat subpixC = FxaaSat(abs(subpixB) * subpixRcpRange);\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"    FxaaFloat2 posB;\",\r\n\t\t\"    posB.x = posM.x;\",\r\n\t\t\"    posB.y = posM.y;\",\r\n\t\t\"    FxaaFloat2 offNP;\",\r\n\t\t\"    offNP.x = (!horzSpan) ? 0.0 : fxaaQualityRcpFrame.x;\",\r\n\t\t\"    offNP.y = ( horzSpan) ? 0.0 : fxaaQualityRcpFrame.y;\",\r\n\t\t\"    if(!horzSpan) posB.x += lengthSign * 0.5;\",\r\n\t\t\"    if( horzSpan) posB.y += lengthSign * 0.5;\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"    FxaaFloat2 posN;\",\r\n\t\t\"    posN.x = posB.x - offNP.x * FXAA_QUALITY_P0;\",\r\n\t\t\"    posN.y = posB.y - offNP.y * FXAA_QUALITY_P0;\",\r\n\t\t\"    FxaaFloat2 posP;\",\r\n\t\t\"    posP.x = posB.x + offNP.x * FXAA_QUALITY_P0;\",\r\n\t\t\"    posP.y = posB.y + offNP.y * FXAA_QUALITY_P0;\",\r\n\t\t\"    FxaaFloat subpixD = ((-2.0)*subpixC) + 3.0;\",\r\n\t\t\"    FxaaFloat lumaEndN = FxaaLuma(FxaaTexTop(tex, posN));\",\r\n\t\t\"    FxaaFloat subpixE = subpixC * subpixC;\",\r\n\t\t\"    FxaaFloat lumaEndP = FxaaLuma(FxaaTexTop(tex, posP));\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"    if(!pairN) lumaNN = lumaSS;\",\r\n\t\t\"    FxaaFloat gradientScaled = gradient * 1.0/4.0;\",\r\n\t\t\"    FxaaFloat lumaMM = lumaM - lumaNN * 0.5;\",\r\n\t\t\"    FxaaFloat subpixF = subpixD * subpixE;\",\r\n\t\t\"    FxaaBool lumaMLTZero = lumaMM < 0.0;\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"    lumaEndN -= lumaNN * 0.5;\",\r\n\t\t\"    lumaEndP -= lumaNN * 0.5;\",\r\n\t\t\"    FxaaBool doneN = abs(lumaEndN) >= gradientScaled;\",\r\n\t\t\"    FxaaBool doneP = abs(lumaEndP) >= gradientScaled;\",\r\n\t\t\"    if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P1;\",\r\n\t\t\"    if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P1;\",\r\n\t\t\"    FxaaBool doneNP = (!doneN) || (!doneP);\",\r\n\t\t\"    if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P1;\",\r\n\t\t\"    if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P1;\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"    if(doneNP) {\",\r\n\t\t\"        if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\r\n\t\t\"        if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\r\n\t\t\"        if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\r\n\t\t\"        if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\r\n\t\t\"        doneN = abs(lumaEndN) >= gradientScaled;\",\r\n\t\t\"        doneP = abs(lumaEndP) >= gradientScaled;\",\r\n\t\t\"        if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P2;\",\r\n\t\t\"        if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P2;\",\r\n\t\t\"        doneNP = (!doneN) || (!doneP);\",\r\n\t\t\"        if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P2;\",\r\n\t\t\"        if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P2;\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"        #if (FXAA_QUALITY_PS > 3)\",\r\n\t\t\"        if(doneNP) {\",\r\n\t\t\"            if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\r\n\t\t\"            if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\r\n\t\t\"            if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\r\n\t\t\"            if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\r\n\t\t\"            doneN = abs(lumaEndN) >= gradientScaled;\",\r\n\t\t\"            doneP = abs(lumaEndP) >= gradientScaled;\",\r\n\t\t\"            if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P3;\",\r\n\t\t\"            if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P3;\",\r\n\t\t\"            doneNP = (!doneN) || (!doneP);\",\r\n\t\t\"            if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P3;\",\r\n\t\t\"            if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P3;\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"            #if (FXAA_QUALITY_PS > 4)\",\r\n\t\t\"            if(doneNP) {\",\r\n\t\t\"                if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\r\n\t\t\"                if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\r\n\t\t\"                if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\r\n\t\t\"                if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\r\n\t\t\"                doneN = abs(lumaEndN) >= gradientScaled;\",\r\n\t\t\"                doneP = abs(lumaEndP) >= gradientScaled;\",\r\n\t\t\"                if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P4;\",\r\n\t\t\"                if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P4;\",\r\n\t\t\"                doneNP = (!doneN) || (!doneP);\",\r\n\t\t\"                if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P4;\",\r\n\t\t\"                if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P4;\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"                #if (FXAA_QUALITY_PS > 5)\",\r\n\t\t\"                if(doneNP) {\",\r\n\t\t\"                    if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\r\n\t\t\"                    if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\r\n\t\t\"                    if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\r\n\t\t\"                    if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\r\n\t\t\"                    doneN = abs(lumaEndN) >= gradientScaled;\",\r\n\t\t\"                    doneP = abs(lumaEndP) >= gradientScaled;\",\r\n\t\t\"                    if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P5;\",\r\n\t\t\"                    if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P5;\",\r\n\t\t\"                    doneNP = (!doneN) || (!doneP);\",\r\n\t\t\"                    if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P5;\",\r\n\t\t\"                    if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P5;\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"                    #if (FXAA_QUALITY_PS > 6)\",\r\n\t\t\"                    if(doneNP) {\",\r\n\t\t\"                        if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\r\n\t\t\"                        if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\r\n\t\t\"                        if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\r\n\t\t\"                        if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\r\n\t\t\"                        doneN = abs(lumaEndN) >= gradientScaled;\",\r\n\t\t\"                        doneP = abs(lumaEndP) >= gradientScaled;\",\r\n\t\t\"                        if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P6;\",\r\n\t\t\"                        if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P6;\",\r\n\t\t\"                        doneNP = (!doneN) || (!doneP);\",\r\n\t\t\"                        if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P6;\",\r\n\t\t\"                        if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P6;\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"                        #if (FXAA_QUALITY_PS > 7)\",\r\n\t\t\"                        if(doneNP) {\",\r\n\t\t\"                            if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\r\n\t\t\"                            if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\r\n\t\t\"                            if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\r\n\t\t\"                            if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\r\n\t\t\"                            doneN = abs(lumaEndN) >= gradientScaled;\",\r\n\t\t\"                            doneP = abs(lumaEndP) >= gradientScaled;\",\r\n\t\t\"                            if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P7;\",\r\n\t\t\"                            if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P7;\",\r\n\t\t\"                            doneNP = (!doneN) || (!doneP);\",\r\n\t\t\"                            if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P7;\",\r\n\t\t\"                            if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P7;\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"    #if (FXAA_QUALITY_PS > 8)\",\r\n\t\t\"    if(doneNP) {\",\r\n\t\t\"        if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\r\n\t\t\"        if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\r\n\t\t\"        if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\r\n\t\t\"        if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\r\n\t\t\"        doneN = abs(lumaEndN) >= gradientScaled;\",\r\n\t\t\"        doneP = abs(lumaEndP) >= gradientScaled;\",\r\n\t\t\"        if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P8;\",\r\n\t\t\"        if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P8;\",\r\n\t\t\"        doneNP = (!doneN) || (!doneP);\",\r\n\t\t\"        if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P8;\",\r\n\t\t\"        if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P8;\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"        #if (FXAA_QUALITY_PS > 9)\",\r\n\t\t\"        if(doneNP) {\",\r\n\t\t\"            if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\r\n\t\t\"            if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\r\n\t\t\"            if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\r\n\t\t\"            if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\r\n\t\t\"            doneN = abs(lumaEndN) >= gradientScaled;\",\r\n\t\t\"            doneP = abs(lumaEndP) >= gradientScaled;\",\r\n\t\t\"            if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P9;\",\r\n\t\t\"            if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P9;\",\r\n\t\t\"            doneNP = (!doneN) || (!doneP);\",\r\n\t\t\"            if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P9;\",\r\n\t\t\"            if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P9;\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"            #if (FXAA_QUALITY_PS > 10)\",\r\n\t\t\"            if(doneNP) {\",\r\n\t\t\"                if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\r\n\t\t\"                if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\r\n\t\t\"                if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\r\n\t\t\"                if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\r\n\t\t\"                doneN = abs(lumaEndN) >= gradientScaled;\",\r\n\t\t\"                doneP = abs(lumaEndP) >= gradientScaled;\",\r\n\t\t\"                if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P10;\",\r\n\t\t\"                if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P10;\",\r\n\t\t\"                doneNP = (!doneN) || (!doneP);\",\r\n\t\t\"                if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P10;\",\r\n\t\t\"                if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P10;\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"                #if (FXAA_QUALITY_PS > 11)\",\r\n\t\t\"                if(doneNP) {\",\r\n\t\t\"                    if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\r\n\t\t\"                    if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\r\n\t\t\"                    if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\r\n\t\t\"                    if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\r\n\t\t\"                    doneN = abs(lumaEndN) >= gradientScaled;\",\r\n\t\t\"                    doneP = abs(lumaEndP) >= gradientScaled;\",\r\n\t\t\"                    if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P11;\",\r\n\t\t\"                    if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P11;\",\r\n\t\t\"                    doneNP = (!doneN) || (!doneP);\",\r\n\t\t\"                    if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P11;\",\r\n\t\t\"                    if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P11;\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"                    #if (FXAA_QUALITY_PS > 12)\",\r\n\t\t\"                    if(doneNP) {\",\r\n\t\t\"                        if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\r\n\t\t\"                        if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\r\n\t\t\"                        if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\r\n\t\t\"                        if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\r\n\t\t\"                        doneN = abs(lumaEndN) >= gradientScaled;\",\r\n\t\t\"                        doneP = abs(lumaEndP) >= gradientScaled;\",\r\n\t\t\"                        if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P12;\",\r\n\t\t\"                        if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P12;\",\r\n\t\t\"                        doneNP = (!doneN) || (!doneP);\",\r\n\t\t\"                        if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P12;\",\r\n\t\t\"                        if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P12;\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"                    }\",\r\n\t\t\"                    #endif\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"                }\",\r\n\t\t\"                #endif\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"            }\",\r\n\t\t\"            #endif\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"        }\",\r\n\t\t\"        #endif\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"    }\",\r\n\t\t\"    #endif\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"                        }\",\r\n\t\t\"                        #endif\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"                    }\",\r\n\t\t\"                    #endif\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"                }\",\r\n\t\t\"                #endif\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"            }\",\r\n\t\t\"            #endif\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"        }\",\r\n\t\t\"        #endif\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"    }\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"    FxaaFloat dstN = posM.x - posN.x;\",\r\n\t\t\"    FxaaFloat dstP = posP.x - posM.x;\",\r\n\t\t\"    if(!horzSpan) dstN = posM.y - posN.y;\",\r\n\t\t\"    if(!horzSpan) dstP = posP.y - posM.y;\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"    FxaaBool goodSpanN = (lumaEndN < 0.0) != lumaMLTZero;\",\r\n\t\t\"    FxaaFloat spanLength = (dstP + dstN);\",\r\n\t\t\"    FxaaBool goodSpanP = (lumaEndP < 0.0) != lumaMLTZero;\",\r\n\t\t\"    FxaaFloat spanLengthRcp = 1.0/spanLength;\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"    FxaaBool directionN = dstN < dstP;\",\r\n\t\t\"    FxaaFloat dst = min(dstN, dstP);\",\r\n\t\t\"    FxaaBool goodSpan = directionN ? goodSpanN : goodSpanP;\",\r\n\t\t\"    FxaaFloat subpixG = subpixF * subpixF;\",\r\n\t\t\"    FxaaFloat pixelOffset = (dst * (-spanLengthRcp)) + 0.5;\",\r\n\t\t\"    FxaaFloat subpixH = subpixG * fxaaQualitySubpix;\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"    FxaaFloat pixelOffsetGood = goodSpan ? pixelOffset : 0.0;\",\r\n\t\t\"    FxaaFloat pixelOffsetSubpix = max(pixelOffsetGood, subpixH);\",\r\n\t\t\"    if(!horzSpan) posM.x += pixelOffsetSubpix * lengthSign;\",\r\n\t\t\"    if( horzSpan) posM.y += pixelOffsetSubpix * lengthSign;\",\r\n\t\t\"    #if (FXAA_DISCARD == 1)\",\r\n\t\t\"        return FxaaTexTop(tex, posM);\",\r\n\t\t\"    #else\",\r\n\t\t\"        return FxaaFloat4(FxaaTexTop(tex, posM).xyz, lumaM);\",\r\n\t\t\"    #endif\",\r\n\t\t\"}\",\r\n\t\t\"/*==========================================================================*/\",\r\n\t\t\"#endif\",\r\n\t\t\"\",\r\n\t\t\"void main() {\",\r\n\t\t\"  gl_FragColor = FxaaPixelShader(\",\r\n\t\t\"    vUv,\",\r\n\t\t\"    vec4(0.0),\",\r\n\t\t\"    tDiffuse,\",\r\n\t\t\"    tDiffuse,\",\r\n\t\t\"    tDiffuse,\",\r\n\t\t\"    resolution,\",\r\n\t\t\"    vec4(0.0),\",\r\n\t\t\"    vec4(0.0),\",\r\n\t\t\"    vec4(0.0),\",\r\n\t\t\"    0.75,\",\r\n\t\t\"    0.166,\",\r\n\t\t\"    0.0833,\",\r\n\t\t\"    0.0,\",\r\n\t\t\"    0.0,\",\r\n\t\t\"    0.0,\",\r\n\t\t\"    vec4(0.0)\",\r\n\t\t\"  );\",\r\n\t\t\"\",\r\n\t\t\"  // TODO avoid querying texture twice for same texel\",\r\n\t\t\"  gl_FragColor.a = texture2D(tDiffuse, vUv).a;\",\r\n\t\t\"}\"\r\n\t].join( \"\\n\" )\r\n\r\n};\r\n\r\nexport {\r\n\tFXAAShader\r\n};\r\n","import { _extends as extend } from './extends';\r\nimport { rndInt } from './rndInt';\r\nimport { rndString } from './rndString';\r\nimport { geoToCartesian } from './geoToCartesian';\r\n\r\nlet Util = {\r\n\textend,\r\n\trndInt,\r\n\trndString,\r\n\tgeoToCartesian\r\n};\r\n\r\nexport {\r\n\tUtil\r\n};\r\n","let _extends = ( des, src, over ) => {\r\n\r\n\tlet res = _extend( des, src, over );\r\n\r\n\tfunction _extend( des, src, over ) {\r\n\r\n\t\tlet override = true;\r\n\t\tif ( over === false ) {\r\n\r\n\t\t\toverride = false;\r\n\r\n\t\t}\r\n\t\tif ( src instanceof Array ) {\r\n\r\n\t\t\tfor ( let i = 0, len = src.length; i < len; i ++ )\r\n\t\t\t\t_extend( des, src[ i ], override );\r\n\r\n\t\t}\r\n\t\tfor ( let i in src ) {\r\n\r\n\t\t\tif ( override || ! ( i in des ) ) {\r\n\r\n\t\t\t\tdes[ i ] = src[ i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\treturn des;\r\n\r\n\t}\r\n\tfor ( let i in src ) {\r\n\r\n\t\tdelete res[ i ];\r\n\r\n\t}\r\n\treturn res;\r\n\r\n};\r\n\r\nexport {\r\n\t_extends\r\n};\r\n","let rndInt = ( max ) => {\r\n\r\n\treturn Math.floor( Math.random() * max );\r\n\r\n};\r\nexport {\r\n\trndInt\r\n};\r\n","let rndString = ( len ) => {\r\n\r\n\tif ( len <= 0 ) {\r\n\r\n\t\treturn '';\r\n\r\n\t}\r\n\tlen = len - 1 || 31;\r\n\tlet $chars =\r\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n\tlet maxPos = $chars.length + 1;\r\n\tlet pwd = $chars.charAt( Math.floor( Math.random() * ( maxPos - 10 ) ) );\r\n\tfor ( let i = 0; i < len; i ++ ) {\r\n\r\n\t\tpwd += $chars.charAt( Math.floor( Math.random() * maxPos ) );\r\n\r\n\t}\r\n\treturn pwd;\r\n\r\n};\r\n\r\nexport {\r\n\trndString\r\n};\r\n","import { Vector3 } from 'three';\r\n\r\nlet geoToCartesian = ( lat = 0, lon = 0, radius = 1 ) => {\r\n\r\n\tlat *= Math.PI / 180;\r\n\tlon *= Math.PI / 180;\r\n\treturn new Vector3( - radius * Math.cos( lat ) * Math.cos( lon ),\r\n\t\tradius * Math.sin( lat ),\r\n\t\tradius * Math.cos( lat ) * Math.sin( lon )\r\n\t);\r\n\r\n};\r\n\r\nexport {\r\n\tgeoToCartesian\r\n};\r\n","import { Signal } from './Signal';\r\n\r\n/**\r\n * 由于事件处理\r\n *\r\n * */\r\nclass Events {\r\n\r\n\tconstructor( list ) {\r\n\r\n\t\tlist = list || [ 'press', 'tap', 'pressup', 'pan', 'swipe', 'click',\r\n\t\t\t'mousedown', 'mouseup', 'touchstart', 'touchend', 'touchmove',\r\n\t\t\t'mousemove'\r\n\t\t];\r\n\t\tfor ( let eventItem of list ) {\r\n\r\n\t\t\tthis[ eventItem ] = new Signal( eventItem );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport {\r\n\tEvents\r\n};\r\n"],"names":["DefaultSettings","document","body","undefined","window","devicePixelRatio","NotFunctionError","message","name","Error","LoopManager","cycleLevel","disable","times","functionMap","Map","time","this","forEach","value","func","key","Symbol","set","clear","funcOrKey","_this","delete","EventManager","world","eventManager","isDeep","receivers","raycaster","Raycaster","centerRaycaster","selectedObj","centerSelectedObj","isDetectingEnter","normalEventList","app","options","eventItem","parent","addEventListener","event","raycastCheck","toNovaEvent","Hammer","e","warn","hammer","renderer","domElement","on","hammerEventList","Vector2","clientX","clientY","type","target","vec2","center","x","getWorldWidth","y","getWorldHeight","setFromCamera","camera","receiverMap","Array","intersect","values","intersects","intersectObjects","i","length","object","isPenetrated","events","run","World","clearColor","scene","Scene","logicLoop","renderLoop","PerspectiveCamera","children","renderTargetParameters","LinearFilter","RGBFormat","isRTT","fbo","WebGLRenderTarget","defaultRenderID","add","render","defaultUpdateID","update","width","height","aspect","left","right","top","bottom","updateProjectionMatrix","console","log","VR","display","polyfill","isOpenVR","vrEffect","getVRDisplay","createVREffect","THREE","VREffect","setSize","clientWidth","clientHeight","isOpened","updateId","WebVRPolyfill","config","q","location","search","substring","params","split","param","parseFloat","navigator","getVRDisplays","setPolyfill","then","vrDisplays","_this2","requestPresent","source","remove","App","settings","defaultsDeep","renderOption","setCommonCSS","canvas","parentElement","WebGLRenderer","antialias","precision","alpha","logarithmicDepthBuffer","preserveDrawingBuffer","setClearColor","clearAlpha","state","resize","autoStart","start","VRSupport","setPixelRatio","pixelRatio","write","innerWidth","offsetWidth","innerHeight","offsetHeight","appendChild","destroy","container","isFullScreen","requestFullscreen","msRequestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","exitFullscreen","mozCancelFullScreen","webkitExitFullScreen","msExitFullscreen","webkitCancelFullScreen","closeFullScreen","openFullScreen","img","Image","src","toDataURL","w","open","title","obj","vector","Vector3","clone","position","project","halfWidth","halfHeight","Math","round","Bind","bindMap","defineReactive","funcs","data","val","defineProperty","newVal","FBOWorld","Monitor","option","fullWidth","fullHeight","setViewOffset","viewX","viewY","viewWidth","viewHeight","QRMode","QR8bitByte","mode","parsedData","l","byteArray","code","charCodeAt","push","prototype","concat","apply","unshift","buffer","put","QRCodeModel","typeNumber","errorCorrectLevel","modules","moduleCount","dataCache","dataList","newData","row","col","makeImpl","getBestMaskPattern","test","maskPattern","setupPositionProbePattern","setupPositionAdjustPattern","setupTimingPattern","setupTypeInfo","setupTypeNumber","createData","mapData","r","c","minLostPoint","pattern","lostPoint","QRUtil","getLostPoint","target_mc","instance_name","depth","qr_mc","createEmptyMovieClip","make","beginFill","moveTo","lineTo","endFill","pos","getPatternPosition","j","bits","getBCHTypeNumber","mod","floor","getBCHTypeInfo","inc","bitIndex","byteIndex","dark","getMask","PAD0","PAD1","rsBlocks","QRRSBlock","getRSBlocks","QRBitBuffer","getLength","getLengthInBits","totalDataCount","dataCount","putBit","createBytes","offset","maxDcCount","maxEcCount","dcdata","ecdata","dcCount","ecCount","totalCount","max","rsPoly","getErrorCorrectPolynomial","modPoly","QRPolynomial","modIndex","get","totalCodeCount","index","QRErrorCorrectLevel","QRMaskPattern","d","getBCHDigit","G15","G15_MASK","G18","digit","PATTERN_POSITION_TABLE","errorCorrectLength","a","multiply","QRMath","gexp","qrCode","getModuleCount","sameCount","isDark","count","darkCount","abs","n","LOG_TABLE","EXP_TABLE","num","shift","glog","ratio","RS_BLOCK_TABLE","rsBlock","getRsBlockTable","list","L","M","Q","H","bufIndex","bit","QRCodeLimitLength","_getTypeNumber","sText","nCorrectLevel","replacedText","nType","encodeURI","toString","replace","len","nLimit","QRCode","str","correctLevel","makeCode","oQRCode","addData","size","CorrectLevel","Transitioner","texture","defaults","targetWorld","maskTexture","material","ShaderMaterial","OrthographicCamera","geometry","PlaneBufferGeometry","quad","Mesh","sceneA","sceneB","uniforms","tDiffuse1","tDiffuse2","needChange","threshold","useTexture","tMixTexture","min","transition","mixRatio","View","worldWidth","worldHeight","setViewport","setScissor","setScissorTest","Signal","functionArr","FBOEventMapper","fboWorld","mesh","faceIndexArr","includes","faceIndex","uv","GUI","css","Group","Body","distanceFromCamera","createElement","spriteMaterial","SpriteMaterial","element","Sprite","getWorldDirection","rotation","z","ctx","getContext","fillStyle","backgroundColor","fillRect","CanvasTexture","generateMipmaps","minFilter","magFilter","dispose","scale","Div","_this3","Txt","text","MeshBasicMaterial","map","textAlign","font","fontStyle","fontVariant","fontWeight","fontSize","fontFamily","color","fillText","opacity","LoaderFactory","manager","LoadingManager","Resource","onStart","url","itemsLoaded","itemsTotal","onLoad","onProgress","onError","imageLoader","ImageLoader","textureLoader","TextureLoader","audioListener","AudioListener","sucFunc","errFunc","load","images","err","unloaded","textures","CopyShader","Pass","effectComposer","renderToScreen","enabled","needsSwap","addPass","ShaderPass","shader","textureID","UniformsUtils","defines","vertexShader","fragmentShader","frustumCulled","writeBuffer","readBuffer","RenderPass","overrideMaterial","clearDepth","oldAutoClear","autoClear","oldClearColor","oldClearAlpha","getClearColor","getHex","getClearAlpha","MaskPass","inverse","writeValue","clearValue","context","buffers","setMask","setLocked","stencil","setTest","setOp","REPLACE","setFunc","ALWAYS","setClear","EQUAL","KEEP","ClearMaskPass","EffectComposer","renderTarget","parameters","RGBAFormat","getDrawingBufferSize","renderTarget1","renderTarget2","passes","copyPass","tmp","pass","splice","delta","maskActive","il","stencilFunc","NOTEQUAL","swapBuffers","AfterimageShader","AfterimagePass","damp","textureComp","NearestFilter","textureOld","shaderMaterial","sceneComp","sceneScreen","quadComp","quadScreen","DotScreenShader","join","DotScreenPass","angle","copy","GlitchShader","GlitchPass","goWild","generateHeightmap","curF","generateTrigger","random","randX","THREEMath","randFloat","PI","randInt","dataArr","Float32Array","DataTexture","FloatType","needsUpdate","OutlinePass","resolution","selectedObjects","BlurDirectionX","BlurDirectionY","renderScene","renderCamera","visibleEdgeColor","Color","hiddenEdgeColor","edgeGlow","usePatternTexture","edgeThickness","edgeStrength","downSampleRatio","pulsePeriod","string","pars","resx","resy","maskBufferMaterial","side","DoubleSide","renderTargetMaskBuffer","depthMaterial","MeshDepthMaterial","depthPacking","RGBADepthPacking","blending","NoBlending","prepareMaskMaterial","getPrepareMaskMaterial","isPerspectiveCamera","renderTargetDepthBuffer","renderTargetMaskDownSampleBuffer","renderTargetBlurBuffer1","renderTargetBlurBuffer2","edgeDetectionMaterial","getEdgeDetectionMaterial","renderTargetEdgeBuffer1","renderTargetEdgeBuffer2","separableBlurMaterial1","getSeperableBlurMaterial","separableBlurMaterial2","overlayMaterial","getOverlayMaterial","copyUniforms","materialCopy","tempPulseColor1","tempPulseColor2","textureMatrix","Matrix4","bVisible","gatherSelectedMeshesCallBack","visible","traverse","selectedMeshes","Line","bFound","id","visibility","projectionMatrix","matrixWorldInverse","STENCIL_TEST","changeVisibilityOfSelectedObjects","currentBackground","background","updateTextureMatrix","changeVisibilityOfNonSelectedObjects","near","far","scalar","cos","performance","now","multiplyScalar","patternTexture","enable","maxRadius","AdditiveBlending","WatercolorShader","WatercolorPass","tPaper","wrapS","wrapT","RepeatWrapping","TestShader","TestPass","FXAAShader","Util","des","over","res","_extend","override","$chars","maxPos","pwd","charAt","lat","lon","radius","sin"],"mappings":"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AI,IACtB,CAAE,EAAG,IAAK,IAAK,EAAG,IAAK,KACvB,CAAE,GAAI,GAAI,IACV,CAAE,GAAI,GAAI,GAAI,EAAG,GAAI,IACrB,CAAE,GAAI,GAAI,GAAI,EAAG,GAAI,IACrB,CAAE,EAAG,IAAK,IAAK,EAAG,IAAK,KACvB,CAAE,GAAI,GAAI,IACV,CAAE,EAAG,GAAI,GAAI,GAAI,GAAI,IACrB,CAAE,GAAI,GAAI,IACV,CAAE,EAAG,IAAK,IAAK,EAAG,IAAK,KACvB,CAAE,EAAG,GAAI,GAAI,GAAI,GAAI,IACrB,CAAE,GAAI,GAAI,GAAI,GAAI,GAAI,IACtB,CAAE,GAAI,GAAI,GAAI,GAAI,GAAI,IACtB,CAAE,EAAG,IAAK,IAAK,EAAG,IAAK,KACvB,CAAE,EAAG,GAAI,GAAI,GAAI,GAAI,IACrB,CAAE,GAAI,GAAI,GAAI,GAAI,GAAI,IACtB,CAAE,GAAI,GAAI,GAAI,EAAG,GAAI,IACrB,CAAE,EAAG,IAAK,IAAK,EAAG,IAAK,KACvB,CAAE,EAAG,GAAI,GAAI,GAAI,GAAI,IACrB,CAAE,EAAG,GAAI,GAAI,GAAI,GAAI,IACrB,CAAE,GAAI,GAAI,GAAI,GAAI,GAAI,IACtB,CAAE,GAAI,IAAK,IAAK,EAAG,IAAK,KACxB,CAAE,GAAI,GAAI,GAAI,EAAG,GAAI,IACrB,CAAE,GAAI,GAAI,GAAI,EAAG,GAAI,IACrB,CAAE,GAAI,GAAI,GAAI,EAAG,GAAI,IACrB,CAAE,EAAG,IAAK,IAAK,EAAG,IAAK,KACvB,CAAE,GAAI,GAAI,GAAI,EAAG,GAAI,IACrB,CAAE,EAAG,GAAI,GAAI,GAAI,GAAI,IACrB,CAAE,GAAI,GAAI,GAAI,GAAI,GAAI,IACtB,CAAE,EAAG,IAAK,IAAK,GAAI,IAAK,KACxB,CAAE,EAAG,GAAI,GAAI,GAAI,GAAI,IACrB,CAAE,EAAG,GAAI,GAAI,GAAI,GAAI,IACrB,CAAE,GAAI,GAAI,GAAI,GAAI,GAAI,IACtB,CAAE,EAAG,IAAK,IAAK,EAAG,IAAK,KACvB,CAAE,GAAI,GAAI,GAAI,EAAG,GAAI,IACrB,CAAE,EAAG,GAAI,GAAI,GAAI,GAAI,IACrB,CAAE,GAAI,GAAI,GAAI,GAAI,GAAI,IACtB,CAAE,EAAG,IAAK,IAAK,GAAI,IAAK,KACxB,CAAE,GAAI,GAAI,GAAI,GAAI,GAAI,IACtB,CAAE,GAAI,GAAI,GAAI,GAAI,GAAI,IACtB,CAAE,GAAI,GAAI,GAAI,GAAI,GAAI,IACtB,CAAE,GAAI,IAAK,IAAK,EAAG,IAAK,KACxB,CAAE,EAAG,GAAI,GAAI,GAAI,GAAI,IACrB,CAAE,GAAI,GAAI,GAAI,EAAG,GAAI,IACrB,CAAE,GAAI,GAAI,GAAI,GAAI,GAAI,IACtB,CAAE,GAAI,IAAK,KACX,CAAE,GAAI,GAAI,GAAI,GAAI,GAAI,IACtB,CAAE,GAAI,GAAI,GAAI,GAAI,GAAI,IACtB,CAAE,GAAI,GAAI,GAAI,GAAI,GAAI,IACtB,CAAE,GAAI,IAAK,IAAK,EAAG,IAAK,KACxB,CAAE,GAAI,GAAI,GAAI,GAAI,GAAI,IACtB,CAAE,GAAI,GAAI,GAAI,GAAI,GAAI,IACtB,CAAE,GAAI,GAAI,GAAI,GAAI,GAAI,IACtB,CAAE,GAAI,IAAK,IAAK,EAAG,IAAK,KACxB,CAAE,GAAI,GAAI,GAAI,GAAI,GAAI,IACtB,CAAE,GAAI,GAAI,GAAI,EAAG,GAAI,IACrB,CAAE,GAAI,GAAI,GAAI,EAAG,GAAI,IACrB,CAAE,GAAI,IAAK,IAAK,EAAG,IAAK,KACxB,CAAE,GAAI,GAAI,GAAI,GAAI,GAAI,IACtB,CAAE,GAAI,GAAI,GAAI,GAAI,GAAI,IACtB,CAAE,GAAI,GAAI,GAAI,GAAI,GAAI,IACtB,CAAE,EAAG,IAAK,IAAK,GAAI,IAAK,KACxB,CAAE,EAAG,GAAI,GAAI,GAAI,GAAI,IACrB,CAAE,GAAI,GAAI,GAAI,GAAI,GAAI,IACtB,CAAE,EAAG,GAAI,GAAI,GAAI,GAAI,IACrB,CAAE,GAAI,IAAK,IAAK,EAAG,IAAK,KACxB,CAAE,GAAI,GAAI,GAAI,GAAI,GAAI,IACtB,CAAE,GAAI,GAAI,GAAI,GAAI,GAAI,IACtB,CAAE,GAAI,GAAI,GAAI,GAAI,GAAI,IACtB,CAAE,EA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CA,SACA,iFACA,0BACA,SACA,+CACA,6DACA,4EACA,yEACA,iCACA,SACA,iBACA,kBACA,SACA,gCACA,SACA,iFACA,uBACA,SACA,6CACA,6DACA,SACA,wDACA,yEACA,mEACA,SACA,6BACA,SACA,iFACA,iCACA,SACA,iCACA,SACA,gDACA,2CACA,SACA,gCACA,2CACA,aACA,+BACA,2CACA,aACA,gCACA,2CACA,aACA,qCACA,2CACA,aACA,SACA,iFACA,6BACA,SACA,oDACA,4DACA,SACA,6BACA,uCACA,aACA,gCACA,uCACA,aACA,+BACA,uCACA,aACA,iCACA,uCACA,aACA,SACA,GACA,GACA,iFACA,sDACA,iFACA,qEACA,iFACA,8BACA,SACA,oCACA,uEACA,uDACA,mEACA,SACA,iBACA,iFACA,2EACA,iFACA,8CACA,SACA,eACA,iFACA,8EACA,8DACA,gEACA,kEACA,6DACA,SACA,qCACA,SACA,GACA,GACA,iFACA,GACA,oDACA,GACA,iFACA,GACA,iFACA,4DACA,iFACA,kCACA,gCACA,kCACA,kCACA,mCACA,SACA,iFACA,kCACA,gCACA,kCACA,kCACA,kCACA,mCACA,SACA,iFACA,kCACA,gCACA,kCACA,kCACA,kCACA,kCACA,mCACA,SACA,iFACA,kCACA,gCACA,kCACA,kCACA,kCACA,kCACA,kCACA,mCACA,SACA,iFACA,kCACA,gCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,mCACA,SACA,iFACA,kCACA,gCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,mCACA,SACA,GACA,iFACA,yDACA,iFACA,kCACA,gCACA,kCACA,kCACA,kCACA,SACA,iFACA,kCACA,gCACA,kCACA,kCACA,kCACA,kCACA,SACA,iFACA,kCACA,gCACA,kCACA,kCACA,kCACA,kCACA,kCACA,SACA,iFACA,kCACA,gCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,SACA,iFACA,kCACA,gCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,SACA,iFACA,kCACA,gCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,SACA,iFACA,kCACA,gCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,SACA,iFACA,kCACA,iCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,SACA,iFACA,kCACA,iCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,mCACA,SACA,iFACA,kCACA,iCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,mCACA,mCACA,SACA,GACA,iFACA,sDACA,iFACA,kCACA,iCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,mCACA,mCACA,SACA,GACA,GACA,GACA,iFACA,GACA,8CACA,GACA,iFACA,2EACA,4BACA,kCACA,8BACA,8BACA,8BACA,8BACA,6BACA,6BACA,6BACA,6BACA,6BACA,4CACA,gCACA,QACA,4BACA,mCACA,8BACA,gCACA,gCACA,gCACA,4BACA,8BACA,8BACA,8BACA,qCACA,SACA,iFACA,2BACA,kDACA,kEACA,SACA,iFACA,2BACA,mBACA,uBACA,uBACA,iDACA,6DACA,uDACA,wCACA,0EACA,YACA,2EACA,aACA,oCACA,wDACA,6DACA,4EACA,6DACA,4EACA,aACA,SACA,iFACA,2BACA,2CACA,qDACA,oEACA,oCACA,wDACA,6DACA,4EACA,6DACA,4EACA,aACA,SACA,iFACA,yBACA,8BACA,gCACA,gEACA,4EACA,SACA,iFACA,yBACA,4BACA,4DACA,iEACA,0EACA,SACA,iFACA,yBACA,4BACA,4DACA,iEACA,0EACA,+DACA,wEACA,+DACA,wEACA,SACA,GACA,GACA,iFACA,2DACA,iFACA,gCACA,6DACA,QACA,6DACA,SACA,GACA,GACA,GACA,GACA,iFACA,GACA,kDACA,GACA,iFACA,qBACA,iFACA,8BACA,SACA,oFACA,gCACA,sBACA,SACA,sEACA,oFACA,qCACA,sCACA,oCACA,SACA,8BACA,4DACA,sCACA,iEACA,mBACA,SACA,iEACA,4EACA,+DACA,4DACA,8CACA,SACA,iEACA,4EACA,+DACA,4DACA,8CACA,SACA,oCACA,+CACA,wCACA,yCACA,sCACA,SACA,oCACA,+CACA,oEACA,mCACA,gCACA,gCACA,wCACA,yCACA,wCACA,yCACA,yCACA,SACA,oCACA,kDACA,+CACA,0CACA,2CACA,0CACA,2CACA,0CACA,SACA,oCACA,+DACA,+CACA,0CACA,2CACA,0CACA,2CACA,6CACA,SACA,oCACA,yDACA,gDACA,0DACA,oCACA,uCACA,8CACA,yEACA,6BACA,iCACA,mCACA,SACA,oCACA,iEACA,gDACA,2EACA,uCACA,+BACA,2BACA,gCACA,qCACA,0CACA,SACA,oCACA,qEACA,gDACA,oDACA,iFACA,0CACA,2CACA,sDACA,4CACA,+CACA,uDACA,wDACA,wEACA,6CACA,SACA,oCACA,iEACA,gDACA,oEACA,wDACA,2CACA,iEACA,yEACA,4DACA,uCACA,yBACA,qEACA,0CACA,SACA,oCACA,iEACA,gDACA,oEACA,wDACA,2CACA,6DACA,yEACA,+EACA,+CACA,kEACA,qDACA,0CACA,SACA,oCACA,qEACA,gDACA,oDACA,+EACA,sDACA,qCACA,+DACA,oDACA,0BACA,oDACA,sDACA,4CACA,+CACA,uDACA,wDACA,wEACA,6CACA,SACA,oDACA,yDACA,yEACA,0DACA,iDACA,wCACA,MACA,iFACA,uBACA,sBACA,sBACA,oCACA,kCACA,wDACA,4CACA,wCACA,oBACA,wCACA,qBACA,iBACA,wCACA,4DACA,iFACA,gBACA,4DACA,iFACA,iBACA,kCACA,qCACA,iBACA,iCACA,iCACA,kCACA,kCACA,iCACA,iCACA,YACA,oDACA,wCACA,oCACA,gBACA,oCACA,iBACA,mCACA,8GACA,8GACA,8GACA,8GACA,gBACA,wGACA,wGACA,wGACA,wGACA,iBACA,aACA,iFACA,2CACA,2CACA,4CACA,4CACA,2CACA,2CACA,+CACA,+CACA,sEACA,6CACA,oFACA,oDACA,iFACA,oBACA,kCACA,2BACA,gBACA,4BACA,iBACA,iFACA,oCACA,mCACA,+GACA,+GACA,+GACA,+GACA,gBACA,yGACA,yGACA,yGACA,yGACA,iBACA,YACA,uGACA,uGACA,aACA,iFACA,wCACA,wCACA,4CACA,8CACA,qDACA,qDACA,iFACA,4CACA,4CACA,uDACA,uDACA,iFACA,4CACA,4CACA,qEACA,qEACA,uDACA,uDACA,uDACA,uDACA,iFACA,sDACA,oDACA,gDACA,6DACA,iFACA,mCACA,mCACA,uDACA,0DACA,iFACA,2CACA,2CACA,wCACA,wCACA,yDACA,gEACA,0CACA,kEACA,iFACA,uBACA,uBACA,uBACA,wBACA,2DACA,2DACA,gDACA,gDACA,iFACA,uBACA,mDACA,mDACA,uBACA,mDACA,mDACA,kDACA,4DACA,6CACA,4DACA,iFACA,kCACA,qDACA,+CACA,6CACA,2CACA,iFACA,gCACA,gCACA,wDACA,wDACA,sDACA,sDACA,8CACA,sDACA,sDACA,iFACA,mBACA,oEACA,oEACA,yDACA,yDACA,mDACA,mDACA,0DACA,0DACA,yCACA,0DACA,0DACA,iFACA,oCACA,uBACA,wEACA,wEACA,6DACA,6DACA,uDACA,uDACA,8DACA,8DACA,6CACA,8DACA,8DACA,iFACA,wCACA,2BACA,4EACA,4EACA,iEACA,iEACA,2DACA,2DACA,kEACA,kEACA,iDACA,kEACA,kEACA,iFACA,4CACA,+BACA,gFACA,gFACA,qEACA,qEACA,+DACA,+DACA,sEACA,sEACA,qDACA,sEACA,sEACA,iFACA,gDACA,mCACA,oFACA,oFACA,yEACA,yEACA,mEACA,mEACA,0EACA,0EACA,yDACA,0EACA,0EACA,iFACA,oDACA,uCACA,wFACA,wFACA,6EACA,6EACA,uEACA,uEACA,8EACA,8EACA,6DACA,8EACA,8EACA,iFACA,gCACA,mBACA,oEACA,oEACA,yDACA,yDACA,mDACA,mDACA,0DACA,0DACA,yCACA,0DACA,0DACA,iFACA,oCACA,uBACA,wEACA,wEACA,6DACA,6DACA,uDACA,uDACA,8DACA,8DACA,6CACA,8DACA,8DACA,iFACA,yCACA,2BACA,4EACA,4EACA,iEACA,iEACA,2DACA,2DACA,mEACA,mEACA,iDACA,mEACA,mEACA,iFACA,6CACA,+BACA,gFACA,gFACA,qEACA,qEACA,+DACA,+DACA,uEACA,uEACA,qDACA,uEACA,uEACA,iFACA,iDACA,mCACA,oFACA,oFACA,yEACA,yEACA,mEACA,mEACA,2EACA,2EACA,yDACA,2EACA,2EACA,iFACA,wBACA,6BACA,iFACA,oBACA,yBACA,iFACA,gBACA,qBACA,iFACA,YACA,iBACA,iFACA,QACA,aACA,iFACA,4BACA,iCACA,iFACA,wBACA,6BACA,iFACA,oBACA,yBACA,iFACA,gBACA,qBACA,iFACA,YACA,iBACA,iFACA,QACA,iFACA,wCACA,wCACA,4CACA,4CACA,iFACA,4DACA,4CACA,4DACA,gDACA,iFACA,yCACA,uCACA,8DACA,6CACA,8DACA,uDACA,iFACA,gEACA,mEACA,8DACA,8DACA,8BACA,wCACA,YACA,+DACA,aACA,IACA,iFACA,SACA,GACA,gBACA,oCACA,WACA,iBACA,gBACA,gBACA,gBACA,kBACA,iBACA,iBACA,iBACA,YACA,aACA,cACA,WACA,WACA,WACA,gBACA,OACA,GACA,wDACA,iDACA,KACCA,KAAM,OCrlCL8G,GAAO,QCLI,SAAEC,EAAK1d,EAAK2d,OAEtBC,WAEKC,EAASH,EAAK1d,EAAK2d,OAEvBG,GAAW,MACD,IAATH,OAEO,GAGP3d,aAAerH,UAEb,IAAIK,EAAI,EAAG+R,EAAM/K,EAAI/G,OAAQD,EAAI+R,EAAK/R,MAClC0kB,EAAK1d,EAAKhH,GAAK8kB,OAGpB,IAAI9kB,KAAKgH,GAET8d,GAAgB9kB,KAAK0kB,MAEpB1kB,GAAMgH,EAAKhH,WAKX0kB,EAzBEG,CAASH,EAAK1d,EAAK2d,OA4BvB,IAAI3kB,KAAKgH,SAEP4d,EAAK5kB,UAGN4kB,UCnCK,SAAErW,UAEP1G,KAAK+E,MAAO/E,KAAKwW,SAAW9P,cCFpB,SAAEwD,MAEZA,GAAO,QAEJ,KAGFA,EAAM,GAAK,WACbgT,EACD,iEACCC,EAASD,EAAO9kB,OAAS,EACzBglB,EAAMF,EAAOG,OAAQrd,KAAK+E,MAAO/E,KAAKwW,UAAa2G,EAAS,MACtDhlB,EAAI,EAAGA,EAAI+R,EAAK/R,OAElB+kB,EAAOG,OAAQrd,KAAK+E,MAAO/E,KAAKwW,SAAW2G,WAG5CC,kBCfa,eAAEE,yDAAM,EAAGC,yDAAM,EAAGC,yDAAS,YAE1Cxd,KAAK4W,GAAK,OACV5W,KAAK4W,GAAK,IACV,IAAIlX,WAAW8d,EAASxd,KAAK2b,IAAK2B,GAAQtd,KAAK2b,IAAK4B,GAC1DC,EAASxd,KAAKyd,IAAKH,GACnBE,EAASxd,KAAK2b,IAAK2B,GAAQtd,KAAKyd,IAAKF,yLCAtC,WAAarU,eAELA,GAAQ,CAAE,QAAS,MAAO,UAAW,MAAO,QAAS,QAC3D,YAAa,UAAW,aAAc,WAAY,YAClD,oDAEsBA,iDAAO,KAApBhT,eAEHA,GAAc,IAAIwW,EAAQxW"}